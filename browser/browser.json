{
  "chrome": {
    "booleans": [
      "HTMLAreaElement.noHref",
      "HTMLAreaElement.nohref",
      "HTMLButtonElement.disabled",
      "HTMLButtonElement.formNoValidate",
      "HTMLButtonElement.formnovalidate",
      "HTMLDetailsElement.open",
      "HTMLDialogElement.open",
      "HTMLDirectoryElement.compact",
      "HTMLDListElement.compact",
      "HTMLElement.autofocus",
      "HTMLElement.draggable",
      "HTMLElement.hidden",
      "HTMLElement.inert",
      "HTMLElement.spellcheck",
      "HTMLElement.translate",
      "HTMLFieldSetElement.disabled",
      "HTMLFormElement.noValidate",
      "HTMLFormElement.novalidate",
      "HTMLFrameElement.noResize",
      "HTMLFrameElement.noresize",
      "HTMLHRElement.noShade",
      "HTMLHRElement.noshade",
      "HTMLIFrameElement.adAuctionHeaders",
      "HTMLIFrameElement.adauctionheaders",
      "HTMLIFrameElement.allowFullscreen",
      "HTMLIFrameElement.allowfullscreen",
      "HTMLIFrameElement.allowPaymentRequest",
      "HTMLIFrameElement.allowpaymentrequest",
      "HTMLIFrameElement.browsingTopics",
      "HTMLIFrameElement.browsingtopics",
      "HTMLIFrameElement.credentialless",
      "HTMLIFrameElement.sharedStorageWritable",
      "HTMLIFrameElement.sharedstoragewritable",
      "HTMLImageElement.browsingTopics",
      "HTMLImageElement.browsingtopics",
      "HTMLImageElement.isMap",
      "HTMLImageElement.ismap",
      "HTMLImageElement.sharedStorageWritable",
      "HTMLImageElement.sharedstoragewritable",
      "HTMLInputElement.checked",
      "HTMLInputElement.defaultChecked",
      "HTMLInputElement.disabled",
      "HTMLInputElement.formNoValidate",
      "HTMLInputElement.formnovalidate",
      "HTMLInputElement.incremental",
      "HTMLInputElement.indeterminate",
      "HTMLInputElement.multiple",
      "HTMLInputElement.readOnly",
      "HTMLInputElement.readonly",
      "HTMLInputElement.required",
      "HTMLInputElement.webkitdirectory",
      "HTMLLinkElement.disabled",
      "HTMLMarqueeElement.trueSpeed",
      "HTMLMarqueeElement.truespeed",
      "HTMLMediaElement.autoplay",
      "HTMLMediaElement.controls",
      "HTMLMediaElement.defaultMuted",
      "HTMLMediaElement.disableRemotePlayback",
      "HTMLMediaElement.disableremoteplayback",
      "HTMLMediaElement.loop",
      "HTMLMediaElement.muted",
      "HTMLMediaElement.preservesPitch",
      "HTMLMenuElement.compact",
      "HTMLObjectElement.declare",
      "HTMLOListElement.compact",
      "HTMLOListElement.reversed",
      "HTMLOptGroupElement.disabled",
      "HTMLOptionElement.defaultSelected",
      "HTMLOptionElement.disabled",
      "HTMLOptionElement.selected",
      "HTMLScriptElement.async",
      "HTMLScriptElement.defer",
      "HTMLScriptElement.noModule",
      "HTMLScriptElement.nomodule",
      "HTMLSelectElement.disabled",
      "HTMLSelectElement.multiple",
      "HTMLSelectElement.required",
      "HTMLStyleElement.disabled",
      "HTMLTableCellElement.noWrap",
      "HTMLTableCellElement.nowrap",
      "HTMLTemplateElement.shadowRootClonable",
      "HTMLTemplateElement.shadowrootclonable",
      "HTMLTemplateElement.shadowRootDelegatesFocus",
      "HTMLTemplateElement.shadowrootdelegatesfocus",
      "HTMLTemplateElement.shadowRootSerializable",
      "HTMLTemplateElement.shadowrootserializable",
      "HTMLTextAreaElement.disabled",
      "HTMLTextAreaElement.readOnly",
      "HTMLTextAreaElement.readonly",
      "HTMLTextAreaElement.required",
      "HTMLTrackElement.default",
      "HTMLUListElement.compact",
      "HTMLVideoElement.disablePictureInPicture",
      "HTMLVideoElement.disablepictureinpicture",
      "HTMLVideoElement.playsInline",
      "HTMLVideoElement.playsinline",
      "MathMLElement.autofocus",
      "SVGElement.autofocus",
      "SVGStyleElement.disabled"
    ],
    "dynamic": true,
    "events": [
      "Element.onbeforecopy",
      "Element.onbeforecut",
      "Element.onbeforepaste",
      "Element.onfullscreenchange",
      "Element.onfullscreenerror",
      "Element.onsearch",
      "Element.onwebkitfullscreenchange",
      "Element.onwebkitfullscreenerror",
      "HTMLBodyElement.onafterprint",
      "HTMLBodyElement.onbeforeprint",
      "HTMLBodyElement.onbeforeunload",
      "HTMLBodyElement.onblur",
      "HTMLBodyElement.onerror",
      "HTMLBodyElement.onfocus",
      "HTMLBodyElement.onhashchange",
      "HTMLBodyElement.onlanguagechange",
      "HTMLBodyElement.onload",
      "HTMLBodyElement.onmessage",
      "HTMLBodyElement.onmessageerror",
      "HTMLBodyElement.onoffline",
      "HTMLBodyElement.ononline",
      "HTMLBodyElement.onpagehide",
      "HTMLBodyElement.onpageshow",
      "HTMLBodyElement.onpopstate",
      "HTMLBodyElement.onrejectionhandled",
      "HTMLBodyElement.onresize",
      "HTMLBodyElement.onscroll",
      "HTMLBodyElement.onstorage",
      "HTMLBodyElement.onunhandledrejection",
      "HTMLBodyElement.onunload",
      "HTMLElement.onabort",
      "HTMLElement.onanimationend",
      "HTMLElement.onanimationiteration",
      "HTMLElement.onanimationstart",
      "HTMLElement.onauxclick",
      "HTMLElement.onbeforeinput",
      "HTMLElement.onbeforematch",
      "HTMLElement.onbeforetoggle",
      "HTMLElement.onbeforexrselect",
      "HTMLElement.onblur",
      "HTMLElement.oncancel",
      "HTMLElement.oncanplay",
      "HTMLElement.oncanplaythrough",
      "HTMLElement.onchange",
      "HTMLElement.onclick",
      "HTMLElement.onclose",
      "HTMLElement.oncommand",
      "HTMLElement.oncontentvisibilityautostatechange",
      "HTMLElement.oncontextlost",
      "HTMLElement.oncontextmenu",
      "HTMLElement.oncontextrestored",
      "HTMLElement.oncopy",
      "HTMLElement.oncuechange",
      "HTMLElement.oncut",
      "HTMLElement.ondblclick",
      "HTMLElement.ondrag",
      "HTMLElement.ondragend",
      "HTMLElement.ondragenter",
      "HTMLElement.ondragleave",
      "HTMLElement.ondragover",
      "HTMLElement.ondragstart",
      "HTMLElement.ondrop",
      "HTMLElement.ondurationchange",
      "HTMLElement.onemptied",
      "HTMLElement.onended",
      "HTMLElement.onerror",
      "HTMLElement.onfocus",
      "HTMLElement.onformdata",
      "HTMLElement.ongotpointercapture",
      "HTMLElement.oninput",
      "HTMLElement.oninvalid",
      "HTMLElement.onkeydown",
      "HTMLElement.onkeypress",
      "HTMLElement.onkeyup",
      "HTMLElement.onload",
      "HTMLElement.onloadeddata",
      "HTMLElement.onloadedmetadata",
      "HTMLElement.onloadstart",
      "HTMLElement.onlostpointercapture",
      "HTMLElement.onmousedown",
      "HTMLElement.onmouseenter",
      "HTMLElement.onmouseleave",
      "HTMLElement.onmousemove",
      "HTMLElement.onmouseout",
      "HTMLElement.onmouseover",
      "HTMLElement.onmouseup",
      "HTMLElement.onmousewheel",
      "HTMLElement.onpaste",
      "HTMLElement.onpause",
      "HTMLElement.onplay",
      "HTMLElement.onplaying",
      "HTMLElement.onpointercancel",
      "HTMLElement.onpointerdown",
      "HTMLElement.onpointerenter",
      "HTMLElement.onpointerleave",
      "HTMLElement.onpointermove",
      "HTMLElement.onpointerout",
      "HTMLElement.onpointerover",
      "HTMLElement.onpointerrawupdate",
      "HTMLElement.onpointerup",
      "HTMLElement.onprogress",
      "HTMLElement.onratechange",
      "HTMLElement.onreset",
      "HTMLElement.onresize",
      "HTMLElement.onscroll",
      "HTMLElement.onscrollend",
      "HTMLElement.onscrollsnapchange",
      "HTMLElement.onscrollsnapchanging",
      "HTMLElement.onsecuritypolicyviolation",
      "HTMLElement.onseeked",
      "HTMLElement.onseeking",
      "HTMLElement.onselect",
      "HTMLElement.onselectionchange",
      "HTMLElement.onselectstart",
      "HTMLElement.onslotchange",
      "HTMLElement.onstalled",
      "HTMLElement.onsubmit",
      "HTMLElement.onsuspend",
      "HTMLElement.ontimeupdate",
      "HTMLElement.ontoggle",
      "HTMLElement.ontransitioncancel",
      "HTMLElement.ontransitionend",
      "HTMLElement.ontransitionrun",
      "HTMLElement.ontransitionstart",
      "HTMLElement.onvolumechange",
      "HTMLElement.onwaiting",
      "HTMLElement.onwebkitanimationend",
      "HTMLElement.onwebkitanimationiteration",
      "HTMLElement.onwebkitanimationstart",
      "HTMLElement.onwebkittransitionend",
      "HTMLElement.onwheel",
      "HTMLFrameSetElement.onafterprint",
      "HTMLFrameSetElement.onbeforeprint",
      "HTMLFrameSetElement.onbeforeunload",
      "HTMLFrameSetElement.onblur",
      "HTMLFrameSetElement.onerror",
      "HTMLFrameSetElement.onfocus",
      "HTMLFrameSetElement.onhashchange",
      "HTMLFrameSetElement.onlanguagechange",
      "HTMLFrameSetElement.onload",
      "HTMLFrameSetElement.onmessage",
      "HTMLFrameSetElement.onmessageerror",
      "HTMLFrameSetElement.onoffline",
      "HTMLFrameSetElement.ononline",
      "HTMLFrameSetElement.onpagehide",
      "HTMLFrameSetElement.onpageshow",
      "HTMLFrameSetElement.onpopstate",
      "HTMLFrameSetElement.onrejectionhandled",
      "HTMLFrameSetElement.onresize",
      "HTMLFrameSetElement.onscroll",
      "HTMLFrameSetElement.onstorage",
      "HTMLFrameSetElement.onunhandledrejection",
      "HTMLFrameSetElement.onunload",
      "HTMLMediaElement.onencrypted",
      "HTMLMediaElement.onwaitingforkey",
      "HTMLVideoElement.onenterpictureinpicture",
      "HTMLVideoElement.onleavepictureinpicture",
      "MathMLElement.onabort",
      "MathMLElement.onanimationend",
      "MathMLElement.onanimationiteration",
      "MathMLElement.onanimationstart",
      "MathMLElement.onauxclick",
      "MathMLElement.onbeforeinput",
      "MathMLElement.onbeforematch",
      "MathMLElement.onbeforetoggle",
      "MathMLElement.onbeforexrselect",
      "MathMLElement.onblur",
      "MathMLElement.oncancel",
      "MathMLElement.oncanplay",
      "MathMLElement.oncanplaythrough",
      "MathMLElement.onchange",
      "MathMLElement.onclick",
      "MathMLElement.onclose",
      "MathMLElement.oncommand",
      "MathMLElement.oncontentvisibilityautostatechange",
      "MathMLElement.oncontextlost",
      "MathMLElement.oncontextmenu",
      "MathMLElement.oncontextrestored",
      "MathMLElement.oncopy",
      "MathMLElement.oncuechange",
      "MathMLElement.oncut",
      "MathMLElement.ondblclick",
      "MathMLElement.ondrag",
      "MathMLElement.ondragend",
      "MathMLElement.ondragenter",
      "MathMLElement.ondragleave",
      "MathMLElement.ondragover",
      "MathMLElement.ondragstart",
      "MathMLElement.ondrop",
      "MathMLElement.ondurationchange",
      "MathMLElement.onemptied",
      "MathMLElement.onended",
      "MathMLElement.onerror",
      "MathMLElement.onfocus",
      "MathMLElement.onformdata",
      "MathMLElement.ongotpointercapture",
      "MathMLElement.oninput",
      "MathMLElement.oninvalid",
      "MathMLElement.onkeydown",
      "MathMLElement.onkeypress",
      "MathMLElement.onkeyup",
      "MathMLElement.onload",
      "MathMLElement.onloadeddata",
      "MathMLElement.onloadedmetadata",
      "MathMLElement.onloadstart",
      "MathMLElement.onlostpointercapture",
      "MathMLElement.onmousedown",
      "MathMLElement.onmouseenter",
      "MathMLElement.onmouseleave",
      "MathMLElement.onmousemove",
      "MathMLElement.onmouseout",
      "MathMLElement.onmouseover",
      "MathMLElement.onmouseup",
      "MathMLElement.onmousewheel",
      "MathMLElement.onpaste",
      "MathMLElement.onpause",
      "MathMLElement.onplay",
      "MathMLElement.onplaying",
      "MathMLElement.onpointercancel",
      "MathMLElement.onpointerdown",
      "MathMLElement.onpointerenter",
      "MathMLElement.onpointerleave",
      "MathMLElement.onpointermove",
      "MathMLElement.onpointerout",
      "MathMLElement.onpointerover",
      "MathMLElement.onpointerrawupdate",
      "MathMLElement.onpointerup",
      "MathMLElement.onprogress",
      "MathMLElement.onratechange",
      "MathMLElement.onreset",
      "MathMLElement.onresize",
      "MathMLElement.onscroll",
      "MathMLElement.onscrollend",
      "MathMLElement.onscrollsnapchange",
      "MathMLElement.onscrollsnapchanging",
      "MathMLElement.onsecuritypolicyviolation",
      "MathMLElement.onseeked",
      "MathMLElement.onseeking",
      "MathMLElement.onselect",
      "MathMLElement.onselectionchange",
      "MathMLElement.onselectstart",
      "MathMLElement.onslotchange",
      "MathMLElement.onstalled",
      "MathMLElement.onsubmit",
      "MathMLElement.onsuspend",
      "MathMLElement.ontimeupdate",
      "MathMLElement.ontoggle",
      "MathMLElement.ontransitioncancel",
      "MathMLElement.ontransitionend",
      "MathMLElement.ontransitionrun",
      "MathMLElement.ontransitionstart",
      "MathMLElement.onvolumechange",
      "MathMLElement.onwaiting",
      "MathMLElement.onwebkitanimationend",
      "MathMLElement.onwebkitanimationiteration",
      "MathMLElement.onwebkitanimationstart",
      "MathMLElement.onwebkittransitionend",
      "MathMLElement.onwheel",
      "SVGAnimationElement.onbegin",
      "SVGAnimationElement.onend",
      "SVGAnimationElement.onrepeat",
      "SVGElement.onabort",
      "SVGElement.onanimationend",
      "SVGElement.onanimationiteration",
      "SVGElement.onanimationstart",
      "SVGElement.onauxclick",
      "SVGElement.onbeforeinput",
      "SVGElement.onbeforematch",
      "SVGElement.onbeforetoggle",
      "SVGElement.onbeforexrselect",
      "SVGElement.onblur",
      "SVGElement.oncancel",
      "SVGElement.oncanplay",
      "SVGElement.oncanplaythrough",
      "SVGElement.onchange",
      "SVGElement.onclick",
      "SVGElement.onclose",
      "SVGElement.oncommand",
      "SVGElement.oncontentvisibilityautostatechange",
      "SVGElement.oncontextlost",
      "SVGElement.oncontextmenu",
      "SVGElement.oncontextrestored",
      "SVGElement.oncopy",
      "SVGElement.oncuechange",
      "SVGElement.oncut",
      "SVGElement.ondblclick",
      "SVGElement.ondrag",
      "SVGElement.ondragend",
      "SVGElement.ondragenter",
      "SVGElement.ondragleave",
      "SVGElement.ondragover",
      "SVGElement.ondragstart",
      "SVGElement.ondrop",
      "SVGElement.ondurationchange",
      "SVGElement.onemptied",
      "SVGElement.onended",
      "SVGElement.onerror",
      "SVGElement.onfocus",
      "SVGElement.onformdata",
      "SVGElement.ongotpointercapture",
      "SVGElement.oninput",
      "SVGElement.oninvalid",
      "SVGElement.onkeydown",
      "SVGElement.onkeypress",
      "SVGElement.onkeyup",
      "SVGElement.onload",
      "SVGElement.onloadeddata",
      "SVGElement.onloadedmetadata",
      "SVGElement.onloadstart",
      "SVGElement.onlostpointercapture",
      "SVGElement.onmousedown",
      "SVGElement.onmouseenter",
      "SVGElement.onmouseleave",
      "SVGElement.onmousemove",
      "SVGElement.onmouseout",
      "SVGElement.onmouseover",
      "SVGElement.onmouseup",
      "SVGElement.onmousewheel",
      "SVGElement.onpaste",
      "SVGElement.onpause",
      "SVGElement.onplay",
      "SVGElement.onplaying",
      "SVGElement.onpointercancel",
      "SVGElement.onpointerdown",
      "SVGElement.onpointerenter",
      "SVGElement.onpointerleave",
      "SVGElement.onpointermove",
      "SVGElement.onpointerout",
      "SVGElement.onpointerover",
      "SVGElement.onpointerrawupdate",
      "SVGElement.onpointerup",
      "SVGElement.onprogress",
      "SVGElement.onratechange",
      "SVGElement.onreset",
      "SVGElement.onresize",
      "SVGElement.onscroll",
      "SVGElement.onscrollend",
      "SVGElement.onscrollsnapchange",
      "SVGElement.onscrollsnapchanging",
      "SVGElement.onsecuritypolicyviolation",
      "SVGElement.onseeked",
      "SVGElement.onseeking",
      "SVGElement.onselect",
      "SVGElement.onselectionchange",
      "SVGElement.onselectstart",
      "SVGElement.onslotchange",
      "SVGElement.onstalled",
      "SVGElement.onsubmit",
      "SVGElement.onsuspend",
      "SVGElement.ontimeupdate",
      "SVGElement.ontoggle",
      "SVGElement.ontransitioncancel",
      "SVGElement.ontransitionend",
      "SVGElement.ontransitionrun",
      "SVGElement.ontransitionstart",
      "SVGElement.onvolumechange",
      "SVGElement.onwaiting",
      "SVGElement.onwebkitanimationend",
      "SVGElement.onwebkitanimationiteration",
      "SVGElement.onwebkitanimationstart",
      "SVGElement.onwebkittransitionend",
      "SVGElement.onwheel"
    ],
    "html": {
      "a": {
        "booleans": [],
        "events": [],
        "keys": {
          "attributionSrc": {
            "attr": false,
            "attrName": "attributionsrc",
            "keyInterfaceName": "HTMLAnchorElement",
            "name": "attributionSrc",
            "prop": true,
            "propName": "attributionSrc",
            "readonly": false,
            "value": "string"
          },
          "attributionsrc": {
            "attr": true,
            "attrName": "attributionsrc",
            "keyInterfaceName": "HTMLAnchorElement",
            "name": "attributionsrc",
            "prop": false,
            "propName": "attributionSrc",
            "readonly": false,
            "value": "string"
          },
          "charset": {
            "attr": true,
            "attrName": "charset",
            "keyInterfaceName": "HTMLAnchorElement",
            "name": "charset",
            "prop": true,
            "propName": "charset",
            "readonly": false,
            "value": "string"
          },
          "coords": {
            "attr": true,
            "attrName": "coords",
            "keyInterfaceName": "HTMLAnchorElement",
            "name": "coords",
            "prop": true,
            "propName": "coords",
            "readonly": false,
            "value": "string"
          },
          "download": {
            "attr": true,
            "attrName": "download",
            "keyInterfaceName": "HTMLAnchorElement",
            "name": "download",
            "prop": true,
            "propName": "download",
            "readonly": false,
            "value": "string"
          },
          "hash": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLAnchorElement",
            "name": "hash",
            "prop": true,
            "propName": "hash",
            "readonly": false,
            "value": "string"
          },
          "host": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLAnchorElement",
            "name": "host",
            "prop": true,
            "propName": "host",
            "readonly": false,
            "value": "string"
          },
          "hostname": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLAnchorElement",
            "name": "hostname",
            "prop": true,
            "propName": "hostname",
            "readonly": false,
            "value": "string"
          },
          "href": {
            "attr": true,
            "attrName": "href",
            "keyInterfaceName": "HTMLAnchorElement",
            "name": "href",
            "prop": true,
            "propName": "href",
            "readonly": false,
            "value": "string"
          },
          "hreflang": {
            "attr": true,
            "attrName": "hreflang",
            "keyInterfaceName": "HTMLAnchorElement",
            "name": "hreflang",
            "prop": true,
            "propName": "hreflang",
            "readonly": false,
            "value": "string"
          },
          "name": {
            "attr": true,
            "attrName": "name",
            "keyInterfaceName": "HTMLAnchorElement",
            "name": "name",
            "prop": true,
            "propName": "name",
            "readonly": false,
            "value": "string"
          },
          "password": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLAnchorElement",
            "name": "password",
            "prop": true,
            "propName": "password",
            "readonly": false,
            "value": "string"
          },
          "pathname": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLAnchorElement",
            "name": "pathname",
            "prop": true,
            "propName": "pathname",
            "readonly": false,
            "value": "string"
          },
          "ping": {
            "attr": true,
            "attrName": "ping",
            "keyInterfaceName": "HTMLAnchorElement",
            "name": "ping",
            "prop": true,
            "propName": "ping",
            "readonly": false,
            "value": "string"
          },
          "port": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLAnchorElement",
            "name": "port",
            "prop": true,
            "propName": "port",
            "readonly": false,
            "value": "string"
          },
          "protocol": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLAnchorElement",
            "name": "protocol",
            "prop": true,
            "propName": "protocol",
            "readonly": false,
            "value": "string"
          },
          "referrerPolicy": {
            "attr": false,
            "attrName": "referrerpolicy",
            "keyInterfaceName": "HTMLAnchorElement",
            "name": "referrerPolicy",
            "prop": true,
            "propName": "referrerPolicy",
            "readonly": false,
            "value": "string"
          },
          "referrerpolicy": {
            "attr": true,
            "attrName": "referrerpolicy",
            "keyInterfaceName": "HTMLAnchorElement",
            "name": "referrerpolicy",
            "prop": false,
            "propName": "referrerPolicy",
            "readonly": false,
            "value": "string"
          },
          "rel": {
            "attr": true,
            "attrName": "rel",
            "keyInterfaceName": "HTMLAnchorElement",
            "name": "rel",
            "prop": true,
            "propName": "relList",
            "readonly": false,
            "value": "string"
          },
          "relList": {
            "attr": false,
            "attrName": "rel",
            "keyInterfaceName": "HTMLAnchorElement",
            "name": "relList",
            "prop": true,
            "propName": "relList",
            "readonly": false,
            "value": "string"
          },
          "rev": {
            "attr": true,
            "attrName": "rev",
            "keyInterfaceName": "HTMLAnchorElement",
            "name": "rev",
            "prop": true,
            "propName": "rev",
            "readonly": false,
            "value": "string"
          },
          "search": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLAnchorElement",
            "name": "search",
            "prop": true,
            "propName": "search",
            "readonly": false,
            "value": "string"
          },
          "shape": {
            "attr": true,
            "attrName": "shape",
            "keyInterfaceName": "HTMLAnchorElement",
            "name": "shape",
            "prop": true,
            "propName": "shape",
            "readonly": false,
            "value": "string"
          },
          "target": {
            "attr": true,
            "attrName": "target",
            "keyInterfaceName": "HTMLAnchorElement",
            "name": "target",
            "prop": true,
            "propName": "target",
            "readonly": false,
            "value": "string"
          },
          "text": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLAnchorElement",
            "name": "text",
            "prop": true,
            "propName": "text",
            "readonly": false,
            "value": "string"
          },
          "type": {
            "attr": true,
            "attrName": "type",
            "keyInterfaceName": "HTMLAnchorElement",
            "name": "type",
            "prop": true,
            "propName": "type",
            "readonly": false,
            "value": "string"
          },
          "username": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLAnchorElement",
            "name": "username",
            "prop": true,
            "propName": "username",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [
          "HTMLAnchorElement.origin"
        ],
        "tagInterfaceName": "HTMLAnchorElement"
      },
      "abbr": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "acronym": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "address": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "applet": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLUnknownElement"
      },
      "area": {
        "booleans": [
          "HTMLAreaElement.noHref",
          "HTMLAreaElement.nohref"
        ],
        "events": [],
        "keys": {
          "alt": {
            "attr": true,
            "attrName": "alt",
            "keyInterfaceName": "HTMLAreaElement",
            "name": "alt",
            "prop": true,
            "propName": "alt",
            "readonly": false,
            "value": "string"
          },
          "attributionSrc": {
            "attr": false,
            "attrName": "attributionsrc",
            "keyInterfaceName": "HTMLAreaElement",
            "name": "attributionSrc",
            "prop": true,
            "propName": "attributionSrc",
            "readonly": false,
            "value": "string"
          },
          "attributionsrc": {
            "attr": true,
            "attrName": "attributionsrc",
            "keyInterfaceName": "HTMLAreaElement",
            "name": "attributionsrc",
            "prop": false,
            "propName": "attributionSrc",
            "readonly": false,
            "value": "string"
          },
          "coords": {
            "attr": true,
            "attrName": "coords",
            "keyInterfaceName": "HTMLAreaElement",
            "name": "coords",
            "prop": true,
            "propName": "coords",
            "readonly": false,
            "value": "string"
          },
          "download": {
            "attr": true,
            "attrName": "download",
            "keyInterfaceName": "HTMLAreaElement",
            "name": "download",
            "prop": true,
            "propName": "download",
            "readonly": false,
            "value": "string"
          },
          "hash": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLAreaElement",
            "name": "hash",
            "prop": true,
            "propName": "hash",
            "readonly": false,
            "value": "string"
          },
          "host": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLAreaElement",
            "name": "host",
            "prop": true,
            "propName": "host",
            "readonly": false,
            "value": "string"
          },
          "hostname": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLAreaElement",
            "name": "hostname",
            "prop": true,
            "propName": "hostname",
            "readonly": false,
            "value": "string"
          },
          "href": {
            "attr": true,
            "attrName": "href",
            "keyInterfaceName": "HTMLAreaElement",
            "name": "href",
            "prop": true,
            "propName": "href",
            "readonly": false,
            "value": "string"
          },
          "noHref": {
            "attr": false,
            "attrName": "nohref",
            "keyInterfaceName": "HTMLAreaElement",
            "name": "noHref",
            "prop": true,
            "propName": "noHref",
            "readonly": false,
            "value": "boolean"
          },
          "nohref": {
            "attr": true,
            "attrName": "nohref",
            "keyInterfaceName": "HTMLAreaElement",
            "name": "nohref",
            "prop": false,
            "propName": "noHref",
            "readonly": false,
            "value": "boolean"
          },
          "password": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLAreaElement",
            "name": "password",
            "prop": true,
            "propName": "password",
            "readonly": false,
            "value": "string"
          },
          "pathname": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLAreaElement",
            "name": "pathname",
            "prop": true,
            "propName": "pathname",
            "readonly": false,
            "value": "string"
          },
          "ping": {
            "attr": true,
            "attrName": "ping",
            "keyInterfaceName": "HTMLAreaElement",
            "name": "ping",
            "prop": true,
            "propName": "ping",
            "readonly": false,
            "value": "string"
          },
          "port": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLAreaElement",
            "name": "port",
            "prop": true,
            "propName": "port",
            "readonly": false,
            "value": "string"
          },
          "protocol": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLAreaElement",
            "name": "protocol",
            "prop": true,
            "propName": "protocol",
            "readonly": false,
            "value": "string"
          },
          "referrerPolicy": {
            "attr": false,
            "attrName": "referrerpolicy",
            "keyInterfaceName": "HTMLAreaElement",
            "name": "referrerPolicy",
            "prop": true,
            "propName": "referrerPolicy",
            "readonly": false,
            "value": "string"
          },
          "referrerpolicy": {
            "attr": true,
            "attrName": "referrerpolicy",
            "keyInterfaceName": "HTMLAreaElement",
            "name": "referrerpolicy",
            "prop": false,
            "propName": "referrerPolicy",
            "readonly": false,
            "value": "string"
          },
          "rel": {
            "attr": true,
            "attrName": "rel",
            "keyInterfaceName": "HTMLAreaElement",
            "name": "rel",
            "prop": true,
            "propName": "relList",
            "readonly": false,
            "value": "string"
          },
          "relList": {
            "attr": false,
            "attrName": "rel",
            "keyInterfaceName": "HTMLAreaElement",
            "name": "relList",
            "prop": true,
            "propName": "relList",
            "readonly": false,
            "value": "string"
          },
          "search": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLAreaElement",
            "name": "search",
            "prop": true,
            "propName": "search",
            "readonly": false,
            "value": "string"
          },
          "shape": {
            "attr": true,
            "attrName": "shape",
            "keyInterfaceName": "HTMLAreaElement",
            "name": "shape",
            "prop": true,
            "propName": "shape",
            "readonly": false,
            "value": "string"
          },
          "target": {
            "attr": true,
            "attrName": "target",
            "keyInterfaceName": "HTMLAreaElement",
            "name": "target",
            "prop": true,
            "propName": "target",
            "readonly": false,
            "value": "string"
          },
          "username": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLAreaElement",
            "name": "username",
            "prop": true,
            "propName": "username",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [
          "HTMLAreaElement.origin"
        ],
        "tagInterfaceName": "HTMLAreaElement"
      },
      "article": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "aside": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "audio": {
        "booleans": [
          "HTMLMediaElement.autoplay",
          "HTMLMediaElement.controls",
          "HTMLMediaElement.defaultMuted",
          "HTMLMediaElement.disableRemotePlayback",
          "HTMLMediaElement.disableremoteplayback",
          "HTMLMediaElement.loop",
          "HTMLMediaElement.muted",
          "HTMLMediaElement.muted",
          "HTMLMediaElement.preservesPitch"
        ],
        "events": [
          "HTMLMediaElement.onencrypted",
          "HTMLMediaElement.onwaitingforkey"
        ],
        "keys": {
          "autoplay": {
            "attr": true,
            "attrName": "autoplay",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "autoplay",
            "prop": true,
            "propName": "autoplay",
            "readonly": false,
            "value": "boolean"
          },
          "controls": {
            "attr": true,
            "attrName": "controls",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "controls",
            "prop": true,
            "propName": "controls",
            "readonly": false,
            "value": "boolean"
          },
          "controlsList": {
            "attr": false,
            "attrName": "controlslist",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "controlsList",
            "prop": true,
            "propName": "controlsList",
            "readonly": false,
            "value": "string"
          },
          "controlslist": {
            "attr": true,
            "attrName": "controlslist",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "controlslist",
            "prop": false,
            "propName": "controlsList",
            "readonly": false,
            "value": "string"
          },
          "crossOrigin": {
            "attr": false,
            "attrName": "crossorigin",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "crossOrigin",
            "prop": true,
            "propName": "crossOrigin",
            "readonly": false,
            "value": "string"
          },
          "crossorigin": {
            "attr": true,
            "attrName": "crossorigin",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "crossorigin",
            "prop": false,
            "propName": "crossOrigin",
            "readonly": false,
            "value": "string"
          },
          "currentTime": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "currentTime",
            "prop": true,
            "propName": "currentTime",
            "readonly": false,
            "value": "number"
          },
          "defaultMuted": {
            "attr": false,
            "attrName": "muted",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "defaultMuted",
            "prop": true,
            "propName": "defaultMuted",
            "readonly": false,
            "value": "boolean"
          },
          "defaultPlaybackRate": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "defaultPlaybackRate",
            "prop": true,
            "propName": "defaultPlaybackRate",
            "readonly": false,
            "value": "number"
          },
          "disableRemotePlayback": {
            "attr": false,
            "attrName": "disableremoteplayback",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "disableRemotePlayback",
            "prop": true,
            "propName": "disableRemotePlayback",
            "readonly": false,
            "value": "boolean"
          },
          "disableremoteplayback": {
            "attr": true,
            "attrName": "disableremoteplayback",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "disableremoteplayback",
            "prop": false,
            "propName": "disableRemotePlayback",
            "readonly": false,
            "value": "boolean"
          },
          "loop": {
            "attr": true,
            "attrName": "loop",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "loop",
            "prop": true,
            "propName": "loop",
            "readonly": false,
            "value": "boolean"
          },
          "muted": {
            "attr": true,
            "attrName": "muted",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "muted",
            "prop": true,
            "propName": "defaultMuted",
            "readonly": false,
            "value": "boolean"
          },
          "onencrypted": {
            "attr": true,
            "attrName": "onencrypted",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "onencrypted",
            "prop": true,
            "propName": "onencrypted",
            "readonly": false,
            "value": "event"
          },
          "onwaitingforkey": {
            "attr": true,
            "attrName": "onwaitingforkey",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "onwaitingforkey",
            "prop": true,
            "propName": "onwaitingforkey",
            "readonly": false,
            "value": "event"
          },
          "playbackRate": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "playbackRate",
            "prop": true,
            "propName": "playbackRate",
            "readonly": false,
            "value": "number"
          },
          "preload": {
            "attr": true,
            "attrName": "preload",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "preload",
            "prop": true,
            "propName": "preload",
            "readonly": false,
            "value": "string"
          },
          "preservesPitch": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "preservesPitch",
            "prop": true,
            "propName": "preservesPitch",
            "readonly": false,
            "value": "boolean"
          },
          "src": {
            "attr": true,
            "attrName": "src",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "src",
            "prop": true,
            "propName": "src",
            "readonly": false,
            "value": "string"
          },
          "srcObject": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "srcObject",
            "prop": true,
            "propName": "srcObject",
            "readonly": false,
            "value": "MediaStream | MediaSource | Blob | File"
          },
          "volume": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "volume",
            "prop": true,
            "propName": "volume",
            "readonly": false,
            "value": "number"
          }
        },
        "readonly": [
          "HTMLMediaElement.buffered",
          "HTMLMediaElement.currentSrc",
          "HTMLMediaElement.duration",
          "HTMLMediaElement.ended",
          "HTMLMediaElement.error",
          "HTMLMediaElement.mediaKeys",
          "HTMLMediaElement.networkState",
          "HTMLMediaElement.paused",
          "HTMLMediaElement.played",
          "HTMLMediaElement.readyState",
          "HTMLMediaElement.remote",
          "HTMLMediaElement.seekable",
          "HTMLMediaElement.seeking",
          "HTMLMediaElement.sinkId",
          "HTMLMediaElement.textTracks",
          "HTMLMediaElement.webkitAudioDecodedByteCount",
          "HTMLMediaElement.webkitVideoDecodedByteCount"
        ],
        "tagInterfaceName": "HTMLAudioElement"
      },
      "b": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "base": {
        "booleans": [],
        "events": [],
        "keys": {
          "href": {
            "attr": true,
            "attrName": "href",
            "keyInterfaceName": "HTMLBaseElement",
            "name": "href",
            "prop": true,
            "propName": "href",
            "readonly": false,
            "value": "string"
          },
          "target": {
            "attr": true,
            "attrName": "target",
            "keyInterfaceName": "HTMLBaseElement",
            "name": "target",
            "prop": true,
            "propName": "target",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLBaseElement"
      },
      "basefont": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "bdi": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "bdo": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "bgsound": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLUnknownElement"
      },
      "big": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "blink": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLUnknownElement"
      },
      "blockquote": {
        "booleans": [],
        "events": [],
        "keys": {
          "cite": {
            "attr": true,
            "attrName": "cite",
            "keyInterfaceName": "HTMLQuoteElement",
            "name": "cite",
            "prop": true,
            "propName": "cite",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLQuoteElement"
      },
      "body": {
        "booleans": [],
        "events": [
          "HTMLBodyElement.onafterprint",
          "HTMLBodyElement.onbeforeprint",
          "HTMLBodyElement.onbeforeunload",
          "HTMLBodyElement.onblur",
          "HTMLBodyElement.onerror",
          "HTMLBodyElement.onfocus",
          "HTMLBodyElement.onhashchange",
          "HTMLBodyElement.onlanguagechange",
          "HTMLBodyElement.onload",
          "HTMLBodyElement.onmessage",
          "HTMLBodyElement.onmessageerror",
          "HTMLBodyElement.onoffline",
          "HTMLBodyElement.ononline",
          "HTMLBodyElement.onpagehide",
          "HTMLBodyElement.onpageshow",
          "HTMLBodyElement.onpopstate",
          "HTMLBodyElement.onrejectionhandled",
          "HTMLBodyElement.onresize",
          "HTMLBodyElement.onscroll",
          "HTMLBodyElement.onstorage",
          "HTMLBodyElement.onunhandledrejection",
          "HTMLBodyElement.onunload"
        ],
        "keys": {
          "aLink": {
            "attr": false,
            "attrName": "alink",
            "keyInterfaceName": "HTMLBodyElement",
            "name": "aLink",
            "prop": true,
            "propName": "aLink",
            "readonly": false,
            "value": "string"
          },
          "alink": {
            "attr": true,
            "attrName": "alink",
            "keyInterfaceName": "HTMLBodyElement",
            "name": "alink",
            "prop": false,
            "propName": "aLink",
            "readonly": false,
            "value": "string"
          },
          "background": {
            "attr": true,
            "attrName": "background",
            "keyInterfaceName": "HTMLBodyElement",
            "name": "background",
            "prop": true,
            "propName": "background",
            "readonly": false,
            "value": "string"
          },
          "bgColor": {
            "attr": false,
            "attrName": "bgcolor",
            "keyInterfaceName": "HTMLBodyElement",
            "name": "bgColor",
            "prop": true,
            "propName": "bgColor",
            "readonly": false,
            "value": "string"
          },
          "bgcolor": {
            "attr": true,
            "attrName": "bgcolor",
            "keyInterfaceName": "HTMLBodyElement",
            "name": "bgcolor",
            "prop": false,
            "propName": "bgColor",
            "readonly": false,
            "value": "string"
          },
          "link": {
            "attr": true,
            "attrName": "link",
            "keyInterfaceName": "HTMLBodyElement",
            "name": "link",
            "prop": true,
            "propName": "link",
            "readonly": false,
            "value": "string"
          },
          "onafterprint": {
            "attr": true,
            "attrName": "onafterprint",
            "keyInterfaceName": "HTMLBodyElement",
            "name": "onafterprint",
            "prop": true,
            "propName": "onafterprint",
            "readonly": false,
            "value": "event"
          },
          "onbeforeprint": {
            "attr": true,
            "attrName": "onbeforeprint",
            "keyInterfaceName": "HTMLBodyElement",
            "name": "onbeforeprint",
            "prop": true,
            "propName": "onbeforeprint",
            "readonly": false,
            "value": "event"
          },
          "onbeforeunload": {
            "attr": true,
            "attrName": "onbeforeunload",
            "keyInterfaceName": "HTMLBodyElement",
            "name": "onbeforeunload",
            "prop": true,
            "propName": "onbeforeunload",
            "readonly": false,
            "value": "event"
          },
          "onblur": {
            "attr": true,
            "attrName": "onblur",
            "keyInterfaceName": "HTMLBodyElement",
            "name": "onblur",
            "prop": true,
            "propName": "onblur",
            "readonly": false,
            "value": "event"
          },
          "onerror": {
            "attr": true,
            "attrName": "onerror",
            "keyInterfaceName": "HTMLBodyElement",
            "name": "onerror",
            "prop": true,
            "propName": "onerror",
            "readonly": false,
            "value": "event"
          },
          "onfocus": {
            "attr": true,
            "attrName": "onfocus",
            "keyInterfaceName": "HTMLBodyElement",
            "name": "onfocus",
            "prop": true,
            "propName": "onfocus",
            "readonly": false,
            "value": "event"
          },
          "onhashchange": {
            "attr": true,
            "attrName": "onhashchange",
            "keyInterfaceName": "HTMLBodyElement",
            "name": "onhashchange",
            "prop": true,
            "propName": "onhashchange",
            "readonly": false,
            "value": "event"
          },
          "onlanguagechange": {
            "attr": true,
            "attrName": "onlanguagechange",
            "keyInterfaceName": "HTMLBodyElement",
            "name": "onlanguagechange",
            "prop": true,
            "propName": "onlanguagechange",
            "readonly": false,
            "value": "event"
          },
          "onload": {
            "attr": true,
            "attrName": "onload",
            "keyInterfaceName": "HTMLBodyElement",
            "name": "onload",
            "prop": true,
            "propName": "onload",
            "readonly": false,
            "value": "event"
          },
          "onmessage": {
            "attr": true,
            "attrName": "onmessage",
            "keyInterfaceName": "HTMLBodyElement",
            "name": "onmessage",
            "prop": true,
            "propName": "onmessage",
            "readonly": false,
            "value": "event"
          },
          "onmessageerror": {
            "attr": true,
            "attrName": "onmessageerror",
            "keyInterfaceName": "HTMLBodyElement",
            "name": "onmessageerror",
            "prop": true,
            "propName": "onmessageerror",
            "readonly": false,
            "value": "event"
          },
          "onoffline": {
            "attr": true,
            "attrName": "onoffline",
            "keyInterfaceName": "HTMLBodyElement",
            "name": "onoffline",
            "prop": true,
            "propName": "onoffline",
            "readonly": false,
            "value": "event"
          },
          "ononline": {
            "attr": true,
            "attrName": "ononline",
            "keyInterfaceName": "HTMLBodyElement",
            "name": "ononline",
            "prop": true,
            "propName": "ononline",
            "readonly": false,
            "value": "event"
          },
          "onpagehide": {
            "attr": true,
            "attrName": "onpagehide",
            "keyInterfaceName": "HTMLBodyElement",
            "name": "onpagehide",
            "prop": true,
            "propName": "onpagehide",
            "readonly": false,
            "value": "event"
          },
          "onpageshow": {
            "attr": true,
            "attrName": "onpageshow",
            "keyInterfaceName": "HTMLBodyElement",
            "name": "onpageshow",
            "prop": true,
            "propName": "onpageshow",
            "readonly": false,
            "value": "event"
          },
          "onpopstate": {
            "attr": true,
            "attrName": "onpopstate",
            "keyInterfaceName": "HTMLBodyElement",
            "name": "onpopstate",
            "prop": true,
            "propName": "onpopstate",
            "readonly": false,
            "value": "event"
          },
          "onrejectionhandled": {
            "attr": true,
            "attrName": "onrejectionhandled",
            "keyInterfaceName": "HTMLBodyElement",
            "name": "onrejectionhandled",
            "prop": true,
            "propName": "onrejectionhandled",
            "readonly": false,
            "value": "event"
          },
          "onresize": {
            "attr": true,
            "attrName": "onresize",
            "keyInterfaceName": "HTMLBodyElement",
            "name": "onresize",
            "prop": true,
            "propName": "onresize",
            "readonly": false,
            "value": "event"
          },
          "onscroll": {
            "attr": true,
            "attrName": "onscroll",
            "keyInterfaceName": "HTMLBodyElement",
            "name": "onscroll",
            "prop": true,
            "propName": "onscroll",
            "readonly": false,
            "value": "event"
          },
          "onstorage": {
            "attr": true,
            "attrName": "onstorage",
            "keyInterfaceName": "HTMLBodyElement",
            "name": "onstorage",
            "prop": true,
            "propName": "onstorage",
            "readonly": false,
            "value": "event"
          },
          "onunhandledrejection": {
            "attr": true,
            "attrName": "onunhandledrejection",
            "keyInterfaceName": "HTMLBodyElement",
            "name": "onunhandledrejection",
            "prop": true,
            "propName": "onunhandledrejection",
            "readonly": false,
            "value": "event"
          },
          "onunload": {
            "attr": true,
            "attrName": "onunload",
            "keyInterfaceName": "HTMLBodyElement",
            "name": "onunload",
            "prop": true,
            "propName": "onunload",
            "readonly": false,
            "value": "event"
          },
          "text": {
            "attr": true,
            "attrName": "text",
            "keyInterfaceName": "HTMLBodyElement",
            "name": "text",
            "prop": true,
            "propName": "text",
            "readonly": false,
            "value": "string"
          },
          "vLink": {
            "attr": false,
            "attrName": "vlink",
            "keyInterfaceName": "HTMLBodyElement",
            "name": "vLink",
            "prop": true,
            "propName": "vLink",
            "readonly": false,
            "value": "string"
          },
          "vlink": {
            "attr": true,
            "attrName": "vlink",
            "keyInterfaceName": "HTMLBodyElement",
            "name": "vlink",
            "prop": false,
            "propName": "vLink",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLBodyElement"
      },
      "br": {
        "booleans": [],
        "events": [],
        "keys": {
          "clear": {
            "attr": true,
            "attrName": "clear",
            "keyInterfaceName": "HTMLBRElement",
            "name": "clear",
            "prop": true,
            "propName": "clear",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLBRElement"
      },
      "button": {
        "booleans": [
          "HTMLButtonElement.disabled",
          "HTMLButtonElement.formNoValidate",
          "HTMLButtonElement.formnovalidate"
        ],
        "events": [],
        "keys": {
          "command": {
            "attr": true,
            "attrName": "command",
            "keyInterfaceName": "HTMLButtonElement",
            "name": "command",
            "prop": true,
            "propName": "command",
            "readonly": false,
            "value": "string"
          },
          "commandForElement": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLButtonElement",
            "name": "commandForElement",
            "prop": true,
            "propName": "commandForElement",
            "readonly": false,
            "value": "Element"
          },
          "disabled": {
            "attr": true,
            "attrName": "disabled",
            "keyInterfaceName": "HTMLButtonElement",
            "name": "disabled",
            "prop": true,
            "propName": "disabled",
            "readonly": false,
            "value": "boolean"
          },
          "formAction": {
            "attr": false,
            "attrName": "formaction",
            "keyInterfaceName": "HTMLButtonElement",
            "name": "formAction",
            "prop": true,
            "propName": "formAction",
            "readonly": false,
            "value": "string"
          },
          "formaction": {
            "attr": true,
            "attrName": "formaction",
            "keyInterfaceName": "HTMLButtonElement",
            "name": "formaction",
            "prop": false,
            "propName": "formAction",
            "readonly": false,
            "value": "string"
          },
          "formEnctype": {
            "attr": false,
            "attrName": "formenctype",
            "keyInterfaceName": "HTMLButtonElement",
            "name": "formEnctype",
            "prop": true,
            "propName": "formEnctype",
            "readonly": false,
            "value": "string"
          },
          "formenctype": {
            "attr": true,
            "attrName": "formenctype",
            "keyInterfaceName": "HTMLButtonElement",
            "name": "formenctype",
            "prop": false,
            "propName": "formEnctype",
            "readonly": false,
            "value": "string"
          },
          "formMethod": {
            "attr": false,
            "attrName": "formmethod",
            "keyInterfaceName": "HTMLButtonElement",
            "name": "formMethod",
            "prop": true,
            "propName": "formMethod",
            "readonly": false,
            "value": "string"
          },
          "formmethod": {
            "attr": true,
            "attrName": "formmethod",
            "keyInterfaceName": "HTMLButtonElement",
            "name": "formmethod",
            "prop": false,
            "propName": "formMethod",
            "readonly": false,
            "value": "string"
          },
          "formNoValidate": {
            "attr": false,
            "attrName": "formnovalidate",
            "keyInterfaceName": "HTMLButtonElement",
            "name": "formNoValidate",
            "prop": true,
            "propName": "formNoValidate",
            "readonly": false,
            "value": "boolean"
          },
          "formnovalidate": {
            "attr": true,
            "attrName": "formnovalidate",
            "keyInterfaceName": "HTMLButtonElement",
            "name": "formnovalidate",
            "prop": false,
            "propName": "formNoValidate",
            "readonly": false,
            "value": "boolean"
          },
          "formTarget": {
            "attr": false,
            "attrName": "formtarget",
            "keyInterfaceName": "HTMLButtonElement",
            "name": "formTarget",
            "prop": true,
            "propName": "formTarget",
            "readonly": false,
            "value": "string"
          },
          "formtarget": {
            "attr": true,
            "attrName": "formtarget",
            "keyInterfaceName": "HTMLButtonElement",
            "name": "formtarget",
            "prop": false,
            "propName": "formTarget",
            "readonly": false,
            "value": "string"
          },
          "name": {
            "attr": true,
            "attrName": "name",
            "keyInterfaceName": "HTMLButtonElement",
            "name": "name",
            "prop": true,
            "propName": "name",
            "readonly": false,
            "value": "string"
          },
          "popoverTargetAction": {
            "attr": false,
            "attrName": "popovertargetaction",
            "keyInterfaceName": "HTMLButtonElement",
            "name": "popoverTargetAction",
            "prop": true,
            "propName": "popoverTargetAction",
            "readonly": false,
            "value": "string"
          },
          "popovertargetaction": {
            "attr": true,
            "attrName": "popovertargetaction",
            "keyInterfaceName": "HTMLButtonElement",
            "name": "popovertargetaction",
            "prop": false,
            "propName": "popoverTargetAction",
            "readonly": false,
            "value": "string"
          },
          "popoverTargetElement": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLButtonElement",
            "name": "popoverTargetElement",
            "prop": true,
            "propName": "popoverTargetElement",
            "readonly": false,
            "value": "Element"
          },
          "type": {
            "attr": true,
            "attrName": "type",
            "keyInterfaceName": "HTMLButtonElement",
            "name": "type",
            "prop": true,
            "propName": "type",
            "readonly": false,
            "value": "string"
          },
          "value": {
            "attr": true,
            "attrName": "value",
            "keyInterfaceName": "HTMLButtonElement",
            "name": "value",
            "prop": true,
            "propName": "value",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [
          "HTMLButtonElement.form",
          "HTMLButtonElement.labels",
          "HTMLButtonElement.validationMessage",
          "HTMLButtonElement.validity",
          "HTMLButtonElement.willValidate"
        ],
        "tagInterfaceName": "HTMLButtonElement"
      },
      "canvas": {
        "booleans": [],
        "events": [],
        "keys": {
          "height": {
            "attr": true,
            "attrName": "height",
            "keyInterfaceName": "HTMLCanvasElement",
            "name": "height",
            "prop": true,
            "propName": "height",
            "readonly": false,
            "value": "number"
          },
          "width": {
            "attr": true,
            "attrName": "width",
            "keyInterfaceName": "HTMLCanvasElement",
            "name": "width",
            "prop": true,
            "propName": "width",
            "readonly": false,
            "value": "number"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLCanvasElement"
      },
      "caption": {
        "booleans": [],
        "events": [],
        "keys": {
          "align": {
            "attr": true,
            "attrName": "align",
            "keyInterfaceName": "HTMLTableCaptionElement",
            "name": "align",
            "prop": true,
            "propName": "align",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLTableCaptionElement"
      },
      "center": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "cite": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "code": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "col": {
        "booleans": [],
        "events": [],
        "keys": {
          "align": {
            "attr": true,
            "attrName": "align",
            "keyInterfaceName": "HTMLTableColElement",
            "name": "align",
            "prop": true,
            "propName": "align",
            "readonly": false,
            "value": "string"
          },
          "ch": {
            "attr": false,
            "attrName": "char",
            "keyInterfaceName": "HTMLTableColElement",
            "name": "ch",
            "prop": true,
            "propName": "ch",
            "readonly": false,
            "value": "string"
          },
          "char": {
            "attr": true,
            "attrName": "char",
            "keyInterfaceName": "HTMLTableColElement",
            "name": "char",
            "prop": false,
            "propName": "ch",
            "readonly": false,
            "value": "string"
          },
          "charoff": {
            "attr": true,
            "attrName": "charoff",
            "keyInterfaceName": "HTMLTableColElement",
            "name": "charoff",
            "prop": false,
            "propName": "chOff",
            "readonly": false,
            "value": "string"
          },
          "chOff": {
            "attr": false,
            "attrName": "charoff",
            "keyInterfaceName": "HTMLTableColElement",
            "name": "chOff",
            "prop": true,
            "propName": "chOff",
            "readonly": false,
            "value": "string"
          },
          "span": {
            "attr": true,
            "attrName": "span",
            "keyInterfaceName": "HTMLTableColElement",
            "name": "span",
            "prop": true,
            "propName": "span",
            "readonly": false,
            "value": "number"
          },
          "vAlign": {
            "attr": false,
            "attrName": "valign",
            "keyInterfaceName": "HTMLTableColElement",
            "name": "vAlign",
            "prop": true,
            "propName": "vAlign",
            "readonly": false,
            "value": "string"
          },
          "valign": {
            "attr": true,
            "attrName": "valign",
            "keyInterfaceName": "HTMLTableColElement",
            "name": "valign",
            "prop": false,
            "propName": "vAlign",
            "readonly": false,
            "value": "string"
          },
          "width": {
            "attr": true,
            "attrName": "width",
            "keyInterfaceName": "HTMLTableColElement",
            "name": "width",
            "prop": true,
            "propName": "width",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLTableColElement"
      },
      "colgroup": {
        "booleans": [],
        "events": [],
        "keys": {
          "align": {
            "attr": true,
            "attrName": "align",
            "keyInterfaceName": "HTMLTableColElement",
            "name": "align",
            "prop": true,
            "propName": "align",
            "readonly": false,
            "value": "string"
          },
          "ch": {
            "attr": false,
            "attrName": "char",
            "keyInterfaceName": "HTMLTableColElement",
            "name": "ch",
            "prop": true,
            "propName": "ch",
            "readonly": false,
            "value": "string"
          },
          "char": {
            "attr": true,
            "attrName": "char",
            "keyInterfaceName": "HTMLTableColElement",
            "name": "char",
            "prop": false,
            "propName": "ch",
            "readonly": false,
            "value": "string"
          },
          "charoff": {
            "attr": true,
            "attrName": "charoff",
            "keyInterfaceName": "HTMLTableColElement",
            "name": "charoff",
            "prop": false,
            "propName": "chOff",
            "readonly": false,
            "value": "string"
          },
          "chOff": {
            "attr": false,
            "attrName": "charoff",
            "keyInterfaceName": "HTMLTableColElement",
            "name": "chOff",
            "prop": true,
            "propName": "chOff",
            "readonly": false,
            "value": "string"
          },
          "span": {
            "attr": true,
            "attrName": "span",
            "keyInterfaceName": "HTMLTableColElement",
            "name": "span",
            "prop": true,
            "propName": "span",
            "readonly": false,
            "value": "number"
          },
          "vAlign": {
            "attr": false,
            "attrName": "valign",
            "keyInterfaceName": "HTMLTableColElement",
            "name": "vAlign",
            "prop": true,
            "propName": "vAlign",
            "readonly": false,
            "value": "string"
          },
          "valign": {
            "attr": true,
            "attrName": "valign",
            "keyInterfaceName": "HTMLTableColElement",
            "name": "valign",
            "prop": false,
            "propName": "vAlign",
            "readonly": false,
            "value": "string"
          },
          "width": {
            "attr": true,
            "attrName": "width",
            "keyInterfaceName": "HTMLTableColElement",
            "name": "width",
            "prop": true,
            "propName": "width",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLTableColElement"
      },
      "content": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLUnknownElement"
      },
      "data": {
        "booleans": [],
        "events": [],
        "keys": {
          "value": {
            "attr": true,
            "attrName": "value",
            "keyInterfaceName": "HTMLDataElement",
            "name": "value",
            "prop": true,
            "propName": "value",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLDataElement"
      },
      "datalist": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "HTMLDataListElement.options"
        ],
        "tagInterfaceName": "HTMLDataListElement"
      },
      "dd": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "del": {
        "booleans": [],
        "events": [],
        "keys": {
          "cite": {
            "attr": true,
            "attrName": "cite",
            "keyInterfaceName": "HTMLModElement",
            "name": "cite",
            "prop": true,
            "propName": "cite",
            "readonly": false,
            "value": "string"
          },
          "dateTime": {
            "attr": false,
            "attrName": "datetime",
            "keyInterfaceName": "HTMLModElement",
            "name": "dateTime",
            "prop": true,
            "propName": "dateTime",
            "readonly": false,
            "value": "string"
          },
          "datetime": {
            "attr": true,
            "attrName": "datetime",
            "keyInterfaceName": "HTMLModElement",
            "name": "datetime",
            "prop": false,
            "propName": "dateTime",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLModElement"
      },
      "details": {
        "booleans": [
          "HTMLDetailsElement.open"
        ],
        "events": [],
        "keys": {
          "name": {
            "attr": true,
            "attrName": "name",
            "keyInterfaceName": "HTMLDetailsElement",
            "name": "name",
            "prop": true,
            "propName": "name",
            "readonly": false,
            "value": "string"
          },
          "open": {
            "attr": true,
            "attrName": "open",
            "keyInterfaceName": "HTMLDetailsElement",
            "name": "open",
            "prop": true,
            "propName": "open",
            "readonly": false,
            "value": "boolean"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLDetailsElement"
      },
      "dfn": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "dialog": {
        "booleans": [
          "HTMLDialogElement.open"
        ],
        "events": [],
        "keys": {
          "closedBy": {
            "attr": false,
            "attrName": "closedby",
            "keyInterfaceName": "HTMLDialogElement",
            "name": "closedBy",
            "prop": true,
            "propName": "closedBy",
            "readonly": false,
            "value": "string"
          },
          "closedby": {
            "attr": true,
            "attrName": "closedby",
            "keyInterfaceName": "HTMLDialogElement",
            "name": "closedby",
            "prop": false,
            "propName": "closedBy",
            "readonly": false,
            "value": "string"
          },
          "open": {
            "attr": true,
            "attrName": "open",
            "keyInterfaceName": "HTMLDialogElement",
            "name": "open",
            "prop": true,
            "propName": "open",
            "readonly": false,
            "value": "boolean"
          },
          "returnValue": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLDialogElement",
            "name": "returnValue",
            "prop": true,
            "propName": "returnValue",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLDialogElement"
      },
      "dir": {
        "booleans": [
          "HTMLDirectoryElement.compact"
        ],
        "events": [],
        "keys": {
          "compact": {
            "attr": true,
            "attrName": "compact",
            "keyInterfaceName": "HTMLDirectoryElement",
            "name": "compact",
            "prop": true,
            "propName": "compact",
            "readonly": false,
            "value": "boolean"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLDirectoryElement"
      },
      "div": {
        "booleans": [],
        "events": [],
        "keys": {
          "align": {
            "attr": true,
            "attrName": "align",
            "keyInterfaceName": "HTMLDivElement",
            "name": "align",
            "prop": true,
            "propName": "align",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLDivElement"
      },
      "dl": {
        "booleans": [
          "HTMLDListElement.compact"
        ],
        "events": [],
        "keys": {
          "compact": {
            "attr": true,
            "attrName": "compact",
            "keyInterfaceName": "HTMLDListElement",
            "name": "compact",
            "prop": true,
            "propName": "compact",
            "readonly": false,
            "value": "boolean"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLDListElement"
      },
      "dt": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "em": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "embed": {
        "booleans": [],
        "events": [],
        "keys": {
          "align": {
            "attr": true,
            "attrName": "align",
            "keyInterfaceName": "HTMLEmbedElement",
            "name": "align",
            "prop": true,
            "propName": "align",
            "readonly": false,
            "value": "string"
          },
          "height": {
            "attr": true,
            "attrName": "height",
            "keyInterfaceName": "HTMLEmbedElement",
            "name": "height",
            "prop": true,
            "propName": "height",
            "readonly": false,
            "value": "string"
          },
          "name": {
            "attr": true,
            "attrName": "name",
            "keyInterfaceName": "HTMLEmbedElement",
            "name": "name",
            "prop": true,
            "propName": "name",
            "readonly": false,
            "value": "string"
          },
          "src": {
            "attr": true,
            "attrName": "src",
            "keyInterfaceName": "HTMLEmbedElement",
            "name": "src",
            "prop": true,
            "propName": "src",
            "readonly": false,
            "value": "string"
          },
          "type": {
            "attr": true,
            "attrName": "type",
            "keyInterfaceName": "HTMLEmbedElement",
            "name": "type",
            "prop": true,
            "propName": "type",
            "readonly": false,
            "value": "string"
          },
          "width": {
            "attr": true,
            "attrName": "width",
            "keyInterfaceName": "HTMLEmbedElement",
            "name": "width",
            "prop": true,
            "propName": "width",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLEmbedElement"
      },
      "fieldset": {
        "booleans": [
          "HTMLFieldSetElement.disabled"
        ],
        "events": [],
        "keys": {
          "disabled": {
            "attr": true,
            "attrName": "disabled",
            "keyInterfaceName": "HTMLFieldSetElement",
            "name": "disabled",
            "prop": true,
            "propName": "disabled",
            "readonly": false,
            "value": "boolean"
          },
          "name": {
            "attr": true,
            "attrName": "name",
            "keyInterfaceName": "HTMLFieldSetElement",
            "name": "name",
            "prop": true,
            "propName": "name",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [
          "HTMLFieldSetElement.elements",
          "HTMLFieldSetElement.form",
          "HTMLFieldSetElement.type",
          "HTMLFieldSetElement.validationMessage",
          "HTMLFieldSetElement.validity",
          "HTMLFieldSetElement.willValidate"
        ],
        "tagInterfaceName": "HTMLFieldSetElement"
      },
      "figcaption": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "figure": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "font": {
        "booleans": [],
        "events": [],
        "keys": {
          "color": {
            "attr": true,
            "attrName": "color",
            "keyInterfaceName": "HTMLFontElement",
            "name": "color",
            "prop": true,
            "propName": "color",
            "readonly": false,
            "value": "string"
          },
          "face": {
            "attr": true,
            "attrName": "face",
            "keyInterfaceName": "HTMLFontElement",
            "name": "face",
            "prop": true,
            "propName": "face",
            "readonly": false,
            "value": "string"
          },
          "size": {
            "attr": true,
            "attrName": "size",
            "keyInterfaceName": "HTMLFontElement",
            "name": "size",
            "prop": true,
            "propName": "size",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLFontElement"
      },
      "footer": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "form": {
        "booleans": [
          "HTMLFormElement.noValidate",
          "HTMLFormElement.novalidate"
        ],
        "events": [],
        "keys": {
          "acceptCharset": {
            "attr": false,
            "attrName": "accept-charset",
            "keyInterfaceName": "HTMLFormElement",
            "name": "acceptCharset",
            "prop": true,
            "propName": "acceptCharset",
            "readonly": false,
            "value": "string"
          },
          "accept-charset": {
            "attr": true,
            "attrName": "accept-charset",
            "keyInterfaceName": "HTMLFormElement",
            "name": "accept-charset",
            "prop": false,
            "propName": "acceptCharset",
            "readonly": false,
            "value": "string"
          },
          "action": {
            "attr": true,
            "attrName": "action",
            "keyInterfaceName": "HTMLFormElement",
            "name": "action",
            "prop": true,
            "propName": "action",
            "readonly": false,
            "value": "string"
          },
          "autocomplete": {
            "attr": true,
            "attrName": "autocomplete",
            "keyInterfaceName": "HTMLFormElement",
            "name": "autocomplete",
            "prop": true,
            "propName": "autocomplete",
            "readonly": false,
            "value": "string"
          },
          "encoding": {
            "attr": false,
            "attrName": "enctype",
            "keyInterfaceName": "HTMLFormElement",
            "name": "encoding",
            "prop": true,
            "propName": "encoding",
            "readonly": false,
            "value": "string"
          },
          "enctype": {
            "attr": true,
            "attrName": "enctype",
            "keyInterfaceName": "HTMLFormElement",
            "name": "enctype",
            "prop": true,
            "propName": "encoding",
            "readonly": false,
            "value": "string"
          },
          "method": {
            "attr": true,
            "attrName": "method",
            "keyInterfaceName": "HTMLFormElement",
            "name": "method",
            "prop": true,
            "propName": "method",
            "readonly": false,
            "value": "string"
          },
          "name": {
            "attr": true,
            "attrName": "name",
            "keyInterfaceName": "HTMLFormElement",
            "name": "name",
            "prop": true,
            "propName": "name",
            "readonly": false,
            "value": "string"
          },
          "noValidate": {
            "attr": false,
            "attrName": "novalidate",
            "keyInterfaceName": "HTMLFormElement",
            "name": "noValidate",
            "prop": true,
            "propName": "noValidate",
            "readonly": false,
            "value": "boolean"
          },
          "novalidate": {
            "attr": true,
            "attrName": "novalidate",
            "keyInterfaceName": "HTMLFormElement",
            "name": "novalidate",
            "prop": false,
            "propName": "noValidate",
            "readonly": false,
            "value": "boolean"
          },
          "rel": {
            "attr": true,
            "attrName": "rel",
            "keyInterfaceName": "HTMLFormElement",
            "name": "rel",
            "prop": true,
            "propName": "relList",
            "readonly": false,
            "value": "string"
          },
          "relList": {
            "attr": false,
            "attrName": "rel",
            "keyInterfaceName": "HTMLFormElement",
            "name": "relList",
            "prop": true,
            "propName": "relList",
            "readonly": false,
            "value": "string"
          },
          "target": {
            "attr": true,
            "attrName": "target",
            "keyInterfaceName": "HTMLFormElement",
            "name": "target",
            "prop": true,
            "propName": "target",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [
          "HTMLFormElement.elements",
          "HTMLFormElement.length"
        ],
        "tagInterfaceName": "HTMLFormElement"
      },
      "frame": {
        "booleans": [
          "HTMLFrameElement.noResize",
          "HTMLFrameElement.noresize"
        ],
        "events": [],
        "keys": {
          "frameBorder": {
            "attr": false,
            "attrName": "frameborder",
            "keyInterfaceName": "HTMLFrameElement",
            "name": "frameBorder",
            "prop": true,
            "propName": "frameBorder",
            "readonly": false,
            "value": "string"
          },
          "frameborder": {
            "attr": true,
            "attrName": "frameborder",
            "keyInterfaceName": "HTMLFrameElement",
            "name": "frameborder",
            "prop": false,
            "propName": "frameBorder",
            "readonly": false,
            "value": "string"
          },
          "longDesc": {
            "attr": false,
            "attrName": "longdesc",
            "keyInterfaceName": "HTMLFrameElement",
            "name": "longDesc",
            "prop": true,
            "propName": "longDesc",
            "readonly": false,
            "value": "string"
          },
          "longdesc": {
            "attr": true,
            "attrName": "longdesc",
            "keyInterfaceName": "HTMLFrameElement",
            "name": "longdesc",
            "prop": false,
            "propName": "longDesc",
            "readonly": false,
            "value": "string"
          },
          "marginHeight": {
            "attr": false,
            "attrName": "marginheight",
            "keyInterfaceName": "HTMLFrameElement",
            "name": "marginHeight",
            "prop": true,
            "propName": "marginHeight",
            "readonly": false,
            "value": "string"
          },
          "marginheight": {
            "attr": true,
            "attrName": "marginheight",
            "keyInterfaceName": "HTMLFrameElement",
            "name": "marginheight",
            "prop": false,
            "propName": "marginHeight",
            "readonly": false,
            "value": "string"
          },
          "marginWidth": {
            "attr": false,
            "attrName": "marginwidth",
            "keyInterfaceName": "HTMLFrameElement",
            "name": "marginWidth",
            "prop": true,
            "propName": "marginWidth",
            "readonly": false,
            "value": "string"
          },
          "marginwidth": {
            "attr": true,
            "attrName": "marginwidth",
            "keyInterfaceName": "HTMLFrameElement",
            "name": "marginwidth",
            "prop": false,
            "propName": "marginWidth",
            "readonly": false,
            "value": "string"
          },
          "name": {
            "attr": true,
            "attrName": "name",
            "keyInterfaceName": "HTMLFrameElement",
            "name": "name",
            "prop": true,
            "propName": "name",
            "readonly": false,
            "value": "string"
          },
          "noResize": {
            "attr": false,
            "attrName": "noresize",
            "keyInterfaceName": "HTMLFrameElement",
            "name": "noResize",
            "prop": true,
            "propName": "noResize",
            "readonly": false,
            "value": "boolean"
          },
          "noresize": {
            "attr": true,
            "attrName": "noresize",
            "keyInterfaceName": "HTMLFrameElement",
            "name": "noresize",
            "prop": false,
            "propName": "noResize",
            "readonly": false,
            "value": "boolean"
          },
          "scrolling": {
            "attr": true,
            "attrName": "scrolling",
            "keyInterfaceName": "HTMLFrameElement",
            "name": "scrolling",
            "prop": true,
            "propName": "scrolling",
            "readonly": false,
            "value": "string"
          },
          "src": {
            "attr": true,
            "attrName": "src",
            "keyInterfaceName": "HTMLFrameElement",
            "name": "src",
            "prop": true,
            "propName": "src",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [
          "HTMLFrameElement.contentDocument",
          "HTMLFrameElement.contentWindow"
        ],
        "tagInterfaceName": "HTMLFrameElement"
      },
      "frameset": {
        "booleans": [],
        "events": [
          "HTMLFrameSetElement.onafterprint",
          "HTMLFrameSetElement.onbeforeprint",
          "HTMLFrameSetElement.onbeforeunload",
          "HTMLFrameSetElement.onblur",
          "HTMLFrameSetElement.onerror",
          "HTMLFrameSetElement.onfocus",
          "HTMLFrameSetElement.onhashchange",
          "HTMLFrameSetElement.onlanguagechange",
          "HTMLFrameSetElement.onload",
          "HTMLFrameSetElement.onmessage",
          "HTMLFrameSetElement.onmessageerror",
          "HTMLFrameSetElement.onoffline",
          "HTMLFrameSetElement.ononline",
          "HTMLFrameSetElement.onpagehide",
          "HTMLFrameSetElement.onpageshow",
          "HTMLFrameSetElement.onpopstate",
          "HTMLFrameSetElement.onrejectionhandled",
          "HTMLFrameSetElement.onresize",
          "HTMLFrameSetElement.onscroll",
          "HTMLFrameSetElement.onstorage",
          "HTMLFrameSetElement.onunhandledrejection",
          "HTMLFrameSetElement.onunload"
        ],
        "keys": {
          "cols": {
            "attr": true,
            "attrName": "cols",
            "keyInterfaceName": "HTMLFrameSetElement",
            "name": "cols",
            "prop": true,
            "propName": "cols",
            "readonly": false,
            "value": "string"
          },
          "onafterprint": {
            "attr": true,
            "attrName": "onafterprint",
            "keyInterfaceName": "HTMLFrameSetElement",
            "name": "onafterprint",
            "prop": true,
            "propName": "onafterprint",
            "readonly": false,
            "value": "event"
          },
          "onbeforeprint": {
            "attr": true,
            "attrName": "onbeforeprint",
            "keyInterfaceName": "HTMLFrameSetElement",
            "name": "onbeforeprint",
            "prop": true,
            "propName": "onbeforeprint",
            "readonly": false,
            "value": "event"
          },
          "onbeforeunload": {
            "attr": true,
            "attrName": "onbeforeunload",
            "keyInterfaceName": "HTMLFrameSetElement",
            "name": "onbeforeunload",
            "prop": true,
            "propName": "onbeforeunload",
            "readonly": false,
            "value": "event"
          },
          "onblur": {
            "attr": true,
            "attrName": "onblur",
            "keyInterfaceName": "HTMLFrameSetElement",
            "name": "onblur",
            "prop": true,
            "propName": "onblur",
            "readonly": false,
            "value": "event"
          },
          "onerror": {
            "attr": true,
            "attrName": "onerror",
            "keyInterfaceName": "HTMLFrameSetElement",
            "name": "onerror",
            "prop": true,
            "propName": "onerror",
            "readonly": false,
            "value": "event"
          },
          "onfocus": {
            "attr": true,
            "attrName": "onfocus",
            "keyInterfaceName": "HTMLFrameSetElement",
            "name": "onfocus",
            "prop": true,
            "propName": "onfocus",
            "readonly": false,
            "value": "event"
          },
          "onhashchange": {
            "attr": true,
            "attrName": "onhashchange",
            "keyInterfaceName": "HTMLFrameSetElement",
            "name": "onhashchange",
            "prop": true,
            "propName": "onhashchange",
            "readonly": false,
            "value": "event"
          },
          "onlanguagechange": {
            "attr": true,
            "attrName": "onlanguagechange",
            "keyInterfaceName": "HTMLFrameSetElement",
            "name": "onlanguagechange",
            "prop": true,
            "propName": "onlanguagechange",
            "readonly": false,
            "value": "event"
          },
          "onload": {
            "attr": true,
            "attrName": "onload",
            "keyInterfaceName": "HTMLFrameSetElement",
            "name": "onload",
            "prop": true,
            "propName": "onload",
            "readonly": false,
            "value": "event"
          },
          "onmessage": {
            "attr": true,
            "attrName": "onmessage",
            "keyInterfaceName": "HTMLFrameSetElement",
            "name": "onmessage",
            "prop": true,
            "propName": "onmessage",
            "readonly": false,
            "value": "event"
          },
          "onmessageerror": {
            "attr": true,
            "attrName": "onmessageerror",
            "keyInterfaceName": "HTMLFrameSetElement",
            "name": "onmessageerror",
            "prop": true,
            "propName": "onmessageerror",
            "readonly": false,
            "value": "event"
          },
          "onoffline": {
            "attr": true,
            "attrName": "onoffline",
            "keyInterfaceName": "HTMLFrameSetElement",
            "name": "onoffline",
            "prop": true,
            "propName": "onoffline",
            "readonly": false,
            "value": "event"
          },
          "ononline": {
            "attr": true,
            "attrName": "ononline",
            "keyInterfaceName": "HTMLFrameSetElement",
            "name": "ononline",
            "prop": true,
            "propName": "ononline",
            "readonly": false,
            "value": "event"
          },
          "onpagehide": {
            "attr": true,
            "attrName": "onpagehide",
            "keyInterfaceName": "HTMLFrameSetElement",
            "name": "onpagehide",
            "prop": true,
            "propName": "onpagehide",
            "readonly": false,
            "value": "event"
          },
          "onpageshow": {
            "attr": true,
            "attrName": "onpageshow",
            "keyInterfaceName": "HTMLFrameSetElement",
            "name": "onpageshow",
            "prop": true,
            "propName": "onpageshow",
            "readonly": false,
            "value": "event"
          },
          "onpopstate": {
            "attr": true,
            "attrName": "onpopstate",
            "keyInterfaceName": "HTMLFrameSetElement",
            "name": "onpopstate",
            "prop": true,
            "propName": "onpopstate",
            "readonly": false,
            "value": "event"
          },
          "onrejectionhandled": {
            "attr": true,
            "attrName": "onrejectionhandled",
            "keyInterfaceName": "HTMLFrameSetElement",
            "name": "onrejectionhandled",
            "prop": true,
            "propName": "onrejectionhandled",
            "readonly": false,
            "value": "event"
          },
          "onresize": {
            "attr": true,
            "attrName": "onresize",
            "keyInterfaceName": "HTMLFrameSetElement",
            "name": "onresize",
            "prop": true,
            "propName": "onresize",
            "readonly": false,
            "value": "event"
          },
          "onscroll": {
            "attr": true,
            "attrName": "onscroll",
            "keyInterfaceName": "HTMLFrameSetElement",
            "name": "onscroll",
            "prop": true,
            "propName": "onscroll",
            "readonly": false,
            "value": "event"
          },
          "onstorage": {
            "attr": true,
            "attrName": "onstorage",
            "keyInterfaceName": "HTMLFrameSetElement",
            "name": "onstorage",
            "prop": true,
            "propName": "onstorage",
            "readonly": false,
            "value": "event"
          },
          "onunhandledrejection": {
            "attr": true,
            "attrName": "onunhandledrejection",
            "keyInterfaceName": "HTMLFrameSetElement",
            "name": "onunhandledrejection",
            "prop": true,
            "propName": "onunhandledrejection",
            "readonly": false,
            "value": "event"
          },
          "onunload": {
            "attr": true,
            "attrName": "onunload",
            "keyInterfaceName": "HTMLFrameSetElement",
            "name": "onunload",
            "prop": true,
            "propName": "onunload",
            "readonly": false,
            "value": "event"
          },
          "rows": {
            "attr": true,
            "attrName": "rows",
            "keyInterfaceName": "HTMLFrameSetElement",
            "name": "rows",
            "prop": true,
            "propName": "rows",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLFrameSetElement"
      },
      "h1": {
        "booleans": [],
        "events": [],
        "keys": {
          "align": {
            "attr": true,
            "attrName": "align",
            "keyInterfaceName": "HTMLHeadingElement",
            "name": "align",
            "prop": true,
            "propName": "align",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLHeadingElement"
      },
      "h2": {
        "booleans": [],
        "events": [],
        "keys": {
          "align": {
            "attr": true,
            "attrName": "align",
            "keyInterfaceName": "HTMLHeadingElement",
            "name": "align",
            "prop": true,
            "propName": "align",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLHeadingElement"
      },
      "h3": {
        "booleans": [],
        "events": [],
        "keys": {
          "align": {
            "attr": true,
            "attrName": "align",
            "keyInterfaceName": "HTMLHeadingElement",
            "name": "align",
            "prop": true,
            "propName": "align",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLHeadingElement"
      },
      "h4": {
        "booleans": [],
        "events": [],
        "keys": {
          "align": {
            "attr": true,
            "attrName": "align",
            "keyInterfaceName": "HTMLHeadingElement",
            "name": "align",
            "prop": true,
            "propName": "align",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLHeadingElement"
      },
      "h5": {
        "booleans": [],
        "events": [],
        "keys": {
          "align": {
            "attr": true,
            "attrName": "align",
            "keyInterfaceName": "HTMLHeadingElement",
            "name": "align",
            "prop": true,
            "propName": "align",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLHeadingElement"
      },
      "h6": {
        "booleans": [],
        "events": [],
        "keys": {
          "align": {
            "attr": true,
            "attrName": "align",
            "keyInterfaceName": "HTMLHeadingElement",
            "name": "align",
            "prop": true,
            "propName": "align",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLHeadingElement"
      },
      "head": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLHeadElement"
      },
      "header": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "hgroup": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "hr": {
        "booleans": [
          "HTMLHRElement.noShade",
          "HTMLHRElement.noshade"
        ],
        "events": [],
        "keys": {
          "align": {
            "attr": true,
            "attrName": "align",
            "keyInterfaceName": "HTMLHRElement",
            "name": "align",
            "prop": true,
            "propName": "align",
            "readonly": false,
            "value": "string"
          },
          "color": {
            "attr": true,
            "attrName": "color",
            "keyInterfaceName": "HTMLHRElement",
            "name": "color",
            "prop": true,
            "propName": "color",
            "readonly": false,
            "value": "string"
          },
          "noShade": {
            "attr": false,
            "attrName": "noshade",
            "keyInterfaceName": "HTMLHRElement",
            "name": "noShade",
            "prop": true,
            "propName": "noShade",
            "readonly": false,
            "value": "boolean"
          },
          "noshade": {
            "attr": true,
            "attrName": "noshade",
            "keyInterfaceName": "HTMLHRElement",
            "name": "noshade",
            "prop": false,
            "propName": "noShade",
            "readonly": false,
            "value": "boolean"
          },
          "size": {
            "attr": true,
            "attrName": "size",
            "keyInterfaceName": "HTMLHRElement",
            "name": "size",
            "prop": true,
            "propName": "size",
            "readonly": false,
            "value": "string"
          },
          "width": {
            "attr": true,
            "attrName": "width",
            "keyInterfaceName": "HTMLHRElement",
            "name": "width",
            "prop": true,
            "propName": "width",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLHRElement"
      },
      "html": {
        "booleans": [],
        "events": [],
        "keys": {
          "version": {
            "attr": true,
            "attrName": "version",
            "keyInterfaceName": "HTMLHtmlElement",
            "name": "version",
            "prop": true,
            "propName": "version",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLHtmlElement"
      },
      "i": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "iframe": {
        "booleans": [
          "HTMLIFrameElement.adAuctionHeaders",
          "HTMLIFrameElement.adauctionheaders",
          "HTMLIFrameElement.allowFullscreen",
          "HTMLIFrameElement.allowfullscreen",
          "HTMLIFrameElement.allowPaymentRequest",
          "HTMLIFrameElement.allowpaymentrequest",
          "HTMLIFrameElement.browsingTopics",
          "HTMLIFrameElement.browsingtopics",
          "HTMLIFrameElement.credentialless",
          "HTMLIFrameElement.sharedStorageWritable",
          "HTMLIFrameElement.sharedstoragewritable"
        ],
        "events": [],
        "keys": {
          "adAuctionHeaders": {
            "attr": false,
            "attrName": "adauctionheaders",
            "keyInterfaceName": "HTMLIFrameElement",
            "name": "adAuctionHeaders",
            "prop": true,
            "propName": "adAuctionHeaders",
            "readonly": false,
            "value": "boolean"
          },
          "adauctionheaders": {
            "attr": true,
            "attrName": "adauctionheaders",
            "keyInterfaceName": "HTMLIFrameElement",
            "name": "adauctionheaders",
            "prop": false,
            "propName": "adAuctionHeaders",
            "readonly": false,
            "value": "boolean"
          },
          "align": {
            "attr": true,
            "attrName": "align",
            "keyInterfaceName": "HTMLIFrameElement",
            "name": "align",
            "prop": true,
            "propName": "align",
            "readonly": false,
            "value": "string"
          },
          "allow": {
            "attr": true,
            "attrName": "allow",
            "keyInterfaceName": "HTMLIFrameElement",
            "name": "allow",
            "prop": true,
            "propName": "allow",
            "readonly": false,
            "value": "string"
          },
          "allowFullscreen": {
            "attr": false,
            "attrName": "allowfullscreen",
            "keyInterfaceName": "HTMLIFrameElement",
            "name": "allowFullscreen",
            "prop": true,
            "propName": "allowFullscreen",
            "readonly": false,
            "value": "boolean"
          },
          "allowfullscreen": {
            "attr": true,
            "attrName": "allowfullscreen",
            "keyInterfaceName": "HTMLIFrameElement",
            "name": "allowfullscreen",
            "prop": false,
            "propName": "allowFullscreen",
            "readonly": false,
            "value": "boolean"
          },
          "allowPaymentRequest": {
            "attr": false,
            "attrName": "allowpaymentrequest",
            "keyInterfaceName": "HTMLIFrameElement",
            "name": "allowPaymentRequest",
            "prop": true,
            "propName": "allowPaymentRequest",
            "readonly": false,
            "value": "boolean"
          },
          "allowpaymentrequest": {
            "attr": true,
            "attrName": "allowpaymentrequest",
            "keyInterfaceName": "HTMLIFrameElement",
            "name": "allowpaymentrequest",
            "prop": false,
            "propName": "allowPaymentRequest",
            "readonly": false,
            "value": "boolean"
          },
          "browsingTopics": {
            "attr": false,
            "attrName": "browsingtopics",
            "keyInterfaceName": "HTMLIFrameElement",
            "name": "browsingTopics",
            "prop": true,
            "propName": "browsingTopics",
            "readonly": false,
            "value": "boolean"
          },
          "browsingtopics": {
            "attr": true,
            "attrName": "browsingtopics",
            "keyInterfaceName": "HTMLIFrameElement",
            "name": "browsingtopics",
            "prop": false,
            "propName": "browsingTopics",
            "readonly": false,
            "value": "boolean"
          },
          "credentialless": {
            "attr": true,
            "attrName": "credentialless",
            "keyInterfaceName": "HTMLIFrameElement",
            "name": "credentialless",
            "prop": true,
            "propName": "credentialless",
            "readonly": false,
            "value": "boolean"
          },
          "csp": {
            "attr": true,
            "attrName": "csp",
            "keyInterfaceName": "HTMLIFrameElement",
            "name": "csp",
            "prop": true,
            "propName": "csp",
            "readonly": false,
            "value": "string"
          },
          "frameBorder": {
            "attr": false,
            "attrName": "frameborder",
            "keyInterfaceName": "HTMLIFrameElement",
            "name": "frameBorder",
            "prop": true,
            "propName": "frameBorder",
            "readonly": false,
            "value": "string"
          },
          "frameborder": {
            "attr": true,
            "attrName": "frameborder",
            "keyInterfaceName": "HTMLIFrameElement",
            "name": "frameborder",
            "prop": false,
            "propName": "frameBorder",
            "readonly": false,
            "value": "string"
          },
          "height": {
            "attr": true,
            "attrName": "height",
            "keyInterfaceName": "HTMLIFrameElement",
            "name": "height",
            "prop": true,
            "propName": "height",
            "readonly": false,
            "value": "string"
          },
          "loading": {
            "attr": true,
            "attrName": "loading",
            "keyInterfaceName": "HTMLIFrameElement",
            "name": "loading",
            "prop": true,
            "propName": "loading",
            "readonly": false,
            "value": "string"
          },
          "longDesc": {
            "attr": false,
            "attrName": "longdesc",
            "keyInterfaceName": "HTMLIFrameElement",
            "name": "longDesc",
            "prop": true,
            "propName": "longDesc",
            "readonly": false,
            "value": "string"
          },
          "longdesc": {
            "attr": true,
            "attrName": "longdesc",
            "keyInterfaceName": "HTMLIFrameElement",
            "name": "longdesc",
            "prop": false,
            "propName": "longDesc",
            "readonly": false,
            "value": "string"
          },
          "marginHeight": {
            "attr": false,
            "attrName": "marginheight",
            "keyInterfaceName": "HTMLIFrameElement",
            "name": "marginHeight",
            "prop": true,
            "propName": "marginHeight",
            "readonly": false,
            "value": "string"
          },
          "marginheight": {
            "attr": true,
            "attrName": "marginheight",
            "keyInterfaceName": "HTMLIFrameElement",
            "name": "marginheight",
            "prop": false,
            "propName": "marginHeight",
            "readonly": false,
            "value": "string"
          },
          "marginWidth": {
            "attr": false,
            "attrName": "marginwidth",
            "keyInterfaceName": "HTMLIFrameElement",
            "name": "marginWidth",
            "prop": true,
            "propName": "marginWidth",
            "readonly": false,
            "value": "string"
          },
          "marginwidth": {
            "attr": true,
            "attrName": "marginwidth",
            "keyInterfaceName": "HTMLIFrameElement",
            "name": "marginwidth",
            "prop": false,
            "propName": "marginWidth",
            "readonly": false,
            "value": "string"
          },
          "name": {
            "attr": true,
            "attrName": "name",
            "keyInterfaceName": "HTMLIFrameElement",
            "name": "name",
            "prop": true,
            "propName": "name",
            "readonly": false,
            "value": "string"
          },
          "privateToken": {
            "attr": false,
            "attrName": "privatetoken",
            "keyInterfaceName": "HTMLIFrameElement",
            "name": "privateToken",
            "prop": true,
            "propName": "privateToken",
            "readonly": false,
            "value": "string"
          },
          "privatetoken": {
            "attr": true,
            "attrName": "privatetoken",
            "keyInterfaceName": "HTMLIFrameElement",
            "name": "privatetoken",
            "prop": false,
            "propName": "privateToken",
            "readonly": false,
            "value": "string"
          },
          "referrerPolicy": {
            "attr": false,
            "attrName": "referrerpolicy",
            "keyInterfaceName": "HTMLIFrameElement",
            "name": "referrerPolicy",
            "prop": true,
            "propName": "referrerPolicy",
            "readonly": false,
            "value": "string"
          },
          "referrerpolicy": {
            "attr": true,
            "attrName": "referrerpolicy",
            "keyInterfaceName": "HTMLIFrameElement",
            "name": "referrerpolicy",
            "prop": false,
            "propName": "referrerPolicy",
            "readonly": false,
            "value": "string"
          },
          "sandbox": {
            "attr": true,
            "attrName": "sandbox",
            "keyInterfaceName": "HTMLIFrameElement",
            "name": "sandbox",
            "prop": true,
            "propName": "sandbox",
            "readonly": false,
            "value": "string"
          },
          "scrolling": {
            "attr": true,
            "attrName": "scrolling",
            "keyInterfaceName": "HTMLIFrameElement",
            "name": "scrolling",
            "prop": true,
            "propName": "scrolling",
            "readonly": false,
            "value": "string"
          },
          "sharedStorageWritable": {
            "attr": false,
            "attrName": "sharedstoragewritable",
            "keyInterfaceName": "HTMLIFrameElement",
            "name": "sharedStorageWritable",
            "prop": true,
            "propName": "sharedStorageWritable",
            "readonly": false,
            "value": "boolean"
          },
          "sharedstoragewritable": {
            "attr": true,
            "attrName": "sharedstoragewritable",
            "keyInterfaceName": "HTMLIFrameElement",
            "name": "sharedstoragewritable",
            "prop": false,
            "propName": "sharedStorageWritable",
            "readonly": false,
            "value": "boolean"
          },
          "src": {
            "attr": true,
            "attrName": "src",
            "keyInterfaceName": "HTMLIFrameElement",
            "name": "src",
            "prop": true,
            "propName": "src",
            "readonly": false,
            "value": "string"
          },
          "srcdoc": {
            "attr": true,
            "attrName": "srcdoc",
            "keyInterfaceName": "HTMLIFrameElement",
            "name": "srcdoc",
            "prop": true,
            "propName": "srcdoc",
            "readonly": false,
            "value": "string"
          },
          "width": {
            "attr": true,
            "attrName": "width",
            "keyInterfaceName": "HTMLIFrameElement",
            "name": "width",
            "prop": true,
            "propName": "width",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [
          "HTMLIFrameElement.contentDocument",
          "HTMLIFrameElement.contentWindow",
          "HTMLIFrameElement.featurePolicy"
        ],
        "tagInterfaceName": "HTMLIFrameElement"
      },
      "image": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLUnknownElement"
      },
      "img": {
        "booleans": [
          "HTMLImageElement.browsingTopics",
          "HTMLImageElement.browsingtopics",
          "HTMLImageElement.isMap",
          "HTMLImageElement.ismap",
          "HTMLImageElement.sharedStorageWritable",
          "HTMLImageElement.sharedstoragewritable"
        ],
        "events": [],
        "keys": {
          "align": {
            "attr": true,
            "attrName": "align",
            "keyInterfaceName": "HTMLImageElement",
            "name": "align",
            "prop": true,
            "propName": "align",
            "readonly": false,
            "value": "string"
          },
          "alt": {
            "attr": true,
            "attrName": "alt",
            "keyInterfaceName": "HTMLImageElement",
            "name": "alt",
            "prop": true,
            "propName": "alt",
            "readonly": false,
            "value": "string"
          },
          "attributionSrc": {
            "attr": false,
            "attrName": "attributionsrc",
            "keyInterfaceName": "HTMLImageElement",
            "name": "attributionSrc",
            "prop": true,
            "propName": "attributionSrc",
            "readonly": false,
            "value": "string"
          },
          "attributionsrc": {
            "attr": true,
            "attrName": "attributionsrc",
            "keyInterfaceName": "HTMLImageElement",
            "name": "attributionsrc",
            "prop": false,
            "propName": "attributionSrc",
            "readonly": false,
            "value": "string"
          },
          "border": {
            "attr": true,
            "attrName": "border",
            "keyInterfaceName": "HTMLImageElement",
            "name": "border",
            "prop": true,
            "propName": "border",
            "readonly": false,
            "value": "string"
          },
          "browsingTopics": {
            "attr": false,
            "attrName": "browsingtopics",
            "keyInterfaceName": "HTMLImageElement",
            "name": "browsingTopics",
            "prop": true,
            "propName": "browsingTopics",
            "readonly": false,
            "value": "boolean"
          },
          "browsingtopics": {
            "attr": true,
            "attrName": "browsingtopics",
            "keyInterfaceName": "HTMLImageElement",
            "name": "browsingtopics",
            "prop": false,
            "propName": "browsingTopics",
            "readonly": false,
            "value": "boolean"
          },
          "crossOrigin": {
            "attr": false,
            "attrName": "crossorigin",
            "keyInterfaceName": "HTMLImageElement",
            "name": "crossOrigin",
            "prop": true,
            "propName": "crossOrigin",
            "readonly": false,
            "value": "string"
          },
          "crossorigin": {
            "attr": true,
            "attrName": "crossorigin",
            "keyInterfaceName": "HTMLImageElement",
            "name": "crossorigin",
            "prop": false,
            "propName": "crossOrigin",
            "readonly": false,
            "value": "string"
          },
          "decoding": {
            "attr": true,
            "attrName": "decoding",
            "keyInterfaceName": "HTMLImageElement",
            "name": "decoding",
            "prop": true,
            "propName": "decoding",
            "readonly": false,
            "value": "string"
          },
          "fetchPriority": {
            "attr": false,
            "attrName": "fetchpriority",
            "keyInterfaceName": "HTMLImageElement",
            "name": "fetchPriority",
            "prop": true,
            "propName": "fetchPriority",
            "readonly": false,
            "value": "string"
          },
          "fetchpriority": {
            "attr": true,
            "attrName": "fetchpriority",
            "keyInterfaceName": "HTMLImageElement",
            "name": "fetchpriority",
            "prop": false,
            "propName": "fetchPriority",
            "readonly": false,
            "value": "string"
          },
          "height": {
            "attr": true,
            "attrName": "height",
            "keyInterfaceName": "HTMLImageElement",
            "name": "height",
            "prop": true,
            "propName": "height",
            "readonly": false,
            "value": "number"
          },
          "hspace": {
            "attr": true,
            "attrName": "hspace",
            "keyInterfaceName": "HTMLImageElement",
            "name": "hspace",
            "prop": true,
            "propName": "hspace",
            "readonly": false,
            "value": "number"
          },
          "isMap": {
            "attr": false,
            "attrName": "ismap",
            "keyInterfaceName": "HTMLImageElement",
            "name": "isMap",
            "prop": true,
            "propName": "isMap",
            "readonly": false,
            "value": "boolean"
          },
          "ismap": {
            "attr": true,
            "attrName": "ismap",
            "keyInterfaceName": "HTMLImageElement",
            "name": "ismap",
            "prop": false,
            "propName": "isMap",
            "readonly": false,
            "value": "boolean"
          },
          "loading": {
            "attr": true,
            "attrName": "loading",
            "keyInterfaceName": "HTMLImageElement",
            "name": "loading",
            "prop": true,
            "propName": "loading",
            "readonly": false,
            "value": "string"
          },
          "longDesc": {
            "attr": false,
            "attrName": "longdesc",
            "keyInterfaceName": "HTMLImageElement",
            "name": "longDesc",
            "prop": true,
            "propName": "longDesc",
            "readonly": false,
            "value": "string"
          },
          "longdesc": {
            "attr": true,
            "attrName": "longdesc",
            "keyInterfaceName": "HTMLImageElement",
            "name": "longdesc",
            "prop": false,
            "propName": "longDesc",
            "readonly": false,
            "value": "string"
          },
          "lowsrc": {
            "attr": true,
            "attrName": "lowsrc",
            "keyInterfaceName": "HTMLImageElement",
            "name": "lowsrc",
            "prop": true,
            "propName": "lowsrc",
            "readonly": false,
            "value": "string"
          },
          "name": {
            "attr": true,
            "attrName": "name",
            "keyInterfaceName": "HTMLImageElement",
            "name": "name",
            "prop": true,
            "propName": "name",
            "readonly": false,
            "value": "string"
          },
          "referrerPolicy": {
            "attr": false,
            "attrName": "referrerpolicy",
            "keyInterfaceName": "HTMLImageElement",
            "name": "referrerPolicy",
            "prop": true,
            "propName": "referrerPolicy",
            "readonly": false,
            "value": "string"
          },
          "referrerpolicy": {
            "attr": true,
            "attrName": "referrerpolicy",
            "keyInterfaceName": "HTMLImageElement",
            "name": "referrerpolicy",
            "prop": false,
            "propName": "referrerPolicy",
            "readonly": false,
            "value": "string"
          },
          "sharedStorageWritable": {
            "attr": false,
            "attrName": "sharedstoragewritable",
            "keyInterfaceName": "HTMLImageElement",
            "name": "sharedStorageWritable",
            "prop": true,
            "propName": "sharedStorageWritable",
            "readonly": false,
            "value": "boolean"
          },
          "sharedstoragewritable": {
            "attr": true,
            "attrName": "sharedstoragewritable",
            "keyInterfaceName": "HTMLImageElement",
            "name": "sharedstoragewritable",
            "prop": false,
            "propName": "sharedStorageWritable",
            "readonly": false,
            "value": "boolean"
          },
          "sizes": {
            "attr": true,
            "attrName": "sizes",
            "keyInterfaceName": "HTMLImageElement",
            "name": "sizes",
            "prop": true,
            "propName": "sizes",
            "readonly": false,
            "value": "string"
          },
          "src": {
            "attr": true,
            "attrName": "src",
            "keyInterfaceName": "HTMLImageElement",
            "name": "src",
            "prop": true,
            "propName": "src",
            "readonly": false,
            "value": "string"
          },
          "srcset": {
            "attr": true,
            "attrName": "srcset",
            "keyInterfaceName": "HTMLImageElement",
            "name": "srcset",
            "prop": true,
            "propName": "srcset",
            "readonly": false,
            "value": "string"
          },
          "useMap": {
            "attr": false,
            "attrName": "usemap",
            "keyInterfaceName": "HTMLImageElement",
            "name": "useMap",
            "prop": true,
            "propName": "useMap",
            "readonly": false,
            "value": "string"
          },
          "usemap": {
            "attr": true,
            "attrName": "usemap",
            "keyInterfaceName": "HTMLImageElement",
            "name": "usemap",
            "prop": false,
            "propName": "useMap",
            "readonly": false,
            "value": "string"
          },
          "vspace": {
            "attr": true,
            "attrName": "vspace",
            "keyInterfaceName": "HTMLImageElement",
            "name": "vspace",
            "prop": true,
            "propName": "vspace",
            "readonly": false,
            "value": "number"
          },
          "width": {
            "attr": true,
            "attrName": "width",
            "keyInterfaceName": "HTMLImageElement",
            "name": "width",
            "prop": true,
            "propName": "width",
            "readonly": false,
            "value": "number"
          }
        },
        "readonly": [
          "HTMLImageElement.complete",
          "HTMLImageElement.currentSrc",
          "HTMLImageElement.naturalHeight",
          "HTMLImageElement.naturalWidth",
          "HTMLImageElement.x",
          "HTMLImageElement.y"
        ],
        "tagInterfaceName": "HTMLImageElement"
      },
      "input": {
        "booleans": [
          "HTMLInputElement.checked",
          "HTMLInputElement.checked",
          "HTMLInputElement.defaultChecked",
          "HTMLInputElement.disabled",
          "HTMLInputElement.formNoValidate",
          "HTMLInputElement.formnovalidate",
          "HTMLInputElement.incremental",
          "HTMLInputElement.indeterminate",
          "HTMLInputElement.multiple",
          "HTMLInputElement.readOnly",
          "HTMLInputElement.readonly",
          "HTMLInputElement.required",
          "HTMLInputElement.webkitdirectory"
        ],
        "events": [],
        "keys": {
          "accept": {
            "attr": true,
            "attrName": "accept",
            "keyInterfaceName": "HTMLInputElement",
            "name": "accept",
            "prop": true,
            "propName": "accept",
            "readonly": false,
            "value": "string"
          },
          "align": {
            "attr": true,
            "attrName": "align",
            "keyInterfaceName": "HTMLInputElement",
            "name": "align",
            "prop": true,
            "propName": "align",
            "readonly": false,
            "value": "string"
          },
          "alt": {
            "attr": true,
            "attrName": "alt",
            "keyInterfaceName": "HTMLInputElement",
            "name": "alt",
            "prop": true,
            "propName": "alt",
            "readonly": false,
            "value": "string"
          },
          "autocomplete": {
            "attr": true,
            "attrName": "autocomplete",
            "keyInterfaceName": "HTMLInputElement",
            "name": "autocomplete",
            "prop": true,
            "propName": "autocomplete",
            "readonly": false,
            "value": "string"
          },
          "checked": {
            "attr": true,
            "attrName": "checked",
            "keyInterfaceName": "HTMLInputElement",
            "name": "checked",
            "prop": true,
            "propName": "defaultChecked",
            "readonly": false,
            "value": "boolean"
          },
          "defaultChecked": {
            "attr": false,
            "attrName": "checked",
            "keyInterfaceName": "HTMLInputElement",
            "name": "defaultChecked",
            "prop": true,
            "propName": "defaultChecked",
            "readonly": false,
            "value": "boolean"
          },
          "defaultValue": {
            "attr": false,
            "attrName": "value",
            "keyInterfaceName": "HTMLInputElement",
            "name": "defaultValue",
            "prop": true,
            "propName": "defaultValue",
            "readonly": false,
            "value": "string"
          },
          "dirName": {
            "attr": false,
            "attrName": "dirname",
            "keyInterfaceName": "HTMLInputElement",
            "name": "dirName",
            "prop": true,
            "propName": "dirName",
            "readonly": false,
            "value": "string"
          },
          "dirname": {
            "attr": true,
            "attrName": "dirname",
            "keyInterfaceName": "HTMLInputElement",
            "name": "dirname",
            "prop": false,
            "propName": "dirName",
            "readonly": false,
            "value": "string"
          },
          "disabled": {
            "attr": true,
            "attrName": "disabled",
            "keyInterfaceName": "HTMLInputElement",
            "name": "disabled",
            "prop": true,
            "propName": "disabled",
            "readonly": false,
            "value": "boolean"
          },
          "files": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLInputElement",
            "name": "files",
            "prop": true,
            "propName": "files",
            "readonly": false,
            "value": "FileList"
          },
          "formAction": {
            "attr": false,
            "attrName": "formaction",
            "keyInterfaceName": "HTMLInputElement",
            "name": "formAction",
            "prop": true,
            "propName": "formAction",
            "readonly": false,
            "value": "string"
          },
          "formaction": {
            "attr": true,
            "attrName": "formaction",
            "keyInterfaceName": "HTMLInputElement",
            "name": "formaction",
            "prop": false,
            "propName": "formAction",
            "readonly": false,
            "value": "string"
          },
          "formEnctype": {
            "attr": false,
            "attrName": "formenctype",
            "keyInterfaceName": "HTMLInputElement",
            "name": "formEnctype",
            "prop": true,
            "propName": "formEnctype",
            "readonly": false,
            "value": "string"
          },
          "formenctype": {
            "attr": true,
            "attrName": "formenctype",
            "keyInterfaceName": "HTMLInputElement",
            "name": "formenctype",
            "prop": false,
            "propName": "formEnctype",
            "readonly": false,
            "value": "string"
          },
          "formMethod": {
            "attr": false,
            "attrName": "formmethod",
            "keyInterfaceName": "HTMLInputElement",
            "name": "formMethod",
            "prop": true,
            "propName": "formMethod",
            "readonly": false,
            "value": "string"
          },
          "formmethod": {
            "attr": true,
            "attrName": "formmethod",
            "keyInterfaceName": "HTMLInputElement",
            "name": "formmethod",
            "prop": false,
            "propName": "formMethod",
            "readonly": false,
            "value": "string"
          },
          "formNoValidate": {
            "attr": false,
            "attrName": "formnovalidate",
            "keyInterfaceName": "HTMLInputElement",
            "name": "formNoValidate",
            "prop": true,
            "propName": "formNoValidate",
            "readonly": false,
            "value": "boolean"
          },
          "formnovalidate": {
            "attr": true,
            "attrName": "formnovalidate",
            "keyInterfaceName": "HTMLInputElement",
            "name": "formnovalidate",
            "prop": false,
            "propName": "formNoValidate",
            "readonly": false,
            "value": "boolean"
          },
          "formTarget": {
            "attr": false,
            "attrName": "formtarget",
            "keyInterfaceName": "HTMLInputElement",
            "name": "formTarget",
            "prop": true,
            "propName": "formTarget",
            "readonly": false,
            "value": "string"
          },
          "formtarget": {
            "attr": true,
            "attrName": "formtarget",
            "keyInterfaceName": "HTMLInputElement",
            "name": "formtarget",
            "prop": false,
            "propName": "formTarget",
            "readonly": false,
            "value": "string"
          },
          "height": {
            "attr": true,
            "attrName": "height",
            "keyInterfaceName": "HTMLInputElement",
            "name": "height",
            "prop": true,
            "propName": "height",
            "readonly": false,
            "value": "number"
          },
          "incremental": {
            "attr": true,
            "attrName": "incremental",
            "keyInterfaceName": "HTMLInputElement",
            "name": "incremental",
            "prop": true,
            "propName": "incremental",
            "readonly": false,
            "value": "boolean"
          },
          "indeterminate": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLInputElement",
            "name": "indeterminate",
            "prop": true,
            "propName": "indeterminate",
            "readonly": false,
            "value": "boolean"
          },
          "max": {
            "attr": true,
            "attrName": "max",
            "keyInterfaceName": "HTMLInputElement",
            "name": "max",
            "prop": true,
            "propName": "max",
            "readonly": false,
            "value": "string"
          },
          "maxLength": {
            "attr": false,
            "attrName": "maxlength",
            "keyInterfaceName": "HTMLInputElement",
            "name": "maxLength",
            "prop": true,
            "propName": "maxLength",
            "readonly": false,
            "value": "number"
          },
          "maxlength": {
            "attr": true,
            "attrName": "maxlength",
            "keyInterfaceName": "HTMLInputElement",
            "name": "maxlength",
            "prop": false,
            "propName": "maxLength",
            "readonly": false,
            "value": "number"
          },
          "min": {
            "attr": true,
            "attrName": "min",
            "keyInterfaceName": "HTMLInputElement",
            "name": "min",
            "prop": true,
            "propName": "min",
            "readonly": false,
            "value": "string"
          },
          "minLength": {
            "attr": false,
            "attrName": "minlength",
            "keyInterfaceName": "HTMLInputElement",
            "name": "minLength",
            "prop": true,
            "propName": "minLength",
            "readonly": false,
            "value": "number"
          },
          "minlength": {
            "attr": true,
            "attrName": "minlength",
            "keyInterfaceName": "HTMLInputElement",
            "name": "minlength",
            "prop": false,
            "propName": "minLength",
            "readonly": false,
            "value": "number"
          },
          "multiple": {
            "attr": true,
            "attrName": "multiple",
            "keyInterfaceName": "HTMLInputElement",
            "name": "multiple",
            "prop": true,
            "propName": "multiple",
            "readonly": false,
            "value": "boolean"
          },
          "name": {
            "attr": true,
            "attrName": "name",
            "keyInterfaceName": "HTMLInputElement",
            "name": "name",
            "prop": true,
            "propName": "name",
            "readonly": false,
            "value": "string"
          },
          "pattern": {
            "attr": true,
            "attrName": "pattern",
            "keyInterfaceName": "HTMLInputElement",
            "name": "pattern",
            "prop": true,
            "propName": "pattern",
            "readonly": false,
            "value": "string"
          },
          "placeholder": {
            "attr": true,
            "attrName": "placeholder",
            "keyInterfaceName": "HTMLInputElement",
            "name": "placeholder",
            "prop": true,
            "propName": "placeholder",
            "readonly": false,
            "value": "string"
          },
          "popoverTargetAction": {
            "attr": false,
            "attrName": "popovertargetaction",
            "keyInterfaceName": "HTMLInputElement",
            "name": "popoverTargetAction",
            "prop": true,
            "propName": "popoverTargetAction",
            "readonly": false,
            "value": "string"
          },
          "popovertargetaction": {
            "attr": true,
            "attrName": "popovertargetaction",
            "keyInterfaceName": "HTMLInputElement",
            "name": "popovertargetaction",
            "prop": false,
            "propName": "popoverTargetAction",
            "readonly": false,
            "value": "string"
          },
          "popoverTargetElement": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLInputElement",
            "name": "popoverTargetElement",
            "prop": true,
            "propName": "popoverTargetElement",
            "readonly": false,
            "value": "Element"
          },
          "readOnly": {
            "attr": false,
            "attrName": "readonly",
            "keyInterfaceName": "HTMLInputElement",
            "name": "readOnly",
            "prop": true,
            "propName": "readOnly",
            "readonly": false,
            "value": "boolean"
          },
          "readonly": {
            "attr": true,
            "attrName": "readonly",
            "keyInterfaceName": "HTMLInputElement",
            "name": "readonly",
            "prop": false,
            "propName": "readOnly",
            "readonly": false,
            "value": "boolean"
          },
          "required": {
            "attr": true,
            "attrName": "required",
            "keyInterfaceName": "HTMLInputElement",
            "name": "required",
            "prop": true,
            "propName": "required",
            "readonly": false,
            "value": "boolean"
          },
          "selectionDirection": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLInputElement",
            "name": "selectionDirection",
            "prop": true,
            "propName": "selectionDirection",
            "readonly": false,
            "value": "string"
          },
          "selectionEnd": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLInputElement",
            "name": "selectionEnd",
            "prop": true,
            "propName": "selectionEnd",
            "readonly": false,
            "value": "number"
          },
          "selectionStart": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLInputElement",
            "name": "selectionStart",
            "prop": true,
            "propName": "selectionStart",
            "readonly": false,
            "value": "number"
          },
          "size": {
            "attr": true,
            "attrName": "size",
            "keyInterfaceName": "HTMLInputElement",
            "name": "size",
            "prop": true,
            "propName": "size",
            "readonly": false,
            "value": "number"
          },
          "src": {
            "attr": true,
            "attrName": "src",
            "keyInterfaceName": "HTMLInputElement",
            "name": "src",
            "prop": true,
            "propName": "src",
            "readonly": false,
            "value": "string"
          },
          "step": {
            "attr": true,
            "attrName": "step",
            "keyInterfaceName": "HTMLInputElement",
            "name": "step",
            "prop": true,
            "propName": "step",
            "readonly": false,
            "value": "string"
          },
          "type": {
            "attr": true,
            "attrName": "type",
            "keyInterfaceName": "HTMLInputElement",
            "name": "type",
            "prop": true,
            "propName": "type",
            "readonly": false,
            "value": "string"
          },
          "useMap": {
            "attr": false,
            "attrName": "usemap",
            "keyInterfaceName": "HTMLInputElement",
            "name": "useMap",
            "prop": true,
            "propName": "useMap",
            "readonly": false,
            "value": "string"
          },
          "usemap": {
            "attr": true,
            "attrName": "usemap",
            "keyInterfaceName": "HTMLInputElement",
            "name": "usemap",
            "prop": false,
            "propName": "useMap",
            "readonly": false,
            "value": "string"
          },
          "value": {
            "attr": true,
            "attrName": "value",
            "keyInterfaceName": "HTMLInputElement",
            "name": "value",
            "prop": true,
            "propName": "defaultValue",
            "readonly": false,
            "value": "string"
          },
          "valueAsDate": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLInputElement",
            "name": "valueAsDate",
            "prop": true,
            "propName": "valueAsDate",
            "readonly": false,
            "value": "Date"
          },
          "valueAsNumber": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLInputElement",
            "name": "valueAsNumber",
            "prop": true,
            "propName": "valueAsNumber",
            "readonly": false,
            "value": "number"
          },
          "webkitdirectory": {
            "attr": true,
            "attrName": "webkitdirectory",
            "keyInterfaceName": "HTMLInputElement",
            "name": "webkitdirectory",
            "prop": true,
            "propName": "webkitdirectory",
            "readonly": false,
            "value": "boolean"
          },
          "width": {
            "attr": true,
            "attrName": "width",
            "keyInterfaceName": "HTMLInputElement",
            "name": "width",
            "prop": true,
            "propName": "width",
            "readonly": false,
            "value": "number"
          }
        },
        "readonly": [
          "HTMLInputElement.form",
          "HTMLInputElement.labels",
          "HTMLInputElement.list",
          "HTMLInputElement.validationMessage",
          "HTMLInputElement.validity",
          "HTMLInputElement.webkitEntries",
          "HTMLInputElement.willValidate"
        ],
        "tagInterfaceName": "HTMLInputElement"
      },
      "ins": {
        "booleans": [],
        "events": [],
        "keys": {
          "cite": {
            "attr": true,
            "attrName": "cite",
            "keyInterfaceName": "HTMLModElement",
            "name": "cite",
            "prop": true,
            "propName": "cite",
            "readonly": false,
            "value": "string"
          },
          "dateTime": {
            "attr": false,
            "attrName": "datetime",
            "keyInterfaceName": "HTMLModElement",
            "name": "dateTime",
            "prop": true,
            "propName": "dateTime",
            "readonly": false,
            "value": "string"
          },
          "datetime": {
            "attr": true,
            "attrName": "datetime",
            "keyInterfaceName": "HTMLModElement",
            "name": "datetime",
            "prop": false,
            "propName": "dateTime",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLModElement"
      },
      "isindex": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLUnknownElement"
      },
      "kbd": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "keygen": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLUnknownElement"
      },
      "label": {
        "booleans": [],
        "events": [],
        "keys": {
          "for": {
            "attr": true,
            "attrName": "for",
            "keyInterfaceName": "HTMLLabelElement",
            "name": "for",
            "prop": false,
            "propName": "htmlFor",
            "readonly": false,
            "value": "string"
          },
          "htmlFor": {
            "attr": false,
            "attrName": "for",
            "keyInterfaceName": "HTMLLabelElement",
            "name": "htmlFor",
            "prop": true,
            "propName": "htmlFor",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [
          "HTMLLabelElement.control",
          "HTMLLabelElement.form"
        ],
        "tagInterfaceName": "HTMLLabelElement"
      },
      "legend": {
        "booleans": [],
        "events": [],
        "keys": {
          "align": {
            "attr": true,
            "attrName": "align",
            "keyInterfaceName": "HTMLLegendElement",
            "name": "align",
            "prop": true,
            "propName": "align",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [
          "HTMLLegendElement.form"
        ],
        "tagInterfaceName": "HTMLLegendElement"
      },
      "li": {
        "booleans": [],
        "events": [],
        "keys": {
          "type": {
            "attr": true,
            "attrName": "type",
            "keyInterfaceName": "HTMLLIElement",
            "name": "type",
            "prop": true,
            "propName": "type",
            "readonly": false,
            "value": "string"
          },
          "value": {
            "attr": true,
            "attrName": "value",
            "keyInterfaceName": "HTMLLIElement",
            "name": "value",
            "prop": true,
            "propName": "value",
            "readonly": false,
            "value": "number"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLLIElement"
      },
      "link": {
        "booleans": [
          "HTMLLinkElement.disabled"
        ],
        "events": [],
        "keys": {
          "as": {
            "attr": true,
            "attrName": "as",
            "keyInterfaceName": "HTMLLinkElement",
            "name": "as",
            "prop": true,
            "propName": "as",
            "readonly": false,
            "value": "string"
          },
          "blocking": {
            "attr": true,
            "attrName": "blocking",
            "keyInterfaceName": "HTMLLinkElement",
            "name": "blocking",
            "prop": true,
            "propName": "blocking",
            "readonly": false,
            "value": "string"
          },
          "charset": {
            "attr": true,
            "attrName": "charset",
            "keyInterfaceName": "HTMLLinkElement",
            "name": "charset",
            "prop": true,
            "propName": "charset",
            "readonly": false,
            "value": "string"
          },
          "crossOrigin": {
            "attr": false,
            "attrName": "crossorigin",
            "keyInterfaceName": "HTMLLinkElement",
            "name": "crossOrigin",
            "prop": true,
            "propName": "crossOrigin",
            "readonly": false,
            "value": "string"
          },
          "crossorigin": {
            "attr": true,
            "attrName": "crossorigin",
            "keyInterfaceName": "HTMLLinkElement",
            "name": "crossorigin",
            "prop": false,
            "propName": "crossOrigin",
            "readonly": false,
            "value": "string"
          },
          "disabled": {
            "attr": true,
            "attrName": "disabled",
            "keyInterfaceName": "HTMLLinkElement",
            "name": "disabled",
            "prop": true,
            "propName": "disabled",
            "readonly": false,
            "value": "boolean"
          },
          "fetchPriority": {
            "attr": false,
            "attrName": "fetchpriority",
            "keyInterfaceName": "HTMLLinkElement",
            "name": "fetchPriority",
            "prop": true,
            "propName": "fetchPriority",
            "readonly": false,
            "value": "string"
          },
          "fetchpriority": {
            "attr": true,
            "attrName": "fetchpriority",
            "keyInterfaceName": "HTMLLinkElement",
            "name": "fetchpriority",
            "prop": false,
            "propName": "fetchPriority",
            "readonly": false,
            "value": "string"
          },
          "href": {
            "attr": true,
            "attrName": "href",
            "keyInterfaceName": "HTMLLinkElement",
            "name": "href",
            "prop": true,
            "propName": "href",
            "readonly": false,
            "value": "string"
          },
          "hreflang": {
            "attr": true,
            "attrName": "hreflang",
            "keyInterfaceName": "HTMLLinkElement",
            "name": "hreflang",
            "prop": true,
            "propName": "hreflang",
            "readonly": false,
            "value": "string"
          },
          "imageSizes": {
            "attr": false,
            "attrName": "imagesizes",
            "keyInterfaceName": "HTMLLinkElement",
            "name": "imageSizes",
            "prop": true,
            "propName": "imageSizes",
            "readonly": false,
            "value": "string"
          },
          "imagesizes": {
            "attr": true,
            "attrName": "imagesizes",
            "keyInterfaceName": "HTMLLinkElement",
            "name": "imagesizes",
            "prop": false,
            "propName": "imageSizes",
            "readonly": false,
            "value": "string"
          },
          "imageSrcset": {
            "attr": false,
            "attrName": "imagesrcset",
            "keyInterfaceName": "HTMLLinkElement",
            "name": "imageSrcset",
            "prop": true,
            "propName": "imageSrcset",
            "readonly": false,
            "value": "string"
          },
          "imagesrcset": {
            "attr": true,
            "attrName": "imagesrcset",
            "keyInterfaceName": "HTMLLinkElement",
            "name": "imagesrcset",
            "prop": false,
            "propName": "imageSrcset",
            "readonly": false,
            "value": "string"
          },
          "integrity": {
            "attr": true,
            "attrName": "integrity",
            "keyInterfaceName": "HTMLLinkElement",
            "name": "integrity",
            "prop": true,
            "propName": "integrity",
            "readonly": false,
            "value": "string"
          },
          "media": {
            "attr": true,
            "attrName": "media",
            "keyInterfaceName": "HTMLLinkElement",
            "name": "media",
            "prop": true,
            "propName": "media",
            "readonly": false,
            "value": "string"
          },
          "referrerPolicy": {
            "attr": false,
            "attrName": "referrerpolicy",
            "keyInterfaceName": "HTMLLinkElement",
            "name": "referrerPolicy",
            "prop": true,
            "propName": "referrerPolicy",
            "readonly": false,
            "value": "string"
          },
          "referrerpolicy": {
            "attr": true,
            "attrName": "referrerpolicy",
            "keyInterfaceName": "HTMLLinkElement",
            "name": "referrerpolicy",
            "prop": false,
            "propName": "referrerPolicy",
            "readonly": false,
            "value": "string"
          },
          "rel": {
            "attr": true,
            "attrName": "rel",
            "keyInterfaceName": "HTMLLinkElement",
            "name": "rel",
            "prop": true,
            "propName": "relList",
            "readonly": false,
            "value": "string"
          },
          "relList": {
            "attr": false,
            "attrName": "rel",
            "keyInterfaceName": "HTMLLinkElement",
            "name": "relList",
            "prop": true,
            "propName": "relList",
            "readonly": false,
            "value": "string"
          },
          "rev": {
            "attr": true,
            "attrName": "rev",
            "keyInterfaceName": "HTMLLinkElement",
            "name": "rev",
            "prop": true,
            "propName": "rev",
            "readonly": false,
            "value": "string"
          },
          "sizes": {
            "attr": true,
            "attrName": "sizes",
            "keyInterfaceName": "HTMLLinkElement",
            "name": "sizes",
            "prop": true,
            "propName": "sizes",
            "readonly": false,
            "value": "string"
          },
          "target": {
            "attr": true,
            "attrName": "target",
            "keyInterfaceName": "HTMLLinkElement",
            "name": "target",
            "prop": true,
            "propName": "target",
            "readonly": false,
            "value": "string"
          },
          "type": {
            "attr": true,
            "attrName": "type",
            "keyInterfaceName": "HTMLLinkElement",
            "name": "type",
            "prop": true,
            "propName": "type",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [
          "HTMLLinkElement.sheet"
        ],
        "tagInterfaceName": "HTMLLinkElement"
      },
      "listing": {
        "booleans": [],
        "events": [],
        "keys": {
          "width": {
            "attr": true,
            "attrName": "width",
            "keyInterfaceName": "HTMLPreElement",
            "name": "width",
            "prop": true,
            "propName": "width",
            "readonly": false,
            "value": "number"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLPreElement"
      },
      "main": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "map": {
        "booleans": [],
        "events": [],
        "keys": {
          "name": {
            "attr": true,
            "attrName": "name",
            "keyInterfaceName": "HTMLMapElement",
            "name": "name",
            "prop": true,
            "propName": "name",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [
          "HTMLMapElement.areas"
        ],
        "tagInterfaceName": "HTMLMapElement"
      },
      "mark": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "marquee": {
        "booleans": [
          "HTMLMarqueeElement.trueSpeed",
          "HTMLMarqueeElement.truespeed"
        ],
        "events": [],
        "keys": {
          "behavior": {
            "attr": true,
            "attrName": "behavior",
            "keyInterfaceName": "HTMLMarqueeElement",
            "name": "behavior",
            "prop": true,
            "propName": "behavior",
            "readonly": false,
            "value": "string"
          },
          "bgColor": {
            "attr": false,
            "attrName": "bgcolor",
            "keyInterfaceName": "HTMLMarqueeElement",
            "name": "bgColor",
            "prop": true,
            "propName": "bgColor",
            "readonly": false,
            "value": "string"
          },
          "bgcolor": {
            "attr": true,
            "attrName": "bgcolor",
            "keyInterfaceName": "HTMLMarqueeElement",
            "name": "bgcolor",
            "prop": false,
            "propName": "bgColor",
            "readonly": false,
            "value": "string"
          },
          "direction": {
            "attr": true,
            "attrName": "direction",
            "keyInterfaceName": "HTMLMarqueeElement",
            "name": "direction",
            "prop": true,
            "propName": "direction",
            "readonly": false,
            "value": "string"
          },
          "height": {
            "attr": true,
            "attrName": "height",
            "keyInterfaceName": "HTMLMarqueeElement",
            "name": "height",
            "prop": true,
            "propName": "height",
            "readonly": false,
            "value": "string"
          },
          "hspace": {
            "attr": true,
            "attrName": "hspace",
            "keyInterfaceName": "HTMLMarqueeElement",
            "name": "hspace",
            "prop": true,
            "propName": "hspace",
            "readonly": false,
            "value": "number"
          },
          "loop": {
            "attr": true,
            "attrName": "loop",
            "keyInterfaceName": "HTMLMarqueeElement",
            "name": "loop",
            "prop": true,
            "propName": "loop",
            "readonly": false,
            "value": "number"
          },
          "scrollAmount": {
            "attr": false,
            "attrName": "scrollamount",
            "keyInterfaceName": "HTMLMarqueeElement",
            "name": "scrollAmount",
            "prop": true,
            "propName": "scrollAmount",
            "readonly": false,
            "value": "number"
          },
          "scrollamount": {
            "attr": true,
            "attrName": "scrollamount",
            "keyInterfaceName": "HTMLMarqueeElement",
            "name": "scrollamount",
            "prop": false,
            "propName": "scrollAmount",
            "readonly": false,
            "value": "number"
          },
          "scrollDelay": {
            "attr": false,
            "attrName": "scrolldelay",
            "keyInterfaceName": "HTMLMarqueeElement",
            "name": "scrollDelay",
            "prop": true,
            "propName": "scrollDelay",
            "readonly": false,
            "value": "number"
          },
          "scrolldelay": {
            "attr": true,
            "attrName": "scrolldelay",
            "keyInterfaceName": "HTMLMarqueeElement",
            "name": "scrolldelay",
            "prop": false,
            "propName": "scrollDelay",
            "readonly": false,
            "value": "number"
          },
          "trueSpeed": {
            "attr": false,
            "attrName": "truespeed",
            "keyInterfaceName": "HTMLMarqueeElement",
            "name": "trueSpeed",
            "prop": true,
            "propName": "trueSpeed",
            "readonly": false,
            "value": "boolean"
          },
          "truespeed": {
            "attr": true,
            "attrName": "truespeed",
            "keyInterfaceName": "HTMLMarqueeElement",
            "name": "truespeed",
            "prop": false,
            "propName": "trueSpeed",
            "readonly": false,
            "value": "boolean"
          },
          "vspace": {
            "attr": true,
            "attrName": "vspace",
            "keyInterfaceName": "HTMLMarqueeElement",
            "name": "vspace",
            "prop": true,
            "propName": "vspace",
            "readonly": false,
            "value": "number"
          },
          "width": {
            "attr": true,
            "attrName": "width",
            "keyInterfaceName": "HTMLMarqueeElement",
            "name": "width",
            "prop": true,
            "propName": "width",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLMarqueeElement"
      },
      "menu": {
        "booleans": [
          "HTMLMenuElement.compact"
        ],
        "events": [],
        "keys": {
          "compact": {
            "attr": true,
            "attrName": "compact",
            "keyInterfaceName": "HTMLMenuElement",
            "name": "compact",
            "prop": true,
            "propName": "compact",
            "readonly": false,
            "value": "boolean"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLMenuElement"
      },
      "menuitem": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLUnknownElement"
      },
      "meta": {
        "booleans": [],
        "events": [],
        "keys": {
          "content": {
            "attr": true,
            "attrName": "content",
            "keyInterfaceName": "HTMLMetaElement",
            "name": "content",
            "prop": true,
            "propName": "content",
            "readonly": false,
            "value": "string"
          },
          "httpEquiv": {
            "attr": false,
            "attrName": "http-equiv",
            "keyInterfaceName": "HTMLMetaElement",
            "name": "httpEquiv",
            "prop": true,
            "propName": "httpEquiv",
            "readonly": false,
            "value": "string"
          },
          "http-equiv": {
            "attr": true,
            "attrName": "http-equiv",
            "keyInterfaceName": "HTMLMetaElement",
            "name": "http-equiv",
            "prop": false,
            "propName": "httpEquiv",
            "readonly": false,
            "value": "string"
          },
          "media": {
            "attr": true,
            "attrName": "media",
            "keyInterfaceName": "HTMLMetaElement",
            "name": "media",
            "prop": true,
            "propName": "media",
            "readonly": false,
            "value": "string"
          },
          "name": {
            "attr": true,
            "attrName": "name",
            "keyInterfaceName": "HTMLMetaElement",
            "name": "name",
            "prop": true,
            "propName": "name",
            "readonly": false,
            "value": "string"
          },
          "scheme": {
            "attr": true,
            "attrName": "scheme",
            "keyInterfaceName": "HTMLMetaElement",
            "name": "scheme",
            "prop": true,
            "propName": "scheme",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLMetaElement"
      },
      "meter": {
        "booleans": [],
        "events": [],
        "keys": {
          "high": {
            "attr": true,
            "attrName": "high",
            "keyInterfaceName": "HTMLMeterElement",
            "name": "high",
            "prop": true,
            "propName": "high",
            "readonly": false,
            "value": "number"
          },
          "low": {
            "attr": true,
            "attrName": "low",
            "keyInterfaceName": "HTMLMeterElement",
            "name": "low",
            "prop": true,
            "propName": "low",
            "readonly": false,
            "value": "number"
          },
          "max": {
            "attr": true,
            "attrName": "max",
            "keyInterfaceName": "HTMLMeterElement",
            "name": "max",
            "prop": true,
            "propName": "max",
            "readonly": false,
            "value": "number"
          },
          "min": {
            "attr": true,
            "attrName": "min",
            "keyInterfaceName": "HTMLMeterElement",
            "name": "min",
            "prop": true,
            "propName": "min",
            "readonly": false,
            "value": "number"
          },
          "optimum": {
            "attr": true,
            "attrName": "optimum",
            "keyInterfaceName": "HTMLMeterElement",
            "name": "optimum",
            "prop": true,
            "propName": "optimum",
            "readonly": false,
            "value": "number"
          },
          "value": {
            "attr": true,
            "attrName": "value",
            "keyInterfaceName": "HTMLMeterElement",
            "name": "value",
            "prop": true,
            "propName": "value",
            "readonly": false,
            "value": "number"
          }
        },
        "readonly": [
          "HTMLMeterElement.labels"
        ],
        "tagInterfaceName": "HTMLMeterElement"
      },
      "multicol": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLUnknownElement"
      },
      "nav": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "nextid": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLUnknownElement"
      },
      "nobr": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "noembed": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "noframes": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "noindex": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLUnknownElement"
      },
      "noscript": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "object": {
        "booleans": [
          "HTMLObjectElement.declare"
        ],
        "events": [],
        "keys": {
          "align": {
            "attr": true,
            "attrName": "align",
            "keyInterfaceName": "HTMLObjectElement",
            "name": "align",
            "prop": true,
            "propName": "align",
            "readonly": false,
            "value": "string"
          },
          "archive": {
            "attr": true,
            "attrName": "archive",
            "keyInterfaceName": "HTMLObjectElement",
            "name": "archive",
            "prop": true,
            "propName": "archive",
            "readonly": false,
            "value": "string"
          },
          "border": {
            "attr": true,
            "attrName": "border",
            "keyInterfaceName": "HTMLObjectElement",
            "name": "border",
            "prop": true,
            "propName": "border",
            "readonly": false,
            "value": "string"
          },
          "code": {
            "attr": true,
            "attrName": "code",
            "keyInterfaceName": "HTMLObjectElement",
            "name": "code",
            "prop": true,
            "propName": "code",
            "readonly": false,
            "value": "string"
          },
          "codeBase": {
            "attr": false,
            "attrName": "codebase",
            "keyInterfaceName": "HTMLObjectElement",
            "name": "codeBase",
            "prop": true,
            "propName": "codeBase",
            "readonly": false,
            "value": "string"
          },
          "codebase": {
            "attr": true,
            "attrName": "codebase",
            "keyInterfaceName": "HTMLObjectElement",
            "name": "codebase",
            "prop": false,
            "propName": "codeBase",
            "readonly": false,
            "value": "string"
          },
          "codeType": {
            "attr": false,
            "attrName": "codetype",
            "keyInterfaceName": "HTMLObjectElement",
            "name": "codeType",
            "prop": true,
            "propName": "codeType",
            "readonly": false,
            "value": "string"
          },
          "codetype": {
            "attr": true,
            "attrName": "codetype",
            "keyInterfaceName": "HTMLObjectElement",
            "name": "codetype",
            "prop": false,
            "propName": "codeType",
            "readonly": false,
            "value": "string"
          },
          "data": {
            "attr": true,
            "attrName": "data",
            "keyInterfaceName": "HTMLObjectElement",
            "name": "data",
            "prop": true,
            "propName": "data",
            "readonly": false,
            "value": "string"
          },
          "declare": {
            "attr": true,
            "attrName": "declare",
            "keyInterfaceName": "HTMLObjectElement",
            "name": "declare",
            "prop": true,
            "propName": "declare",
            "readonly": false,
            "value": "boolean"
          },
          "height": {
            "attr": true,
            "attrName": "height",
            "keyInterfaceName": "HTMLObjectElement",
            "name": "height",
            "prop": true,
            "propName": "height",
            "readonly": false,
            "value": "string"
          },
          "hspace": {
            "attr": true,
            "attrName": "hspace",
            "keyInterfaceName": "HTMLObjectElement",
            "name": "hspace",
            "prop": true,
            "propName": "hspace",
            "readonly": false,
            "value": "number"
          },
          "name": {
            "attr": true,
            "attrName": "name",
            "keyInterfaceName": "HTMLObjectElement",
            "name": "name",
            "prop": true,
            "propName": "name",
            "readonly": false,
            "value": "string"
          },
          "standby": {
            "attr": true,
            "attrName": "standby",
            "keyInterfaceName": "HTMLObjectElement",
            "name": "standby",
            "prop": true,
            "propName": "standby",
            "readonly": false,
            "value": "string"
          },
          "type": {
            "attr": true,
            "attrName": "type",
            "keyInterfaceName": "HTMLObjectElement",
            "name": "type",
            "prop": true,
            "propName": "type",
            "readonly": false,
            "value": "string"
          },
          "useMap": {
            "attr": false,
            "attrName": "usemap",
            "keyInterfaceName": "HTMLObjectElement",
            "name": "useMap",
            "prop": true,
            "propName": "useMap",
            "readonly": false,
            "value": "string"
          },
          "usemap": {
            "attr": true,
            "attrName": "usemap",
            "keyInterfaceName": "HTMLObjectElement",
            "name": "usemap",
            "prop": false,
            "propName": "useMap",
            "readonly": false,
            "value": "string"
          },
          "vspace": {
            "attr": true,
            "attrName": "vspace",
            "keyInterfaceName": "HTMLObjectElement",
            "name": "vspace",
            "prop": true,
            "propName": "vspace",
            "readonly": false,
            "value": "number"
          },
          "width": {
            "attr": true,
            "attrName": "width",
            "keyInterfaceName": "HTMLObjectElement",
            "name": "width",
            "prop": true,
            "propName": "width",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [
          "HTMLObjectElement.contentDocument",
          "HTMLObjectElement.contentWindow",
          "HTMLObjectElement.form",
          "HTMLObjectElement.validationMessage",
          "HTMLObjectElement.validity",
          "HTMLObjectElement.willValidate"
        ],
        "tagInterfaceName": "HTMLObjectElement"
      },
      "ol": {
        "booleans": [
          "HTMLOListElement.compact",
          "HTMLOListElement.reversed"
        ],
        "events": [],
        "keys": {
          "compact": {
            "attr": true,
            "attrName": "compact",
            "keyInterfaceName": "HTMLOListElement",
            "name": "compact",
            "prop": true,
            "propName": "compact",
            "readonly": false,
            "value": "boolean"
          },
          "reversed": {
            "attr": true,
            "attrName": "reversed",
            "keyInterfaceName": "HTMLOListElement",
            "name": "reversed",
            "prop": true,
            "propName": "reversed",
            "readonly": false,
            "value": "boolean"
          },
          "start": {
            "attr": true,
            "attrName": "start",
            "keyInterfaceName": "HTMLOListElement",
            "name": "start",
            "prop": true,
            "propName": "start",
            "readonly": false,
            "value": "number"
          },
          "type": {
            "attr": true,
            "attrName": "type",
            "keyInterfaceName": "HTMLOListElement",
            "name": "type",
            "prop": true,
            "propName": "type",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLOListElement"
      },
      "optgroup": {
        "booleans": [
          "HTMLOptGroupElement.disabled"
        ],
        "events": [],
        "keys": {
          "disabled": {
            "attr": true,
            "attrName": "disabled",
            "keyInterfaceName": "HTMLOptGroupElement",
            "name": "disabled",
            "prop": true,
            "propName": "disabled",
            "readonly": false,
            "value": "boolean"
          },
          "label": {
            "attr": true,
            "attrName": "label",
            "keyInterfaceName": "HTMLOptGroupElement",
            "name": "label",
            "prop": true,
            "propName": "label",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLOptGroupElement"
      },
      "option": {
        "booleans": [
          "HTMLOptionElement.defaultSelected",
          "HTMLOptionElement.disabled",
          "HTMLOptionElement.selected",
          "HTMLOptionElement.selected"
        ],
        "events": [],
        "keys": {
          "defaultSelected": {
            "attr": false,
            "attrName": "selected",
            "keyInterfaceName": "HTMLOptionElement",
            "name": "defaultSelected",
            "prop": true,
            "propName": "defaultSelected",
            "readonly": false,
            "value": "boolean"
          },
          "disabled": {
            "attr": true,
            "attrName": "disabled",
            "keyInterfaceName": "HTMLOptionElement",
            "name": "disabled",
            "prop": true,
            "propName": "disabled",
            "readonly": false,
            "value": "boolean"
          },
          "label": {
            "attr": true,
            "attrName": "label",
            "keyInterfaceName": "HTMLOptionElement",
            "name": "label",
            "prop": true,
            "propName": "label",
            "readonly": false,
            "value": "string"
          },
          "selected": {
            "attr": true,
            "attrName": "selected",
            "keyInterfaceName": "HTMLOptionElement",
            "name": "selected",
            "prop": true,
            "propName": "defaultSelected",
            "readonly": false,
            "value": "boolean"
          },
          "text": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLOptionElement",
            "name": "text",
            "prop": true,
            "propName": "text",
            "readonly": false,
            "value": "string"
          },
          "value": {
            "attr": true,
            "attrName": "value",
            "keyInterfaceName": "HTMLOptionElement",
            "name": "value",
            "prop": true,
            "propName": "value",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [
          "HTMLOptionElement.form",
          "HTMLOptionElement.index"
        ],
        "tagInterfaceName": "HTMLOptionElement"
      },
      "output": {
        "booleans": [],
        "events": [],
        "keys": {
          "defaultValue": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLOutputElement",
            "name": "defaultValue",
            "prop": true,
            "propName": "defaultValue",
            "readonly": false,
            "value": "string"
          },
          "for": {
            "attr": true,
            "attrName": "for",
            "keyInterfaceName": "HTMLOutputElement",
            "name": "for",
            "prop": false,
            "propName": "htmlFor",
            "readonly": false,
            "value": "string"
          },
          "htmlFor": {
            "attr": false,
            "attrName": "for",
            "keyInterfaceName": "HTMLOutputElement",
            "name": "htmlFor",
            "prop": true,
            "propName": "htmlFor",
            "readonly": false,
            "value": "string"
          },
          "name": {
            "attr": true,
            "attrName": "name",
            "keyInterfaceName": "HTMLOutputElement",
            "name": "name",
            "prop": true,
            "propName": "name",
            "readonly": false,
            "value": "string"
          },
          "value": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLOutputElement",
            "name": "value",
            "prop": true,
            "propName": "value",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [
          "HTMLOutputElement.form",
          "HTMLOutputElement.labels",
          "HTMLOutputElement.type",
          "HTMLOutputElement.validationMessage",
          "HTMLOutputElement.validity",
          "HTMLOutputElement.willValidate"
        ],
        "tagInterfaceName": "HTMLOutputElement"
      },
      "p": {
        "booleans": [],
        "events": [],
        "keys": {
          "align": {
            "attr": true,
            "attrName": "align",
            "keyInterfaceName": "HTMLParagraphElement",
            "name": "align",
            "prop": true,
            "propName": "align",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLParagraphElement"
      },
      "param": {
        "booleans": [],
        "events": [],
        "keys": {
          "name": {
            "attr": true,
            "attrName": "name",
            "keyInterfaceName": "HTMLParamElement",
            "name": "name",
            "prop": true,
            "propName": "name",
            "readonly": false,
            "value": "string"
          },
          "type": {
            "attr": true,
            "attrName": "type",
            "keyInterfaceName": "HTMLParamElement",
            "name": "type",
            "prop": true,
            "propName": "type",
            "readonly": false,
            "value": "string"
          },
          "value": {
            "attr": true,
            "attrName": "value",
            "keyInterfaceName": "HTMLParamElement",
            "name": "value",
            "prop": true,
            "propName": "value",
            "readonly": false,
            "value": "string"
          },
          "valueType": {
            "attr": false,
            "attrName": "valuetype",
            "keyInterfaceName": "HTMLParamElement",
            "name": "valueType",
            "prop": true,
            "propName": "valueType",
            "readonly": false,
            "value": "string"
          },
          "valuetype": {
            "attr": true,
            "attrName": "valuetype",
            "keyInterfaceName": "HTMLParamElement",
            "name": "valuetype",
            "prop": false,
            "propName": "valueType",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLParamElement"
      },
      "picture": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLPictureElement"
      },
      "plaintext": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "portal": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLUnknownElement"
      },
      "pre": {
        "booleans": [],
        "events": [],
        "keys": {
          "width": {
            "attr": true,
            "attrName": "width",
            "keyInterfaceName": "HTMLPreElement",
            "name": "width",
            "prop": true,
            "propName": "width",
            "readonly": false,
            "value": "number"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLPreElement"
      },
      "progress": {
        "booleans": [],
        "events": [],
        "keys": {
          "max": {
            "attr": true,
            "attrName": "max",
            "keyInterfaceName": "HTMLProgressElement",
            "name": "max",
            "prop": true,
            "propName": "max",
            "readonly": false,
            "value": "number"
          },
          "value": {
            "attr": true,
            "attrName": "value",
            "keyInterfaceName": "HTMLProgressElement",
            "name": "value",
            "prop": true,
            "propName": "value",
            "readonly": false,
            "value": "number"
          }
        },
        "readonly": [
          "HTMLProgressElement.labels",
          "HTMLProgressElement.position"
        ],
        "tagInterfaceName": "HTMLProgressElement"
      },
      "q": {
        "booleans": [],
        "events": [],
        "keys": {
          "cite": {
            "attr": true,
            "attrName": "cite",
            "keyInterfaceName": "HTMLQuoteElement",
            "name": "cite",
            "prop": true,
            "propName": "cite",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLQuoteElement"
      },
      "rb": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "rp": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "rt": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "rtc": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "ruby": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "s": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "samp": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "script": {
        "booleans": [
          "HTMLScriptElement.async",
          "HTMLScriptElement.defer",
          "HTMLScriptElement.noModule",
          "HTMLScriptElement.nomodule"
        ],
        "events": [],
        "keys": {
          "async": {
            "attr": true,
            "attrName": "async",
            "keyInterfaceName": "HTMLScriptElement",
            "name": "async",
            "prop": true,
            "propName": "async",
            "readonly": false,
            "value": "boolean"
          },
          "attributionSrc": {
            "attr": false,
            "attrName": "attributionsrc",
            "keyInterfaceName": "HTMLScriptElement",
            "name": "attributionSrc",
            "prop": true,
            "propName": "attributionSrc",
            "readonly": false,
            "value": "string"
          },
          "attributionsrc": {
            "attr": true,
            "attrName": "attributionsrc",
            "keyInterfaceName": "HTMLScriptElement",
            "name": "attributionsrc",
            "prop": false,
            "propName": "attributionSrc",
            "readonly": false,
            "value": "string"
          },
          "blocking": {
            "attr": true,
            "attrName": "blocking",
            "keyInterfaceName": "HTMLScriptElement",
            "name": "blocking",
            "prop": true,
            "propName": "blocking",
            "readonly": false,
            "value": "string"
          },
          "charset": {
            "attr": true,
            "attrName": "charset",
            "keyInterfaceName": "HTMLScriptElement",
            "name": "charset",
            "prop": true,
            "propName": "charset",
            "readonly": false,
            "value": "string"
          },
          "crossOrigin": {
            "attr": false,
            "attrName": "crossorigin",
            "keyInterfaceName": "HTMLScriptElement",
            "name": "crossOrigin",
            "prop": true,
            "propName": "crossOrigin",
            "readonly": false,
            "value": "string"
          },
          "crossorigin": {
            "attr": true,
            "attrName": "crossorigin",
            "keyInterfaceName": "HTMLScriptElement",
            "name": "crossorigin",
            "prop": false,
            "propName": "crossOrigin",
            "readonly": false,
            "value": "string"
          },
          "defer": {
            "attr": true,
            "attrName": "defer",
            "keyInterfaceName": "HTMLScriptElement",
            "name": "defer",
            "prop": true,
            "propName": "defer",
            "readonly": false,
            "value": "boolean"
          },
          "event": {
            "attr": true,
            "attrName": "event",
            "keyInterfaceName": "HTMLScriptElement",
            "name": "event",
            "prop": true,
            "propName": "event",
            "readonly": false,
            "value": "string"
          },
          "fetchPriority": {
            "attr": false,
            "attrName": "fetchpriority",
            "keyInterfaceName": "HTMLScriptElement",
            "name": "fetchPriority",
            "prop": true,
            "propName": "fetchPriority",
            "readonly": false,
            "value": "string"
          },
          "fetchpriority": {
            "attr": true,
            "attrName": "fetchpriority",
            "keyInterfaceName": "HTMLScriptElement",
            "name": "fetchpriority",
            "prop": false,
            "propName": "fetchPriority",
            "readonly": false,
            "value": "string"
          },
          "for": {
            "attr": true,
            "attrName": "for",
            "keyInterfaceName": "HTMLScriptElement",
            "name": "for",
            "prop": false,
            "propName": "htmlFor",
            "readonly": false,
            "value": "string"
          },
          "htmlFor": {
            "attr": false,
            "attrName": "for",
            "keyInterfaceName": "HTMLScriptElement",
            "name": "htmlFor",
            "prop": true,
            "propName": "htmlFor",
            "readonly": false,
            "value": "string"
          },
          "integrity": {
            "attr": true,
            "attrName": "integrity",
            "keyInterfaceName": "HTMLScriptElement",
            "name": "integrity",
            "prop": true,
            "propName": "integrity",
            "readonly": false,
            "value": "string"
          },
          "noModule": {
            "attr": false,
            "attrName": "nomodule",
            "keyInterfaceName": "HTMLScriptElement",
            "name": "noModule",
            "prop": true,
            "propName": "noModule",
            "readonly": false,
            "value": "boolean"
          },
          "nomodule": {
            "attr": true,
            "attrName": "nomodule",
            "keyInterfaceName": "HTMLScriptElement",
            "name": "nomodule",
            "prop": false,
            "propName": "noModule",
            "readonly": false,
            "value": "boolean"
          },
          "referrerPolicy": {
            "attr": false,
            "attrName": "referrerpolicy",
            "keyInterfaceName": "HTMLScriptElement",
            "name": "referrerPolicy",
            "prop": true,
            "propName": "referrerPolicy",
            "readonly": false,
            "value": "string"
          },
          "referrerpolicy": {
            "attr": true,
            "attrName": "referrerpolicy",
            "keyInterfaceName": "HTMLScriptElement",
            "name": "referrerpolicy",
            "prop": false,
            "propName": "referrerPolicy",
            "readonly": false,
            "value": "string"
          },
          "src": {
            "attr": true,
            "attrName": "src",
            "keyInterfaceName": "HTMLScriptElement",
            "name": "src",
            "prop": true,
            "propName": "src",
            "readonly": false,
            "value": "string"
          },
          "text": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLScriptElement",
            "name": "text",
            "prop": true,
            "propName": "text",
            "readonly": false,
            "value": "string"
          },
          "type": {
            "attr": true,
            "attrName": "type",
            "keyInterfaceName": "HTMLScriptElement",
            "name": "type",
            "prop": true,
            "propName": "type",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLScriptElement"
      },
      "search": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "section": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "select": {
        "booleans": [
          "HTMLSelectElement.disabled",
          "HTMLSelectElement.multiple",
          "HTMLSelectElement.required"
        ],
        "events": [],
        "keys": {
          "autocomplete": {
            "attr": true,
            "attrName": "autocomplete",
            "keyInterfaceName": "HTMLSelectElement",
            "name": "autocomplete",
            "prop": true,
            "propName": "autocomplete",
            "readonly": false,
            "value": "string"
          },
          "disabled": {
            "attr": true,
            "attrName": "disabled",
            "keyInterfaceName": "HTMLSelectElement",
            "name": "disabled",
            "prop": true,
            "propName": "disabled",
            "readonly": false,
            "value": "boolean"
          },
          "length": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLSelectElement",
            "name": "length",
            "prop": true,
            "propName": "length",
            "readonly": false,
            "value": "number"
          },
          "multiple": {
            "attr": true,
            "attrName": "multiple",
            "keyInterfaceName": "HTMLSelectElement",
            "name": "multiple",
            "prop": true,
            "propName": "multiple",
            "readonly": false,
            "value": "boolean"
          },
          "name": {
            "attr": true,
            "attrName": "name",
            "keyInterfaceName": "HTMLSelectElement",
            "name": "name",
            "prop": true,
            "propName": "name",
            "readonly": false,
            "value": "string"
          },
          "required": {
            "attr": true,
            "attrName": "required",
            "keyInterfaceName": "HTMLSelectElement",
            "name": "required",
            "prop": true,
            "propName": "required",
            "readonly": false,
            "value": "boolean"
          },
          "selectedIndex": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLSelectElement",
            "name": "selectedIndex",
            "prop": true,
            "propName": "selectedIndex",
            "readonly": false,
            "value": "number"
          },
          "size": {
            "attr": true,
            "attrName": "size",
            "keyInterfaceName": "HTMLSelectElement",
            "name": "size",
            "prop": true,
            "propName": "size",
            "readonly": false,
            "value": "number"
          },
          "value": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLSelectElement",
            "name": "value",
            "prop": true,
            "propName": "value",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [
          "HTMLSelectElement.form",
          "HTMLSelectElement.labels",
          "HTMLSelectElement.options",
          "HTMLSelectElement.selectedOptions",
          "HTMLSelectElement.type",
          "HTMLSelectElement.validationMessage",
          "HTMLSelectElement.validity",
          "HTMLSelectElement.willValidate"
        ],
        "tagInterfaceName": "HTMLSelectElement"
      },
      "shadow": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLUnknownElement"
      },
      "slot": {
        "booleans": [],
        "events": [],
        "keys": {
          "name": {
            "attr": true,
            "attrName": "name",
            "keyInterfaceName": "HTMLSlotElement",
            "name": "name",
            "prop": true,
            "propName": "name",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLSlotElement"
      },
      "small": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "source": {
        "booleans": [],
        "events": [],
        "keys": {
          "height": {
            "attr": true,
            "attrName": "height",
            "keyInterfaceName": "HTMLSourceElement",
            "name": "height",
            "prop": true,
            "propName": "height",
            "readonly": false,
            "value": "number"
          },
          "media": {
            "attr": true,
            "attrName": "media",
            "keyInterfaceName": "HTMLSourceElement",
            "name": "media",
            "prop": true,
            "propName": "media",
            "readonly": false,
            "value": "string"
          },
          "sizes": {
            "attr": true,
            "attrName": "sizes",
            "keyInterfaceName": "HTMLSourceElement",
            "name": "sizes",
            "prop": true,
            "propName": "sizes",
            "readonly": false,
            "value": "string"
          },
          "src": {
            "attr": true,
            "attrName": "src",
            "keyInterfaceName": "HTMLSourceElement",
            "name": "src",
            "prop": true,
            "propName": "src",
            "readonly": false,
            "value": "string"
          },
          "srcset": {
            "attr": true,
            "attrName": "srcset",
            "keyInterfaceName": "HTMLSourceElement",
            "name": "srcset",
            "prop": true,
            "propName": "srcset",
            "readonly": false,
            "value": "string"
          },
          "type": {
            "attr": true,
            "attrName": "type",
            "keyInterfaceName": "HTMLSourceElement",
            "name": "type",
            "prop": true,
            "propName": "type",
            "readonly": false,
            "value": "string"
          },
          "width": {
            "attr": true,
            "attrName": "width",
            "keyInterfaceName": "HTMLSourceElement",
            "name": "width",
            "prop": true,
            "propName": "width",
            "readonly": false,
            "value": "number"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLSourceElement"
      },
      "spacer": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLUnknownElement"
      },
      "span": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLSpanElement"
      },
      "strike": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "strong": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "style": {
        "booleans": [
          "HTMLStyleElement.disabled"
        ],
        "events": [],
        "keys": {
          "blocking": {
            "attr": true,
            "attrName": "blocking",
            "keyInterfaceName": "HTMLStyleElement",
            "name": "blocking",
            "prop": true,
            "propName": "blocking",
            "readonly": false,
            "value": "string"
          },
          "disabled": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLStyleElement",
            "name": "disabled",
            "prop": true,
            "propName": "disabled",
            "readonly": false,
            "value": "boolean"
          },
          "media": {
            "attr": true,
            "attrName": "media",
            "keyInterfaceName": "HTMLStyleElement",
            "name": "media",
            "prop": true,
            "propName": "media",
            "readonly": false,
            "value": "string"
          },
          "type": {
            "attr": true,
            "attrName": "type",
            "keyInterfaceName": "HTMLStyleElement",
            "name": "type",
            "prop": true,
            "propName": "type",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [
          "HTMLStyleElement.sheet"
        ],
        "tagInterfaceName": "HTMLStyleElement"
      },
      "sub": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "summary": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "sup": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "table": {
        "booleans": [],
        "events": [],
        "keys": {
          "align": {
            "attr": true,
            "attrName": "align",
            "keyInterfaceName": "HTMLTableElement",
            "name": "align",
            "prop": true,
            "propName": "align",
            "readonly": false,
            "value": "string"
          },
          "bgColor": {
            "attr": false,
            "attrName": "bgcolor",
            "keyInterfaceName": "HTMLTableElement",
            "name": "bgColor",
            "prop": true,
            "propName": "bgColor",
            "readonly": false,
            "value": "string"
          },
          "bgcolor": {
            "attr": true,
            "attrName": "bgcolor",
            "keyInterfaceName": "HTMLTableElement",
            "name": "bgcolor",
            "prop": false,
            "propName": "bgColor",
            "readonly": false,
            "value": "string"
          },
          "border": {
            "attr": true,
            "attrName": "border",
            "keyInterfaceName": "HTMLTableElement",
            "name": "border",
            "prop": true,
            "propName": "border",
            "readonly": false,
            "value": "string"
          },
          "caption": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLTableElement",
            "name": "caption",
            "prop": true,
            "propName": "caption",
            "readonly": false,
            "value": "HTMLTableCaptionElement"
          },
          "cellPadding": {
            "attr": false,
            "attrName": "cellpadding",
            "keyInterfaceName": "HTMLTableElement",
            "name": "cellPadding",
            "prop": true,
            "propName": "cellPadding",
            "readonly": false,
            "value": "string"
          },
          "cellpadding": {
            "attr": true,
            "attrName": "cellpadding",
            "keyInterfaceName": "HTMLTableElement",
            "name": "cellpadding",
            "prop": false,
            "propName": "cellPadding",
            "readonly": false,
            "value": "string"
          },
          "cellSpacing": {
            "attr": false,
            "attrName": "cellspacing",
            "keyInterfaceName": "HTMLTableElement",
            "name": "cellSpacing",
            "prop": true,
            "propName": "cellSpacing",
            "readonly": false,
            "value": "string"
          },
          "cellspacing": {
            "attr": true,
            "attrName": "cellspacing",
            "keyInterfaceName": "HTMLTableElement",
            "name": "cellspacing",
            "prop": false,
            "propName": "cellSpacing",
            "readonly": false,
            "value": "string"
          },
          "frame": {
            "attr": true,
            "attrName": "frame",
            "keyInterfaceName": "HTMLTableElement",
            "name": "frame",
            "prop": true,
            "propName": "frame",
            "readonly": false,
            "value": "string"
          },
          "rules": {
            "attr": true,
            "attrName": "rules",
            "keyInterfaceName": "HTMLTableElement",
            "name": "rules",
            "prop": true,
            "propName": "rules",
            "readonly": false,
            "value": "string"
          },
          "summary": {
            "attr": true,
            "attrName": "summary",
            "keyInterfaceName": "HTMLTableElement",
            "name": "summary",
            "prop": true,
            "propName": "summary",
            "readonly": false,
            "value": "string"
          },
          "tFoot": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLTableElement",
            "name": "tFoot",
            "prop": true,
            "propName": "tFoot",
            "readonly": false,
            "value": "HTMLTableSectionElement"
          },
          "tHead": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLTableElement",
            "name": "tHead",
            "prop": true,
            "propName": "tHead",
            "readonly": false,
            "value": "HTMLTableSectionElement"
          },
          "width": {
            "attr": true,
            "attrName": "width",
            "keyInterfaceName": "HTMLTableElement",
            "name": "width",
            "prop": true,
            "propName": "width",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [
          "HTMLTableElement.rows",
          "HTMLTableElement.tBodies"
        ],
        "tagInterfaceName": "HTMLTableElement"
      },
      "tbody": {
        "booleans": [],
        "events": [],
        "keys": {
          "align": {
            "attr": true,
            "attrName": "align",
            "keyInterfaceName": "HTMLTableSectionElement",
            "name": "align",
            "prop": true,
            "propName": "align",
            "readonly": false,
            "value": "string"
          },
          "ch": {
            "attr": false,
            "attrName": "char",
            "keyInterfaceName": "HTMLTableSectionElement",
            "name": "ch",
            "prop": true,
            "propName": "ch",
            "readonly": false,
            "value": "string"
          },
          "char": {
            "attr": true,
            "attrName": "char",
            "keyInterfaceName": "HTMLTableSectionElement",
            "name": "char",
            "prop": false,
            "propName": "ch",
            "readonly": false,
            "value": "string"
          },
          "charoff": {
            "attr": true,
            "attrName": "charoff",
            "keyInterfaceName": "HTMLTableSectionElement",
            "name": "charoff",
            "prop": false,
            "propName": "chOff",
            "readonly": false,
            "value": "string"
          },
          "chOff": {
            "attr": false,
            "attrName": "charoff",
            "keyInterfaceName": "HTMLTableSectionElement",
            "name": "chOff",
            "prop": true,
            "propName": "chOff",
            "readonly": false,
            "value": "string"
          },
          "vAlign": {
            "attr": false,
            "attrName": "valign",
            "keyInterfaceName": "HTMLTableSectionElement",
            "name": "vAlign",
            "prop": true,
            "propName": "vAlign",
            "readonly": false,
            "value": "string"
          },
          "valign": {
            "attr": true,
            "attrName": "valign",
            "keyInterfaceName": "HTMLTableSectionElement",
            "name": "valign",
            "prop": false,
            "propName": "vAlign",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [
          "HTMLTableSectionElement.rows"
        ],
        "tagInterfaceName": "HTMLTableSectionElement"
      },
      "td": {
        "booleans": [
          "HTMLTableCellElement.noWrap",
          "HTMLTableCellElement.nowrap"
        ],
        "events": [],
        "keys": {
          "abbr": {
            "attr": true,
            "attrName": "abbr",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "abbr",
            "prop": true,
            "propName": "abbr",
            "readonly": false,
            "value": "string"
          },
          "align": {
            "attr": true,
            "attrName": "align",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "align",
            "prop": true,
            "propName": "align",
            "readonly": false,
            "value": "string"
          },
          "axis": {
            "attr": true,
            "attrName": "axis",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "axis",
            "prop": true,
            "propName": "axis",
            "readonly": false,
            "value": "string"
          },
          "bgColor": {
            "attr": false,
            "attrName": "bgcolor",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "bgColor",
            "prop": true,
            "propName": "bgColor",
            "readonly": false,
            "value": "string"
          },
          "bgcolor": {
            "attr": true,
            "attrName": "bgcolor",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "bgcolor",
            "prop": false,
            "propName": "bgColor",
            "readonly": false,
            "value": "string"
          },
          "ch": {
            "attr": false,
            "attrName": "char",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "ch",
            "prop": true,
            "propName": "ch",
            "readonly": false,
            "value": "string"
          },
          "char": {
            "attr": true,
            "attrName": "char",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "char",
            "prop": false,
            "propName": "ch",
            "readonly": false,
            "value": "string"
          },
          "charoff": {
            "attr": true,
            "attrName": "charoff",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "charoff",
            "prop": false,
            "propName": "chOff",
            "readonly": false,
            "value": "string"
          },
          "chOff": {
            "attr": false,
            "attrName": "charoff",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "chOff",
            "prop": true,
            "propName": "chOff",
            "readonly": false,
            "value": "string"
          },
          "colSpan": {
            "attr": false,
            "attrName": "colspan",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "colSpan",
            "prop": true,
            "propName": "colSpan",
            "readonly": false,
            "value": "number"
          },
          "colspan": {
            "attr": true,
            "attrName": "colspan",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "colspan",
            "prop": false,
            "propName": "colSpan",
            "readonly": false,
            "value": "number"
          },
          "headers": {
            "attr": true,
            "attrName": "headers",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "headers",
            "prop": true,
            "propName": "headers",
            "readonly": false,
            "value": "string"
          },
          "height": {
            "attr": true,
            "attrName": "height",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "height",
            "prop": true,
            "propName": "height",
            "readonly": false,
            "value": "string"
          },
          "noWrap": {
            "attr": false,
            "attrName": "nowrap",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "noWrap",
            "prop": true,
            "propName": "noWrap",
            "readonly": false,
            "value": "boolean"
          },
          "nowrap": {
            "attr": true,
            "attrName": "nowrap",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "nowrap",
            "prop": false,
            "propName": "noWrap",
            "readonly": false,
            "value": "boolean"
          },
          "rowSpan": {
            "attr": false,
            "attrName": "rowspan",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "rowSpan",
            "prop": true,
            "propName": "rowSpan",
            "readonly": false,
            "value": "number"
          },
          "rowspan": {
            "attr": true,
            "attrName": "rowspan",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "rowspan",
            "prop": false,
            "propName": "rowSpan",
            "readonly": false,
            "value": "number"
          },
          "scope": {
            "attr": true,
            "attrName": "scope",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "scope",
            "prop": true,
            "propName": "scope",
            "readonly": false,
            "value": "string"
          },
          "vAlign": {
            "attr": false,
            "attrName": "valign",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "vAlign",
            "prop": true,
            "propName": "vAlign",
            "readonly": false,
            "value": "string"
          },
          "valign": {
            "attr": true,
            "attrName": "valign",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "valign",
            "prop": false,
            "propName": "vAlign",
            "readonly": false,
            "value": "string"
          },
          "width": {
            "attr": true,
            "attrName": "width",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "width",
            "prop": true,
            "propName": "width",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [
          "HTMLTableCellElement.cellIndex"
        ],
        "tagInterfaceName": "HTMLTableCellElement"
      },
      "template": {
        "booleans": [
          "HTMLTemplateElement.shadowRootClonable",
          "HTMLTemplateElement.shadowrootclonable",
          "HTMLTemplateElement.shadowRootDelegatesFocus",
          "HTMLTemplateElement.shadowrootdelegatesfocus",
          "HTMLTemplateElement.shadowRootSerializable",
          "HTMLTemplateElement.shadowrootserializable"
        ],
        "events": [],
        "keys": {
          "shadowRootClonable": {
            "attr": false,
            "attrName": "shadowrootclonable",
            "keyInterfaceName": "HTMLTemplateElement",
            "name": "shadowRootClonable",
            "prop": true,
            "propName": "shadowRootClonable",
            "readonly": false,
            "value": "boolean"
          },
          "shadowrootclonable": {
            "attr": true,
            "attrName": "shadowrootclonable",
            "keyInterfaceName": "HTMLTemplateElement",
            "name": "shadowrootclonable",
            "prop": false,
            "propName": "shadowRootClonable",
            "readonly": false,
            "value": "boolean"
          },
          "shadowRootDelegatesFocus": {
            "attr": false,
            "attrName": "shadowrootdelegatesfocus",
            "keyInterfaceName": "HTMLTemplateElement",
            "name": "shadowRootDelegatesFocus",
            "prop": true,
            "propName": "shadowRootDelegatesFocus",
            "readonly": false,
            "value": "boolean"
          },
          "shadowrootdelegatesfocus": {
            "attr": true,
            "attrName": "shadowrootdelegatesfocus",
            "keyInterfaceName": "HTMLTemplateElement",
            "name": "shadowrootdelegatesfocus",
            "prop": false,
            "propName": "shadowRootDelegatesFocus",
            "readonly": false,
            "value": "boolean"
          },
          "shadowRootMode": {
            "attr": false,
            "attrName": "shadowrootmode",
            "keyInterfaceName": "HTMLTemplateElement",
            "name": "shadowRootMode",
            "prop": true,
            "propName": "shadowRootMode",
            "readonly": false,
            "value": "string"
          },
          "shadowrootmode": {
            "attr": true,
            "attrName": "shadowrootmode",
            "keyInterfaceName": "HTMLTemplateElement",
            "name": "shadowrootmode",
            "prop": false,
            "propName": "shadowRootMode",
            "readonly": false,
            "value": "string"
          },
          "shadowRootSerializable": {
            "attr": false,
            "attrName": "shadowrootserializable",
            "keyInterfaceName": "HTMLTemplateElement",
            "name": "shadowRootSerializable",
            "prop": true,
            "propName": "shadowRootSerializable",
            "readonly": false,
            "value": "boolean"
          },
          "shadowrootserializable": {
            "attr": true,
            "attrName": "shadowrootserializable",
            "keyInterfaceName": "HTMLTemplateElement",
            "name": "shadowrootserializable",
            "prop": false,
            "propName": "shadowRootSerializable",
            "readonly": false,
            "value": "boolean"
          }
        },
        "readonly": [
          "HTMLTemplateElement.content"
        ],
        "tagInterfaceName": "HTMLTemplateElement"
      },
      "textarea": {
        "booleans": [
          "HTMLTextAreaElement.disabled",
          "HTMLTextAreaElement.readOnly",
          "HTMLTextAreaElement.readonly",
          "HTMLTextAreaElement.required"
        ],
        "events": [],
        "keys": {
          "autocomplete": {
            "attr": true,
            "attrName": "autocomplete",
            "keyInterfaceName": "HTMLTextAreaElement",
            "name": "autocomplete",
            "prop": true,
            "propName": "autocomplete",
            "readonly": false,
            "value": "string"
          },
          "cols": {
            "attr": true,
            "attrName": "cols",
            "keyInterfaceName": "HTMLTextAreaElement",
            "name": "cols",
            "prop": true,
            "propName": "cols",
            "readonly": false,
            "value": "number"
          },
          "defaultValue": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLTextAreaElement",
            "name": "defaultValue",
            "prop": true,
            "propName": "defaultValue",
            "readonly": false,
            "value": "string"
          },
          "dirName": {
            "attr": false,
            "attrName": "dirname",
            "keyInterfaceName": "HTMLTextAreaElement",
            "name": "dirName",
            "prop": true,
            "propName": "dirName",
            "readonly": false,
            "value": "string"
          },
          "dirname": {
            "attr": true,
            "attrName": "dirname",
            "keyInterfaceName": "HTMLTextAreaElement",
            "name": "dirname",
            "prop": false,
            "propName": "dirName",
            "readonly": false,
            "value": "string"
          },
          "disabled": {
            "attr": true,
            "attrName": "disabled",
            "keyInterfaceName": "HTMLTextAreaElement",
            "name": "disabled",
            "prop": true,
            "propName": "disabled",
            "readonly": false,
            "value": "boolean"
          },
          "maxLength": {
            "attr": false,
            "attrName": "maxlength",
            "keyInterfaceName": "HTMLTextAreaElement",
            "name": "maxLength",
            "prop": true,
            "propName": "maxLength",
            "readonly": false,
            "value": "number"
          },
          "maxlength": {
            "attr": true,
            "attrName": "maxlength",
            "keyInterfaceName": "HTMLTextAreaElement",
            "name": "maxlength",
            "prop": false,
            "propName": "maxLength",
            "readonly": false,
            "value": "number"
          },
          "minLength": {
            "attr": false,
            "attrName": "minlength",
            "keyInterfaceName": "HTMLTextAreaElement",
            "name": "minLength",
            "prop": true,
            "propName": "minLength",
            "readonly": false,
            "value": "number"
          },
          "minlength": {
            "attr": true,
            "attrName": "minlength",
            "keyInterfaceName": "HTMLTextAreaElement",
            "name": "minlength",
            "prop": false,
            "propName": "minLength",
            "readonly": false,
            "value": "number"
          },
          "name": {
            "attr": true,
            "attrName": "name",
            "keyInterfaceName": "HTMLTextAreaElement",
            "name": "name",
            "prop": true,
            "propName": "name",
            "readonly": false,
            "value": "string"
          },
          "placeholder": {
            "attr": true,
            "attrName": "placeholder",
            "keyInterfaceName": "HTMLTextAreaElement",
            "name": "placeholder",
            "prop": true,
            "propName": "placeholder",
            "readonly": false,
            "value": "string"
          },
          "readOnly": {
            "attr": false,
            "attrName": "readonly",
            "keyInterfaceName": "HTMLTextAreaElement",
            "name": "readOnly",
            "prop": true,
            "propName": "readOnly",
            "readonly": false,
            "value": "boolean"
          },
          "readonly": {
            "attr": true,
            "attrName": "readonly",
            "keyInterfaceName": "HTMLTextAreaElement",
            "name": "readonly",
            "prop": false,
            "propName": "readOnly",
            "readonly": false,
            "value": "boolean"
          },
          "required": {
            "attr": true,
            "attrName": "required",
            "keyInterfaceName": "HTMLTextAreaElement",
            "name": "required",
            "prop": true,
            "propName": "required",
            "readonly": false,
            "value": "boolean"
          },
          "rows": {
            "attr": true,
            "attrName": "rows",
            "keyInterfaceName": "HTMLTextAreaElement",
            "name": "rows",
            "prop": true,
            "propName": "rows",
            "readonly": false,
            "value": "number"
          },
          "selectionDirection": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLTextAreaElement",
            "name": "selectionDirection",
            "prop": true,
            "propName": "selectionDirection",
            "readonly": false,
            "value": "string"
          },
          "selectionEnd": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLTextAreaElement",
            "name": "selectionEnd",
            "prop": true,
            "propName": "selectionEnd",
            "readonly": false,
            "value": "number"
          },
          "selectionStart": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLTextAreaElement",
            "name": "selectionStart",
            "prop": true,
            "propName": "selectionStart",
            "readonly": false,
            "value": "number"
          },
          "value": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLTextAreaElement",
            "name": "value",
            "prop": true,
            "propName": "value",
            "readonly": false,
            "value": "string"
          },
          "wrap": {
            "attr": true,
            "attrName": "wrap",
            "keyInterfaceName": "HTMLTextAreaElement",
            "name": "wrap",
            "prop": true,
            "propName": "wrap",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [
          "HTMLTextAreaElement.form",
          "HTMLTextAreaElement.labels",
          "HTMLTextAreaElement.textLength",
          "HTMLTextAreaElement.type",
          "HTMLTextAreaElement.validationMessage",
          "HTMLTextAreaElement.validity",
          "HTMLTextAreaElement.willValidate"
        ],
        "tagInterfaceName": "HTMLTextAreaElement"
      },
      "tfoot": {
        "booleans": [],
        "events": [],
        "keys": {
          "align": {
            "attr": true,
            "attrName": "align",
            "keyInterfaceName": "HTMLTableSectionElement",
            "name": "align",
            "prop": true,
            "propName": "align",
            "readonly": false,
            "value": "string"
          },
          "ch": {
            "attr": false,
            "attrName": "char",
            "keyInterfaceName": "HTMLTableSectionElement",
            "name": "ch",
            "prop": true,
            "propName": "ch",
            "readonly": false,
            "value": "string"
          },
          "char": {
            "attr": true,
            "attrName": "char",
            "keyInterfaceName": "HTMLTableSectionElement",
            "name": "char",
            "prop": false,
            "propName": "ch",
            "readonly": false,
            "value": "string"
          },
          "charoff": {
            "attr": true,
            "attrName": "charoff",
            "keyInterfaceName": "HTMLTableSectionElement",
            "name": "charoff",
            "prop": false,
            "propName": "chOff",
            "readonly": false,
            "value": "string"
          },
          "chOff": {
            "attr": false,
            "attrName": "charoff",
            "keyInterfaceName": "HTMLTableSectionElement",
            "name": "chOff",
            "prop": true,
            "propName": "chOff",
            "readonly": false,
            "value": "string"
          },
          "vAlign": {
            "attr": false,
            "attrName": "valign",
            "keyInterfaceName": "HTMLTableSectionElement",
            "name": "vAlign",
            "prop": true,
            "propName": "vAlign",
            "readonly": false,
            "value": "string"
          },
          "valign": {
            "attr": true,
            "attrName": "valign",
            "keyInterfaceName": "HTMLTableSectionElement",
            "name": "valign",
            "prop": false,
            "propName": "vAlign",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [
          "HTMLTableSectionElement.rows"
        ],
        "tagInterfaceName": "HTMLTableSectionElement"
      },
      "th": {
        "booleans": [
          "HTMLTableCellElement.noWrap",
          "HTMLTableCellElement.nowrap"
        ],
        "events": [],
        "keys": {
          "abbr": {
            "attr": true,
            "attrName": "abbr",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "abbr",
            "prop": true,
            "propName": "abbr",
            "readonly": false,
            "value": "string"
          },
          "align": {
            "attr": true,
            "attrName": "align",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "align",
            "prop": true,
            "propName": "align",
            "readonly": false,
            "value": "string"
          },
          "axis": {
            "attr": true,
            "attrName": "axis",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "axis",
            "prop": true,
            "propName": "axis",
            "readonly": false,
            "value": "string"
          },
          "bgColor": {
            "attr": false,
            "attrName": "bgcolor",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "bgColor",
            "prop": true,
            "propName": "bgColor",
            "readonly": false,
            "value": "string"
          },
          "bgcolor": {
            "attr": true,
            "attrName": "bgcolor",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "bgcolor",
            "prop": false,
            "propName": "bgColor",
            "readonly": false,
            "value": "string"
          },
          "ch": {
            "attr": false,
            "attrName": "char",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "ch",
            "prop": true,
            "propName": "ch",
            "readonly": false,
            "value": "string"
          },
          "char": {
            "attr": true,
            "attrName": "char",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "char",
            "prop": false,
            "propName": "ch",
            "readonly": false,
            "value": "string"
          },
          "charoff": {
            "attr": true,
            "attrName": "charoff",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "charoff",
            "prop": false,
            "propName": "chOff",
            "readonly": false,
            "value": "string"
          },
          "chOff": {
            "attr": false,
            "attrName": "charoff",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "chOff",
            "prop": true,
            "propName": "chOff",
            "readonly": false,
            "value": "string"
          },
          "colSpan": {
            "attr": false,
            "attrName": "colspan",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "colSpan",
            "prop": true,
            "propName": "colSpan",
            "readonly": false,
            "value": "number"
          },
          "colspan": {
            "attr": true,
            "attrName": "colspan",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "colspan",
            "prop": false,
            "propName": "colSpan",
            "readonly": false,
            "value": "number"
          },
          "headers": {
            "attr": true,
            "attrName": "headers",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "headers",
            "prop": true,
            "propName": "headers",
            "readonly": false,
            "value": "string"
          },
          "height": {
            "attr": true,
            "attrName": "height",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "height",
            "prop": true,
            "propName": "height",
            "readonly": false,
            "value": "string"
          },
          "noWrap": {
            "attr": false,
            "attrName": "nowrap",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "noWrap",
            "prop": true,
            "propName": "noWrap",
            "readonly": false,
            "value": "boolean"
          },
          "nowrap": {
            "attr": true,
            "attrName": "nowrap",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "nowrap",
            "prop": false,
            "propName": "noWrap",
            "readonly": false,
            "value": "boolean"
          },
          "rowSpan": {
            "attr": false,
            "attrName": "rowspan",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "rowSpan",
            "prop": true,
            "propName": "rowSpan",
            "readonly": false,
            "value": "number"
          },
          "rowspan": {
            "attr": true,
            "attrName": "rowspan",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "rowspan",
            "prop": false,
            "propName": "rowSpan",
            "readonly": false,
            "value": "number"
          },
          "scope": {
            "attr": true,
            "attrName": "scope",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "scope",
            "prop": true,
            "propName": "scope",
            "readonly": false,
            "value": "string"
          },
          "vAlign": {
            "attr": false,
            "attrName": "valign",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "vAlign",
            "prop": true,
            "propName": "vAlign",
            "readonly": false,
            "value": "string"
          },
          "valign": {
            "attr": true,
            "attrName": "valign",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "valign",
            "prop": false,
            "propName": "vAlign",
            "readonly": false,
            "value": "string"
          },
          "width": {
            "attr": true,
            "attrName": "width",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "width",
            "prop": true,
            "propName": "width",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [
          "HTMLTableCellElement.cellIndex"
        ],
        "tagInterfaceName": "HTMLTableCellElement"
      },
      "thead": {
        "booleans": [],
        "events": [],
        "keys": {
          "align": {
            "attr": true,
            "attrName": "align",
            "keyInterfaceName": "HTMLTableSectionElement",
            "name": "align",
            "prop": true,
            "propName": "align",
            "readonly": false,
            "value": "string"
          },
          "ch": {
            "attr": false,
            "attrName": "char",
            "keyInterfaceName": "HTMLTableSectionElement",
            "name": "ch",
            "prop": true,
            "propName": "ch",
            "readonly": false,
            "value": "string"
          },
          "char": {
            "attr": true,
            "attrName": "char",
            "keyInterfaceName": "HTMLTableSectionElement",
            "name": "char",
            "prop": false,
            "propName": "ch",
            "readonly": false,
            "value": "string"
          },
          "charoff": {
            "attr": true,
            "attrName": "charoff",
            "keyInterfaceName": "HTMLTableSectionElement",
            "name": "charoff",
            "prop": false,
            "propName": "chOff",
            "readonly": false,
            "value": "string"
          },
          "chOff": {
            "attr": false,
            "attrName": "charoff",
            "keyInterfaceName": "HTMLTableSectionElement",
            "name": "chOff",
            "prop": true,
            "propName": "chOff",
            "readonly": false,
            "value": "string"
          },
          "vAlign": {
            "attr": false,
            "attrName": "valign",
            "keyInterfaceName": "HTMLTableSectionElement",
            "name": "vAlign",
            "prop": true,
            "propName": "vAlign",
            "readonly": false,
            "value": "string"
          },
          "valign": {
            "attr": true,
            "attrName": "valign",
            "keyInterfaceName": "HTMLTableSectionElement",
            "name": "valign",
            "prop": false,
            "propName": "vAlign",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [
          "HTMLTableSectionElement.rows"
        ],
        "tagInterfaceName": "HTMLTableSectionElement"
      },
      "time": {
        "booleans": [],
        "events": [],
        "keys": {
          "dateTime": {
            "attr": false,
            "attrName": "datetime",
            "keyInterfaceName": "HTMLTimeElement",
            "name": "dateTime",
            "prop": true,
            "propName": "dateTime",
            "readonly": false,
            "value": "string"
          },
          "datetime": {
            "attr": true,
            "attrName": "datetime",
            "keyInterfaceName": "HTMLTimeElement",
            "name": "datetime",
            "prop": false,
            "propName": "dateTime",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLTimeElement"
      },
      "title": {
        "booleans": [],
        "events": [],
        "keys": {
          "text": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLTitleElement",
            "name": "text",
            "prop": true,
            "propName": "text",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLTitleElement"
      },
      "tr": {
        "booleans": [],
        "events": [],
        "keys": {
          "align": {
            "attr": true,
            "attrName": "align",
            "keyInterfaceName": "HTMLTableRowElement",
            "name": "align",
            "prop": true,
            "propName": "align",
            "readonly": false,
            "value": "string"
          },
          "bgColor": {
            "attr": false,
            "attrName": "bgcolor",
            "keyInterfaceName": "HTMLTableRowElement",
            "name": "bgColor",
            "prop": true,
            "propName": "bgColor",
            "readonly": false,
            "value": "string"
          },
          "bgcolor": {
            "attr": true,
            "attrName": "bgcolor",
            "keyInterfaceName": "HTMLTableRowElement",
            "name": "bgcolor",
            "prop": false,
            "propName": "bgColor",
            "readonly": false,
            "value": "string"
          },
          "ch": {
            "attr": false,
            "attrName": "char",
            "keyInterfaceName": "HTMLTableRowElement",
            "name": "ch",
            "prop": true,
            "propName": "ch",
            "readonly": false,
            "value": "string"
          },
          "char": {
            "attr": true,
            "attrName": "char",
            "keyInterfaceName": "HTMLTableRowElement",
            "name": "char",
            "prop": false,
            "propName": "ch",
            "readonly": false,
            "value": "string"
          },
          "charoff": {
            "attr": true,
            "attrName": "charoff",
            "keyInterfaceName": "HTMLTableRowElement",
            "name": "charoff",
            "prop": false,
            "propName": "chOff",
            "readonly": false,
            "value": "string"
          },
          "chOff": {
            "attr": false,
            "attrName": "charoff",
            "keyInterfaceName": "HTMLTableRowElement",
            "name": "chOff",
            "prop": true,
            "propName": "chOff",
            "readonly": false,
            "value": "string"
          },
          "vAlign": {
            "attr": false,
            "attrName": "valign",
            "keyInterfaceName": "HTMLTableRowElement",
            "name": "vAlign",
            "prop": true,
            "propName": "vAlign",
            "readonly": false,
            "value": "string"
          },
          "valign": {
            "attr": true,
            "attrName": "valign",
            "keyInterfaceName": "HTMLTableRowElement",
            "name": "valign",
            "prop": false,
            "propName": "vAlign",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [
          "HTMLTableRowElement.cells",
          "HTMLTableRowElement.rowIndex",
          "HTMLTableRowElement.sectionRowIndex"
        ],
        "tagInterfaceName": "HTMLTableRowElement"
      },
      "track": {
        "booleans": [
          "HTMLTrackElement.default"
        ],
        "events": [],
        "keys": {
          "default": {
            "attr": true,
            "attrName": "default",
            "keyInterfaceName": "HTMLTrackElement",
            "name": "default",
            "prop": true,
            "propName": "default",
            "readonly": false,
            "value": "boolean"
          },
          "kind": {
            "attr": true,
            "attrName": "kind",
            "keyInterfaceName": "HTMLTrackElement",
            "name": "kind",
            "prop": true,
            "propName": "kind",
            "readonly": false,
            "value": "string"
          },
          "label": {
            "attr": true,
            "attrName": "label",
            "keyInterfaceName": "HTMLTrackElement",
            "name": "label",
            "prop": true,
            "propName": "label",
            "readonly": false,
            "value": "string"
          },
          "src": {
            "attr": true,
            "attrName": "src",
            "keyInterfaceName": "HTMLTrackElement",
            "name": "src",
            "prop": true,
            "propName": "src",
            "readonly": false,
            "value": "string"
          },
          "srclang": {
            "attr": true,
            "attrName": "srclang",
            "keyInterfaceName": "HTMLTrackElement",
            "name": "srclang",
            "prop": true,
            "propName": "srclang",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [
          "HTMLTrackElement.readyState",
          "HTMLTrackElement.track"
        ],
        "tagInterfaceName": "HTMLTrackElement"
      },
      "tt": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "u": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "ul": {
        "booleans": [
          "HTMLUListElement.compact"
        ],
        "events": [],
        "keys": {
          "compact": {
            "attr": true,
            "attrName": "compact",
            "keyInterfaceName": "HTMLUListElement",
            "name": "compact",
            "prop": true,
            "propName": "compact",
            "readonly": false,
            "value": "boolean"
          },
          "type": {
            "attr": true,
            "attrName": "type",
            "keyInterfaceName": "HTMLUListElement",
            "name": "type",
            "prop": true,
            "propName": "type",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLUListElement"
      },
      "var": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "video": {
        "booleans": [
          "HTMLMediaElement.autoplay",
          "HTMLMediaElement.controls",
          "HTMLMediaElement.defaultMuted",
          "HTMLMediaElement.disableRemotePlayback",
          "HTMLMediaElement.disableremoteplayback",
          "HTMLMediaElement.loop",
          "HTMLMediaElement.muted",
          "HTMLMediaElement.muted",
          "HTMLMediaElement.preservesPitch",
          "HTMLVideoElement.disablePictureInPicture",
          "HTMLVideoElement.disablepictureinpicture",
          "HTMLVideoElement.playsInline",
          "HTMLVideoElement.playsinline"
        ],
        "events": [
          "HTMLMediaElement.onencrypted",
          "HTMLMediaElement.onwaitingforkey",
          "HTMLVideoElement.onenterpictureinpicture",
          "HTMLVideoElement.onleavepictureinpicture"
        ],
        "keys": {
          "autoplay": {
            "attr": true,
            "attrName": "autoplay",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "autoplay",
            "prop": true,
            "propName": "autoplay",
            "readonly": false,
            "value": "boolean"
          },
          "controls": {
            "attr": true,
            "attrName": "controls",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "controls",
            "prop": true,
            "propName": "controls",
            "readonly": false,
            "value": "boolean"
          },
          "controlsList": {
            "attr": false,
            "attrName": "controlslist",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "controlsList",
            "prop": true,
            "propName": "controlsList",
            "readonly": false,
            "value": "string"
          },
          "controlslist": {
            "attr": true,
            "attrName": "controlslist",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "controlslist",
            "prop": false,
            "propName": "controlsList",
            "readonly": false,
            "value": "string"
          },
          "crossOrigin": {
            "attr": false,
            "attrName": "crossorigin",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "crossOrigin",
            "prop": true,
            "propName": "crossOrigin",
            "readonly": false,
            "value": "string"
          },
          "crossorigin": {
            "attr": true,
            "attrName": "crossorigin",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "crossorigin",
            "prop": false,
            "propName": "crossOrigin",
            "readonly": false,
            "value": "string"
          },
          "currentTime": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "currentTime",
            "prop": true,
            "propName": "currentTime",
            "readonly": false,
            "value": "number"
          },
          "defaultMuted": {
            "attr": false,
            "attrName": "muted",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "defaultMuted",
            "prop": true,
            "propName": "defaultMuted",
            "readonly": false,
            "value": "boolean"
          },
          "defaultPlaybackRate": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "defaultPlaybackRate",
            "prop": true,
            "propName": "defaultPlaybackRate",
            "readonly": false,
            "value": "number"
          },
          "disablePictureInPicture": {
            "attr": false,
            "attrName": "disablepictureinpicture",
            "keyInterfaceName": "HTMLVideoElement",
            "name": "disablePictureInPicture",
            "prop": true,
            "propName": "disablePictureInPicture",
            "readonly": false,
            "value": "boolean"
          },
          "disablepictureinpicture": {
            "attr": true,
            "attrName": "disablepictureinpicture",
            "keyInterfaceName": "HTMLVideoElement",
            "name": "disablepictureinpicture",
            "prop": false,
            "propName": "disablePictureInPicture",
            "readonly": false,
            "value": "boolean"
          },
          "disableRemotePlayback": {
            "attr": false,
            "attrName": "disableremoteplayback",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "disableRemotePlayback",
            "prop": true,
            "propName": "disableRemotePlayback",
            "readonly": false,
            "value": "boolean"
          },
          "disableremoteplayback": {
            "attr": true,
            "attrName": "disableremoteplayback",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "disableremoteplayback",
            "prop": false,
            "propName": "disableRemotePlayback",
            "readonly": false,
            "value": "boolean"
          },
          "height": {
            "attr": true,
            "attrName": "height",
            "keyInterfaceName": "HTMLVideoElement",
            "name": "height",
            "prop": true,
            "propName": "height",
            "readonly": false,
            "value": "number"
          },
          "loop": {
            "attr": true,
            "attrName": "loop",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "loop",
            "prop": true,
            "propName": "loop",
            "readonly": false,
            "value": "boolean"
          },
          "muted": {
            "attr": true,
            "attrName": "muted",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "muted",
            "prop": true,
            "propName": "defaultMuted",
            "readonly": false,
            "value": "boolean"
          },
          "onencrypted": {
            "attr": true,
            "attrName": "onencrypted",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "onencrypted",
            "prop": true,
            "propName": "onencrypted",
            "readonly": false,
            "value": "event"
          },
          "onenterpictureinpicture": {
            "attr": true,
            "attrName": "onenterpictureinpicture",
            "keyInterfaceName": "HTMLVideoElement",
            "name": "onenterpictureinpicture",
            "prop": true,
            "propName": "onenterpictureinpicture",
            "readonly": false,
            "value": "event"
          },
          "onleavepictureinpicture": {
            "attr": true,
            "attrName": "onleavepictureinpicture",
            "keyInterfaceName": "HTMLVideoElement",
            "name": "onleavepictureinpicture",
            "prop": true,
            "propName": "onleavepictureinpicture",
            "readonly": false,
            "value": "event"
          },
          "onwaitingforkey": {
            "attr": true,
            "attrName": "onwaitingforkey",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "onwaitingforkey",
            "prop": true,
            "propName": "onwaitingforkey",
            "readonly": false,
            "value": "event"
          },
          "playbackRate": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "playbackRate",
            "prop": true,
            "propName": "playbackRate",
            "readonly": false,
            "value": "number"
          },
          "playsInline": {
            "attr": false,
            "attrName": "playsinline",
            "keyInterfaceName": "HTMLVideoElement",
            "name": "playsInline",
            "prop": true,
            "propName": "playsInline",
            "readonly": false,
            "value": "boolean"
          },
          "playsinline": {
            "attr": true,
            "attrName": "playsinline",
            "keyInterfaceName": "HTMLVideoElement",
            "name": "playsinline",
            "prop": false,
            "propName": "playsInline",
            "readonly": false,
            "value": "boolean"
          },
          "poster": {
            "attr": true,
            "attrName": "poster",
            "keyInterfaceName": "HTMLVideoElement",
            "name": "poster",
            "prop": true,
            "propName": "poster",
            "readonly": false,
            "value": "string"
          },
          "preload": {
            "attr": true,
            "attrName": "preload",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "preload",
            "prop": true,
            "propName": "preload",
            "readonly": false,
            "value": "string"
          },
          "preservesPitch": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "preservesPitch",
            "prop": true,
            "propName": "preservesPitch",
            "readonly": false,
            "value": "boolean"
          },
          "src": {
            "attr": true,
            "attrName": "src",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "src",
            "prop": true,
            "propName": "src",
            "readonly": false,
            "value": "string"
          },
          "srcObject": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "srcObject",
            "prop": true,
            "propName": "srcObject",
            "readonly": false,
            "value": "MediaStream | MediaSource | Blob | File"
          },
          "volume": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "volume",
            "prop": true,
            "propName": "volume",
            "readonly": false,
            "value": "number"
          },
          "width": {
            "attr": true,
            "attrName": "width",
            "keyInterfaceName": "HTMLVideoElement",
            "name": "width",
            "prop": true,
            "propName": "width",
            "readonly": false,
            "value": "number"
          }
        },
        "readonly": [
          "HTMLMediaElement.buffered",
          "HTMLMediaElement.currentSrc",
          "HTMLMediaElement.duration",
          "HTMLMediaElement.ended",
          "HTMLMediaElement.error",
          "HTMLMediaElement.mediaKeys",
          "HTMLMediaElement.networkState",
          "HTMLMediaElement.paused",
          "HTMLMediaElement.played",
          "HTMLMediaElement.readyState",
          "HTMLMediaElement.remote",
          "HTMLMediaElement.seekable",
          "HTMLMediaElement.seeking",
          "HTMLMediaElement.sinkId",
          "HTMLMediaElement.textTracks",
          "HTMLMediaElement.webkitAudioDecodedByteCount",
          "HTMLMediaElement.webkitVideoDecodedByteCount",
          "HTMLVideoElement.videoHeight",
          "HTMLVideoElement.videoWidth",
          "HTMLVideoElement.webkitDecodedFrameCount",
          "HTMLVideoElement.webkitDroppedFrameCount"
        ],
        "tagInterfaceName": "HTMLVideoElement"
      },
      "wbr": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "webview": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "xmp": {
        "booleans": [],
        "events": [],
        "keys": {
          "width": {
            "attr": true,
            "attrName": "width",
            "keyInterfaceName": "HTMLPreElement",
            "name": "width",
            "prop": true,
            "propName": "width",
            "readonly": false,
            "value": "number"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLPreElement"
      }
    },
    "keys": {
      "element": {
        "booleans": [],
        "events": [
          "Element.onbeforecopy",
          "Element.onbeforecut",
          "Element.onbeforepaste",
          "Element.onfullscreenchange",
          "Element.onfullscreenerror",
          "Element.onsearch",
          "Element.onwebkitfullscreenchange",
          "Element.onwebkitfullscreenerror"
        ],
        "keys": {
          "ariaActiveDescendantElement": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "Element",
            "name": "ariaActiveDescendantElement",
            "prop": true,
            "propName": "ariaActiveDescendantElement",
            "readonly": false,
            "value": "Element"
          },
          "ariaAtomic": {
            "attr": false,
            "attrName": "aria-atomic",
            "keyInterfaceName": "Element",
            "name": "ariaAtomic",
            "prop": true,
            "propName": "ariaAtomic",
            "readonly": false,
            "value": "unknown"
          },
          "aria-atomic": {
            "attr": true,
            "attrName": "aria-atomic",
            "keyInterfaceName": "Element",
            "name": "aria-atomic",
            "prop": false,
            "propName": "ariaAtomic",
            "readonly": false,
            "value": "unknown"
          },
          "ariaAutoComplete": {
            "attr": false,
            "attrName": "aria-autocomplete",
            "keyInterfaceName": "Element",
            "name": "ariaAutoComplete",
            "prop": true,
            "propName": "ariaAutoComplete",
            "readonly": false,
            "value": "unknown"
          },
          "aria-autocomplete": {
            "attr": true,
            "attrName": "aria-autocomplete",
            "keyInterfaceName": "Element",
            "name": "aria-autocomplete",
            "prop": false,
            "propName": "ariaAutoComplete",
            "readonly": false,
            "value": "unknown"
          },
          "ariaBrailleLabel": {
            "attr": false,
            "attrName": "aria-braillelabel",
            "keyInterfaceName": "Element",
            "name": "ariaBrailleLabel",
            "prop": true,
            "propName": "ariaBrailleLabel",
            "readonly": false,
            "value": "unknown"
          },
          "aria-braillelabel": {
            "attr": true,
            "attrName": "aria-braillelabel",
            "keyInterfaceName": "Element",
            "name": "aria-braillelabel",
            "prop": false,
            "propName": "ariaBrailleLabel",
            "readonly": false,
            "value": "unknown"
          },
          "ariaBrailleRoleDescription": {
            "attr": false,
            "attrName": "aria-brailleroledescription",
            "keyInterfaceName": "Element",
            "name": "ariaBrailleRoleDescription",
            "prop": true,
            "propName": "ariaBrailleRoleDescription",
            "readonly": false,
            "value": "unknown"
          },
          "aria-brailleroledescription": {
            "attr": true,
            "attrName": "aria-brailleroledescription",
            "keyInterfaceName": "Element",
            "name": "aria-brailleroledescription",
            "prop": false,
            "propName": "ariaBrailleRoleDescription",
            "readonly": false,
            "value": "unknown"
          },
          "ariaBusy": {
            "attr": false,
            "attrName": "aria-busy",
            "keyInterfaceName": "Element",
            "name": "ariaBusy",
            "prop": true,
            "propName": "ariaBusy",
            "readonly": false,
            "value": "unknown"
          },
          "aria-busy": {
            "attr": true,
            "attrName": "aria-busy",
            "keyInterfaceName": "Element",
            "name": "aria-busy",
            "prop": false,
            "propName": "ariaBusy",
            "readonly": false,
            "value": "unknown"
          },
          "ariaChecked": {
            "attr": false,
            "attrName": "aria-checked",
            "keyInterfaceName": "Element",
            "name": "ariaChecked",
            "prop": true,
            "propName": "ariaChecked",
            "readonly": false,
            "value": "unknown"
          },
          "aria-checked": {
            "attr": true,
            "attrName": "aria-checked",
            "keyInterfaceName": "Element",
            "name": "aria-checked",
            "prop": false,
            "propName": "ariaChecked",
            "readonly": false,
            "value": "unknown"
          },
          "ariaColCount": {
            "attr": false,
            "attrName": "aria-colcount",
            "keyInterfaceName": "Element",
            "name": "ariaColCount",
            "prop": true,
            "propName": "ariaColCount",
            "readonly": false,
            "value": "unknown"
          },
          "aria-colcount": {
            "attr": true,
            "attrName": "aria-colcount",
            "keyInterfaceName": "Element",
            "name": "aria-colcount",
            "prop": false,
            "propName": "ariaColCount",
            "readonly": false,
            "value": "unknown"
          },
          "ariaColIndex": {
            "attr": false,
            "attrName": "aria-colindex",
            "keyInterfaceName": "Element",
            "name": "ariaColIndex",
            "prop": true,
            "propName": "ariaColIndex",
            "readonly": false,
            "value": "unknown"
          },
          "aria-colindex": {
            "attr": true,
            "attrName": "aria-colindex",
            "keyInterfaceName": "Element",
            "name": "aria-colindex",
            "prop": false,
            "propName": "ariaColIndex",
            "readonly": false,
            "value": "unknown"
          },
          "ariaColIndexText": {
            "attr": false,
            "attrName": "aria-colindextext",
            "keyInterfaceName": "Element",
            "name": "ariaColIndexText",
            "prop": true,
            "propName": "ariaColIndexText",
            "readonly": false,
            "value": "unknown"
          },
          "aria-colindextext": {
            "attr": true,
            "attrName": "aria-colindextext",
            "keyInterfaceName": "Element",
            "name": "aria-colindextext",
            "prop": false,
            "propName": "ariaColIndexText",
            "readonly": false,
            "value": "unknown"
          },
          "ariaColSpan": {
            "attr": false,
            "attrName": "aria-colspan",
            "keyInterfaceName": "Element",
            "name": "ariaColSpan",
            "prop": true,
            "propName": "ariaColSpan",
            "readonly": false,
            "value": "unknown"
          },
          "aria-colspan": {
            "attr": true,
            "attrName": "aria-colspan",
            "keyInterfaceName": "Element",
            "name": "aria-colspan",
            "prop": false,
            "propName": "ariaColSpan",
            "readonly": false,
            "value": "unknown"
          },
          "ariaCurrent": {
            "attr": false,
            "attrName": "aria-current",
            "keyInterfaceName": "Element",
            "name": "ariaCurrent",
            "prop": true,
            "propName": "ariaCurrent",
            "readonly": false,
            "value": "unknown"
          },
          "aria-current": {
            "attr": true,
            "attrName": "aria-current",
            "keyInterfaceName": "Element",
            "name": "aria-current",
            "prop": false,
            "propName": "ariaCurrent",
            "readonly": false,
            "value": "unknown"
          },
          "ariaDescription": {
            "attr": false,
            "attrName": "aria-description",
            "keyInterfaceName": "Element",
            "name": "ariaDescription",
            "prop": true,
            "propName": "ariaDescription",
            "readonly": false,
            "value": "unknown"
          },
          "aria-description": {
            "attr": true,
            "attrName": "aria-description",
            "keyInterfaceName": "Element",
            "name": "aria-description",
            "prop": false,
            "propName": "ariaDescription",
            "readonly": false,
            "value": "unknown"
          },
          "ariaDisabled": {
            "attr": false,
            "attrName": "aria-disabled",
            "keyInterfaceName": "Element",
            "name": "ariaDisabled",
            "prop": true,
            "propName": "ariaDisabled",
            "readonly": false,
            "value": "unknown"
          },
          "aria-disabled": {
            "attr": true,
            "attrName": "aria-disabled",
            "keyInterfaceName": "Element",
            "name": "aria-disabled",
            "prop": false,
            "propName": "ariaDisabled",
            "readonly": false,
            "value": "unknown"
          },
          "ariaExpanded": {
            "attr": false,
            "attrName": "aria-expanded",
            "keyInterfaceName": "Element",
            "name": "ariaExpanded",
            "prop": true,
            "propName": "ariaExpanded",
            "readonly": false,
            "value": "unknown"
          },
          "aria-expanded": {
            "attr": true,
            "attrName": "aria-expanded",
            "keyInterfaceName": "Element",
            "name": "aria-expanded",
            "prop": false,
            "propName": "ariaExpanded",
            "readonly": false,
            "value": "unknown"
          },
          "ariaHasPopup": {
            "attr": false,
            "attrName": "aria-haspopup",
            "keyInterfaceName": "Element",
            "name": "ariaHasPopup",
            "prop": true,
            "propName": "ariaHasPopup",
            "readonly": false,
            "value": "unknown"
          },
          "aria-haspopup": {
            "attr": true,
            "attrName": "aria-haspopup",
            "keyInterfaceName": "Element",
            "name": "aria-haspopup",
            "prop": false,
            "propName": "ariaHasPopup",
            "readonly": false,
            "value": "unknown"
          },
          "ariaHidden": {
            "attr": false,
            "attrName": "aria-hidden",
            "keyInterfaceName": "Element",
            "name": "ariaHidden",
            "prop": true,
            "propName": "ariaHidden",
            "readonly": false,
            "value": "unknown"
          },
          "aria-hidden": {
            "attr": true,
            "attrName": "aria-hidden",
            "keyInterfaceName": "Element",
            "name": "aria-hidden",
            "prop": false,
            "propName": "ariaHidden",
            "readonly": false,
            "value": "unknown"
          },
          "ariaInvalid": {
            "attr": false,
            "attrName": "aria-invalid",
            "keyInterfaceName": "Element",
            "name": "ariaInvalid",
            "prop": true,
            "propName": "ariaInvalid",
            "readonly": false,
            "value": "unknown"
          },
          "aria-invalid": {
            "attr": true,
            "attrName": "aria-invalid",
            "keyInterfaceName": "Element",
            "name": "aria-invalid",
            "prop": false,
            "propName": "ariaInvalid",
            "readonly": false,
            "value": "unknown"
          },
          "ariaKeyShortcuts": {
            "attr": false,
            "attrName": "aria-keyshortcuts",
            "keyInterfaceName": "Element",
            "name": "ariaKeyShortcuts",
            "prop": true,
            "propName": "ariaKeyShortcuts",
            "readonly": false,
            "value": "unknown"
          },
          "aria-keyshortcuts": {
            "attr": true,
            "attrName": "aria-keyshortcuts",
            "keyInterfaceName": "Element",
            "name": "aria-keyshortcuts",
            "prop": false,
            "propName": "ariaKeyShortcuts",
            "readonly": false,
            "value": "unknown"
          },
          "ariaLabel": {
            "attr": false,
            "attrName": "aria-label",
            "keyInterfaceName": "Element",
            "name": "ariaLabel",
            "prop": true,
            "propName": "ariaLabel",
            "readonly": false,
            "value": "unknown"
          },
          "aria-label": {
            "attr": true,
            "attrName": "aria-label",
            "keyInterfaceName": "Element",
            "name": "aria-label",
            "prop": false,
            "propName": "ariaLabel",
            "readonly": false,
            "value": "unknown"
          },
          "ariaLevel": {
            "attr": false,
            "attrName": "aria-level",
            "keyInterfaceName": "Element",
            "name": "ariaLevel",
            "prop": true,
            "propName": "ariaLevel",
            "readonly": false,
            "value": "unknown"
          },
          "aria-level": {
            "attr": true,
            "attrName": "aria-level",
            "keyInterfaceName": "Element",
            "name": "aria-level",
            "prop": false,
            "propName": "ariaLevel",
            "readonly": false,
            "value": "unknown"
          },
          "ariaLive": {
            "attr": false,
            "attrName": "aria-live",
            "keyInterfaceName": "Element",
            "name": "ariaLive",
            "prop": true,
            "propName": "ariaLive",
            "readonly": false,
            "value": "unknown"
          },
          "aria-live": {
            "attr": true,
            "attrName": "aria-live",
            "keyInterfaceName": "Element",
            "name": "aria-live",
            "prop": false,
            "propName": "ariaLive",
            "readonly": false,
            "value": "unknown"
          },
          "ariaModal": {
            "attr": false,
            "attrName": "aria-modal",
            "keyInterfaceName": "Element",
            "name": "ariaModal",
            "prop": true,
            "propName": "ariaModal",
            "readonly": false,
            "value": "unknown"
          },
          "aria-modal": {
            "attr": true,
            "attrName": "aria-modal",
            "keyInterfaceName": "Element",
            "name": "aria-modal",
            "prop": false,
            "propName": "ariaModal",
            "readonly": false,
            "value": "unknown"
          },
          "ariaMultiLine": {
            "attr": false,
            "attrName": "aria-multiline",
            "keyInterfaceName": "Element",
            "name": "ariaMultiLine",
            "prop": true,
            "propName": "ariaMultiLine",
            "readonly": false,
            "value": "unknown"
          },
          "aria-multiline": {
            "attr": true,
            "attrName": "aria-multiline",
            "keyInterfaceName": "Element",
            "name": "aria-multiline",
            "prop": false,
            "propName": "ariaMultiLine",
            "readonly": false,
            "value": "unknown"
          },
          "ariaMultiSelectable": {
            "attr": false,
            "attrName": "aria-multiselectable",
            "keyInterfaceName": "Element",
            "name": "ariaMultiSelectable",
            "prop": true,
            "propName": "ariaMultiSelectable",
            "readonly": false,
            "value": "unknown"
          },
          "aria-multiselectable": {
            "attr": true,
            "attrName": "aria-multiselectable",
            "keyInterfaceName": "Element",
            "name": "aria-multiselectable",
            "prop": false,
            "propName": "ariaMultiSelectable",
            "readonly": false,
            "value": "unknown"
          },
          "ariaOrientation": {
            "attr": false,
            "attrName": "aria-orientation",
            "keyInterfaceName": "Element",
            "name": "ariaOrientation",
            "prop": true,
            "propName": "ariaOrientation",
            "readonly": false,
            "value": "unknown"
          },
          "aria-orientation": {
            "attr": true,
            "attrName": "aria-orientation",
            "keyInterfaceName": "Element",
            "name": "aria-orientation",
            "prop": false,
            "propName": "ariaOrientation",
            "readonly": false,
            "value": "unknown"
          },
          "ariaPlaceholder": {
            "attr": false,
            "attrName": "aria-placeholder",
            "keyInterfaceName": "Element",
            "name": "ariaPlaceholder",
            "prop": true,
            "propName": "ariaPlaceholder",
            "readonly": false,
            "value": "unknown"
          },
          "aria-placeholder": {
            "attr": true,
            "attrName": "aria-placeholder",
            "keyInterfaceName": "Element",
            "name": "aria-placeholder",
            "prop": false,
            "propName": "ariaPlaceholder",
            "readonly": false,
            "value": "unknown"
          },
          "ariaPosInSet": {
            "attr": false,
            "attrName": "aria-posinset",
            "keyInterfaceName": "Element",
            "name": "ariaPosInSet",
            "prop": true,
            "propName": "ariaPosInSet",
            "readonly": false,
            "value": "unknown"
          },
          "aria-posinset": {
            "attr": true,
            "attrName": "aria-posinset",
            "keyInterfaceName": "Element",
            "name": "aria-posinset",
            "prop": false,
            "propName": "ariaPosInSet",
            "readonly": false,
            "value": "unknown"
          },
          "ariaPressed": {
            "attr": false,
            "attrName": "aria-pressed",
            "keyInterfaceName": "Element",
            "name": "ariaPressed",
            "prop": true,
            "propName": "ariaPressed",
            "readonly": false,
            "value": "unknown"
          },
          "aria-pressed": {
            "attr": true,
            "attrName": "aria-pressed",
            "keyInterfaceName": "Element",
            "name": "aria-pressed",
            "prop": false,
            "propName": "ariaPressed",
            "readonly": false,
            "value": "unknown"
          },
          "ariaReadOnly": {
            "attr": false,
            "attrName": "aria-readonly",
            "keyInterfaceName": "Element",
            "name": "ariaReadOnly",
            "prop": true,
            "propName": "ariaReadOnly",
            "readonly": false,
            "value": "unknown"
          },
          "aria-readonly": {
            "attr": true,
            "attrName": "aria-readonly",
            "keyInterfaceName": "Element",
            "name": "aria-readonly",
            "prop": false,
            "propName": "ariaReadOnly",
            "readonly": false,
            "value": "unknown"
          },
          "ariaRelevant": {
            "attr": false,
            "attrName": "aria-relevant",
            "keyInterfaceName": "Element",
            "name": "ariaRelevant",
            "prop": true,
            "propName": "ariaRelevant",
            "readonly": false,
            "value": "unknown"
          },
          "aria-relevant": {
            "attr": true,
            "attrName": "aria-relevant",
            "keyInterfaceName": "Element",
            "name": "aria-relevant",
            "prop": false,
            "propName": "ariaRelevant",
            "readonly": false,
            "value": "unknown"
          },
          "ariaRequired": {
            "attr": false,
            "attrName": "aria-required",
            "keyInterfaceName": "Element",
            "name": "ariaRequired",
            "prop": true,
            "propName": "ariaRequired",
            "readonly": false,
            "value": "unknown"
          },
          "aria-required": {
            "attr": true,
            "attrName": "aria-required",
            "keyInterfaceName": "Element",
            "name": "aria-required",
            "prop": false,
            "propName": "ariaRequired",
            "readonly": false,
            "value": "unknown"
          },
          "ariaRoleDescription": {
            "attr": false,
            "attrName": "aria-roledescription",
            "keyInterfaceName": "Element",
            "name": "ariaRoleDescription",
            "prop": true,
            "propName": "ariaRoleDescription",
            "readonly": false,
            "value": "unknown"
          },
          "aria-roledescription": {
            "attr": true,
            "attrName": "aria-roledescription",
            "keyInterfaceName": "Element",
            "name": "aria-roledescription",
            "prop": false,
            "propName": "ariaRoleDescription",
            "readonly": false,
            "value": "unknown"
          },
          "ariaRowCount": {
            "attr": false,
            "attrName": "aria-rowcount",
            "keyInterfaceName": "Element",
            "name": "ariaRowCount",
            "prop": true,
            "propName": "ariaRowCount",
            "readonly": false,
            "value": "unknown"
          },
          "aria-rowcount": {
            "attr": true,
            "attrName": "aria-rowcount",
            "keyInterfaceName": "Element",
            "name": "aria-rowcount",
            "prop": false,
            "propName": "ariaRowCount",
            "readonly": false,
            "value": "unknown"
          },
          "ariaRowIndex": {
            "attr": false,
            "attrName": "aria-rowindex",
            "keyInterfaceName": "Element",
            "name": "ariaRowIndex",
            "prop": true,
            "propName": "ariaRowIndex",
            "readonly": false,
            "value": "unknown"
          },
          "aria-rowindex": {
            "attr": true,
            "attrName": "aria-rowindex",
            "keyInterfaceName": "Element",
            "name": "aria-rowindex",
            "prop": false,
            "propName": "ariaRowIndex",
            "readonly": false,
            "value": "unknown"
          },
          "ariaRowIndexText": {
            "attr": false,
            "attrName": "aria-rowindextext",
            "keyInterfaceName": "Element",
            "name": "ariaRowIndexText",
            "prop": true,
            "propName": "ariaRowIndexText",
            "readonly": false,
            "value": "unknown"
          },
          "aria-rowindextext": {
            "attr": true,
            "attrName": "aria-rowindextext",
            "keyInterfaceName": "Element",
            "name": "aria-rowindextext",
            "prop": false,
            "propName": "ariaRowIndexText",
            "readonly": false,
            "value": "unknown"
          },
          "ariaRowSpan": {
            "attr": false,
            "attrName": "aria-rowspan",
            "keyInterfaceName": "Element",
            "name": "ariaRowSpan",
            "prop": true,
            "propName": "ariaRowSpan",
            "readonly": false,
            "value": "unknown"
          },
          "aria-rowspan": {
            "attr": true,
            "attrName": "aria-rowspan",
            "keyInterfaceName": "Element",
            "name": "aria-rowspan",
            "prop": false,
            "propName": "ariaRowSpan",
            "readonly": false,
            "value": "unknown"
          },
          "ariaSelected": {
            "attr": false,
            "attrName": "aria-selected",
            "keyInterfaceName": "Element",
            "name": "ariaSelected",
            "prop": true,
            "propName": "ariaSelected",
            "readonly": false,
            "value": "unknown"
          },
          "aria-selected": {
            "attr": true,
            "attrName": "aria-selected",
            "keyInterfaceName": "Element",
            "name": "aria-selected",
            "prop": false,
            "propName": "ariaSelected",
            "readonly": false,
            "value": "unknown"
          },
          "ariaSetSize": {
            "attr": false,
            "attrName": "aria-setsize",
            "keyInterfaceName": "Element",
            "name": "ariaSetSize",
            "prop": true,
            "propName": "ariaSetSize",
            "readonly": false,
            "value": "unknown"
          },
          "aria-setsize": {
            "attr": true,
            "attrName": "aria-setsize",
            "keyInterfaceName": "Element",
            "name": "aria-setsize",
            "prop": false,
            "propName": "ariaSetSize",
            "readonly": false,
            "value": "unknown"
          },
          "ariaSort": {
            "attr": false,
            "attrName": "aria-sort",
            "keyInterfaceName": "Element",
            "name": "ariaSort",
            "prop": true,
            "propName": "ariaSort",
            "readonly": false,
            "value": "unknown"
          },
          "aria-sort": {
            "attr": true,
            "attrName": "aria-sort",
            "keyInterfaceName": "Element",
            "name": "aria-sort",
            "prop": false,
            "propName": "ariaSort",
            "readonly": false,
            "value": "unknown"
          },
          "ariaValueMax": {
            "attr": false,
            "attrName": "aria-valuemax",
            "keyInterfaceName": "Element",
            "name": "ariaValueMax",
            "prop": true,
            "propName": "ariaValueMax",
            "readonly": false,
            "value": "unknown"
          },
          "aria-valuemax": {
            "attr": true,
            "attrName": "aria-valuemax",
            "keyInterfaceName": "Element",
            "name": "aria-valuemax",
            "prop": false,
            "propName": "ariaValueMax",
            "readonly": false,
            "value": "unknown"
          },
          "ariaValueMin": {
            "attr": false,
            "attrName": "aria-valuemin",
            "keyInterfaceName": "Element",
            "name": "ariaValueMin",
            "prop": true,
            "propName": "ariaValueMin",
            "readonly": false,
            "value": "unknown"
          },
          "aria-valuemin": {
            "attr": true,
            "attrName": "aria-valuemin",
            "keyInterfaceName": "Element",
            "name": "aria-valuemin",
            "prop": false,
            "propName": "ariaValueMin",
            "readonly": false,
            "value": "unknown"
          },
          "ariaValueNow": {
            "attr": false,
            "attrName": "aria-valuenow",
            "keyInterfaceName": "Element",
            "name": "ariaValueNow",
            "prop": true,
            "propName": "ariaValueNow",
            "readonly": false,
            "value": "unknown"
          },
          "aria-valuenow": {
            "attr": true,
            "attrName": "aria-valuenow",
            "keyInterfaceName": "Element",
            "name": "aria-valuenow",
            "prop": false,
            "propName": "ariaValueNow",
            "readonly": false,
            "value": "unknown"
          },
          "ariaValueText": {
            "attr": false,
            "attrName": "aria-valuetext",
            "keyInterfaceName": "Element",
            "name": "ariaValueText",
            "prop": true,
            "propName": "ariaValueText",
            "readonly": false,
            "value": "unknown"
          },
          "aria-valuetext": {
            "attr": true,
            "attrName": "aria-valuetext",
            "keyInterfaceName": "Element",
            "name": "aria-valuetext",
            "prop": false,
            "propName": "ariaValueText",
            "readonly": false,
            "value": "unknown"
          },
          "class": {
            "attr": true,
            "attrName": "class",
            "keyInterfaceName": "Element",
            "name": "class",
            "prop": false,
            "propName": "classList",
            "readonly": false,
            "value": "string"
          },
          "classList": {
            "attr": false,
            "attrName": "class",
            "keyInterfaceName": "Element",
            "name": "classList",
            "prop": true,
            "propName": "classList",
            "readonly": false,
            "value": "string"
          },
          "className": {
            "attr": false,
            "attrName": "class",
            "keyInterfaceName": "Element",
            "name": "className",
            "prop": true,
            "propName": "className",
            "readonly": false,
            "value": "string"
          },
          "elementTiming": {
            "attr": false,
            "attrName": "elementtiming",
            "keyInterfaceName": "Element",
            "name": "elementTiming",
            "prop": true,
            "propName": "elementTiming",
            "readonly": false,
            "value": "string"
          },
          "elementtiming": {
            "attr": true,
            "attrName": "elementtiming",
            "keyInterfaceName": "Element",
            "name": "elementtiming",
            "prop": false,
            "propName": "elementTiming",
            "readonly": false,
            "value": "string"
          },
          "id": {
            "attr": true,
            "attrName": "id",
            "keyInterfaceName": "Element",
            "name": "id",
            "prop": true,
            "propName": "id",
            "readonly": false,
            "value": "string"
          },
          "innerHTML": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "Element",
            "name": "innerHTML",
            "prop": true,
            "propName": "innerHTML",
            "readonly": false,
            "value": "string"
          },
          "onbeforecopy": {
            "attr": true,
            "attrName": "onbeforecopy",
            "keyInterfaceName": "Element",
            "name": "onbeforecopy",
            "prop": true,
            "propName": "onbeforecopy",
            "readonly": false,
            "value": "event"
          },
          "onbeforecut": {
            "attr": true,
            "attrName": "onbeforecut",
            "keyInterfaceName": "Element",
            "name": "onbeforecut",
            "prop": true,
            "propName": "onbeforecut",
            "readonly": false,
            "value": "event"
          },
          "onbeforepaste": {
            "attr": true,
            "attrName": "onbeforepaste",
            "keyInterfaceName": "Element",
            "name": "onbeforepaste",
            "prop": true,
            "propName": "onbeforepaste",
            "readonly": false,
            "value": "event"
          },
          "onfullscreenchange": {
            "attr": true,
            "attrName": "onfullscreenchange",
            "keyInterfaceName": "Element",
            "name": "onfullscreenchange",
            "prop": true,
            "propName": "onfullscreenchange",
            "readonly": false,
            "value": "event"
          },
          "onfullscreenerror": {
            "attr": true,
            "attrName": "onfullscreenerror",
            "keyInterfaceName": "Element",
            "name": "onfullscreenerror",
            "prop": true,
            "propName": "onfullscreenerror",
            "readonly": false,
            "value": "event"
          },
          "onsearch": {
            "attr": true,
            "attrName": "onsearch",
            "keyInterfaceName": "Element",
            "name": "onsearch",
            "prop": true,
            "propName": "onsearch",
            "readonly": false,
            "value": "event"
          },
          "onwebkitfullscreenchange": {
            "attr": true,
            "attrName": "onwebkitfullscreenchange",
            "keyInterfaceName": "Element",
            "name": "onwebkitfullscreenchange",
            "prop": true,
            "propName": "onwebkitfullscreenchange",
            "readonly": false,
            "value": "event"
          },
          "onwebkitfullscreenerror": {
            "attr": true,
            "attrName": "onwebkitfullscreenerror",
            "keyInterfaceName": "Element",
            "name": "onwebkitfullscreenerror",
            "prop": true,
            "propName": "onwebkitfullscreenerror",
            "readonly": false,
            "value": "event"
          },
          "outerHTML": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "Element",
            "name": "outerHTML",
            "prop": true,
            "propName": "outerHTML",
            "readonly": false,
            "value": "string"
          },
          "part": {
            "attr": true,
            "attrName": "part",
            "keyInterfaceName": "Element",
            "name": "part",
            "prop": true,
            "propName": "part",
            "readonly": false,
            "value": "string"
          },
          "role": {
            "attr": true,
            "attrName": "role",
            "keyInterfaceName": "Element",
            "name": "role",
            "prop": true,
            "propName": "role",
            "readonly": false,
            "value": "string"
          },
          "scrollLeft": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "Element",
            "name": "scrollLeft",
            "prop": true,
            "propName": "scrollLeft",
            "readonly": false,
            "value": "number"
          },
          "scrollTop": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "Element",
            "name": "scrollTop",
            "prop": true,
            "propName": "scrollTop",
            "readonly": false,
            "value": "number"
          },
          "slot": {
            "attr": true,
            "attrName": "slot",
            "keyInterfaceName": "Element",
            "name": "slot",
            "prop": true,
            "propName": "slot",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [
          "Element.assignedSlot",
          "Element.attributes",
          "Element.childElementCount",
          "Element.children",
          "Element.clientHeight",
          "Element.clientLeft",
          "Element.clientTop",
          "Element.clientWidth",
          "Element.currentCSSZoom",
          "Element.firstElementChild",
          "Element.lastElementChild",
          "Element.localName",
          "Element.namespaceURI",
          "Element.nextElementSibling",
          "Element.prefix",
          "Element.previousElementSibling",
          "Element.scrollHeight",
          "Element.scrollWidth",
          "Element.shadowRoot",
          "Element.tagName"
        ],
        "tagInterfaceName": "Element"
      },
      "htmlelement": {
        "booleans": [
          "HTMLElement.autofocus",
          "HTMLElement.draggable",
          "HTMLElement.hidden",
          "HTMLElement.inert",
          "HTMLElement.spellcheck",
          "HTMLElement.translate"
        ],
        "events": [
          "HTMLElement.onabort",
          "HTMLElement.onanimationend",
          "HTMLElement.onanimationiteration",
          "HTMLElement.onanimationstart",
          "HTMLElement.onauxclick",
          "HTMLElement.onbeforeinput",
          "HTMLElement.onbeforematch",
          "HTMLElement.onbeforetoggle",
          "HTMLElement.onbeforexrselect",
          "HTMLElement.onblur",
          "HTMLElement.oncancel",
          "HTMLElement.oncanplay",
          "HTMLElement.oncanplaythrough",
          "HTMLElement.onchange",
          "HTMLElement.onclick",
          "HTMLElement.onclose",
          "HTMLElement.oncommand",
          "HTMLElement.oncontentvisibilityautostatechange",
          "HTMLElement.oncontextlost",
          "HTMLElement.oncontextmenu",
          "HTMLElement.oncontextrestored",
          "HTMLElement.oncopy",
          "HTMLElement.oncuechange",
          "HTMLElement.oncut",
          "HTMLElement.ondblclick",
          "HTMLElement.ondrag",
          "HTMLElement.ondragend",
          "HTMLElement.ondragenter",
          "HTMLElement.ondragleave",
          "HTMLElement.ondragover",
          "HTMLElement.ondragstart",
          "HTMLElement.ondrop",
          "HTMLElement.ondurationchange",
          "HTMLElement.onemptied",
          "HTMLElement.onended",
          "HTMLElement.onerror",
          "HTMLElement.onfocus",
          "HTMLElement.onformdata",
          "HTMLElement.ongotpointercapture",
          "HTMLElement.oninput",
          "HTMLElement.oninvalid",
          "HTMLElement.onkeydown",
          "HTMLElement.onkeypress",
          "HTMLElement.onkeyup",
          "HTMLElement.onload",
          "HTMLElement.onloadeddata",
          "HTMLElement.onloadedmetadata",
          "HTMLElement.onloadstart",
          "HTMLElement.onlostpointercapture",
          "HTMLElement.onmousedown",
          "HTMLElement.onmouseenter",
          "HTMLElement.onmouseleave",
          "HTMLElement.onmousemove",
          "HTMLElement.onmouseout",
          "HTMLElement.onmouseover",
          "HTMLElement.onmouseup",
          "HTMLElement.onmousewheel",
          "HTMLElement.onpaste",
          "HTMLElement.onpause",
          "HTMLElement.onplay",
          "HTMLElement.onplaying",
          "HTMLElement.onpointercancel",
          "HTMLElement.onpointerdown",
          "HTMLElement.onpointerenter",
          "HTMLElement.onpointerleave",
          "HTMLElement.onpointermove",
          "HTMLElement.onpointerout",
          "HTMLElement.onpointerover",
          "HTMLElement.onpointerrawupdate",
          "HTMLElement.onpointerup",
          "HTMLElement.onprogress",
          "HTMLElement.onratechange",
          "HTMLElement.onreset",
          "HTMLElement.onresize",
          "HTMLElement.onscroll",
          "HTMLElement.onscrollend",
          "HTMLElement.onscrollsnapchange",
          "HTMLElement.onscrollsnapchanging",
          "HTMLElement.onsecuritypolicyviolation",
          "HTMLElement.onseeked",
          "HTMLElement.onseeking",
          "HTMLElement.onselect",
          "HTMLElement.onselectionchange",
          "HTMLElement.onselectstart",
          "HTMLElement.onslotchange",
          "HTMLElement.onstalled",
          "HTMLElement.onsubmit",
          "HTMLElement.onsuspend",
          "HTMLElement.ontimeupdate",
          "HTMLElement.ontoggle",
          "HTMLElement.ontransitioncancel",
          "HTMLElement.ontransitionend",
          "HTMLElement.ontransitionrun",
          "HTMLElement.ontransitionstart",
          "HTMLElement.onvolumechange",
          "HTMLElement.onwaiting",
          "HTMLElement.onwebkitanimationend",
          "HTMLElement.onwebkitanimationiteration",
          "HTMLElement.onwebkitanimationstart",
          "HTMLElement.onwebkittransitionend",
          "HTMLElement.onwheel"
        ],
        "keys": {
          "accessKey": {
            "attr": false,
            "attrName": "accesskey",
            "keyInterfaceName": "HTMLElement",
            "name": "accessKey",
            "prop": true,
            "propName": "accessKey",
            "readonly": false,
            "value": "string"
          },
          "accesskey": {
            "attr": true,
            "attrName": "accesskey",
            "keyInterfaceName": "HTMLElement",
            "name": "accesskey",
            "prop": false,
            "propName": "accessKey",
            "readonly": false,
            "value": "string"
          },
          "autocapitalize": {
            "attr": true,
            "attrName": "autocapitalize",
            "keyInterfaceName": "HTMLElement",
            "name": "autocapitalize",
            "prop": true,
            "propName": "autocapitalize",
            "readonly": false,
            "value": "string"
          },
          "autofocus": {
            "attr": true,
            "attrName": "autofocus",
            "keyInterfaceName": "HTMLElement",
            "name": "autofocus",
            "prop": true,
            "propName": "autofocus",
            "readonly": false,
            "value": "boolean"
          },
          "contentEditable": {
            "attr": false,
            "attrName": "contenteditable",
            "keyInterfaceName": "HTMLElement",
            "name": "contentEditable",
            "prop": true,
            "propName": "contentEditable",
            "readonly": false,
            "value": "string"
          },
          "contenteditable": {
            "attr": true,
            "attrName": "contenteditable",
            "keyInterfaceName": "HTMLElement",
            "name": "contenteditable",
            "prop": false,
            "propName": "contentEditable",
            "readonly": false,
            "value": "string"
          },
          "dir": {
            "attr": true,
            "attrName": "dir",
            "keyInterfaceName": "HTMLElement",
            "name": "dir",
            "prop": true,
            "propName": "dir",
            "readonly": false,
            "value": "string"
          },
          "draggable": {
            "attr": true,
            "attrName": "draggable",
            "keyInterfaceName": "HTMLElement",
            "name": "draggable",
            "prop": true,
            "propName": "draggable",
            "readonly": false,
            "value": "boolean"
          },
          "editContext": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLElement",
            "name": "editContext",
            "prop": true,
            "propName": "editContext",
            "readonly": false,
            "value": "EditContext"
          },
          "enterKeyHint": {
            "attr": false,
            "attrName": "enterkeyhint",
            "keyInterfaceName": "HTMLElement",
            "name": "enterKeyHint",
            "prop": true,
            "propName": "enterKeyHint",
            "readonly": false,
            "value": "string"
          },
          "enterkeyhint": {
            "attr": true,
            "attrName": "enterkeyhint",
            "keyInterfaceName": "HTMLElement",
            "name": "enterkeyhint",
            "prop": false,
            "propName": "enterKeyHint",
            "readonly": false,
            "value": "string"
          },
          "hidden": {
            "attr": true,
            "attrName": "hidden",
            "keyInterfaceName": "HTMLElement",
            "name": "hidden",
            "prop": true,
            "propName": "hidden",
            "readonly": false,
            "value": "boolean"
          },
          "inert": {
            "attr": true,
            "attrName": "inert",
            "keyInterfaceName": "HTMLElement",
            "name": "inert",
            "prop": true,
            "propName": "inert",
            "readonly": false,
            "value": "boolean"
          },
          "innerText": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLElement",
            "name": "innerText",
            "prop": true,
            "propName": "innerText",
            "readonly": false,
            "value": "string"
          },
          "inputMode": {
            "attr": false,
            "attrName": "inputmode",
            "keyInterfaceName": "HTMLElement",
            "name": "inputMode",
            "prop": true,
            "propName": "inputMode",
            "readonly": false,
            "value": "string"
          },
          "inputmode": {
            "attr": true,
            "attrName": "inputmode",
            "keyInterfaceName": "HTMLElement",
            "name": "inputmode",
            "prop": false,
            "propName": "inputMode",
            "readonly": false,
            "value": "string"
          },
          "lang": {
            "attr": true,
            "attrName": "lang",
            "keyInterfaceName": "HTMLElement",
            "name": "lang",
            "prop": true,
            "propName": "lang",
            "readonly": false,
            "value": "string"
          },
          "nonce": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLElement",
            "name": "nonce",
            "prop": true,
            "propName": "nonce",
            "readonly": false,
            "value": "string"
          },
          "onabort": {
            "attr": true,
            "attrName": "onabort",
            "keyInterfaceName": "HTMLElement",
            "name": "onabort",
            "prop": true,
            "propName": "onabort",
            "readonly": false,
            "value": "event"
          },
          "onanimationend": {
            "attr": true,
            "attrName": "onanimationend",
            "keyInterfaceName": "HTMLElement",
            "name": "onanimationend",
            "prop": true,
            "propName": "onanimationend",
            "readonly": false,
            "value": "event"
          },
          "onanimationiteration": {
            "attr": true,
            "attrName": "onanimationiteration",
            "keyInterfaceName": "HTMLElement",
            "name": "onanimationiteration",
            "prop": true,
            "propName": "onanimationiteration",
            "readonly": false,
            "value": "event"
          },
          "onanimationstart": {
            "attr": true,
            "attrName": "onanimationstart",
            "keyInterfaceName": "HTMLElement",
            "name": "onanimationstart",
            "prop": true,
            "propName": "onanimationstart",
            "readonly": false,
            "value": "event"
          },
          "onauxclick": {
            "attr": true,
            "attrName": "onauxclick",
            "keyInterfaceName": "HTMLElement",
            "name": "onauxclick",
            "prop": true,
            "propName": "onauxclick",
            "readonly": false,
            "value": "event"
          },
          "onbeforeinput": {
            "attr": true,
            "attrName": "onbeforeinput",
            "keyInterfaceName": "HTMLElement",
            "name": "onbeforeinput",
            "prop": true,
            "propName": "onbeforeinput",
            "readonly": false,
            "value": "event"
          },
          "onbeforematch": {
            "attr": true,
            "attrName": "onbeforematch",
            "keyInterfaceName": "HTMLElement",
            "name": "onbeforematch",
            "prop": true,
            "propName": "onbeforematch",
            "readonly": false,
            "value": "event"
          },
          "onbeforetoggle": {
            "attr": true,
            "attrName": "onbeforetoggle",
            "keyInterfaceName": "HTMLElement",
            "name": "onbeforetoggle",
            "prop": true,
            "propName": "onbeforetoggle",
            "readonly": false,
            "value": "event"
          },
          "onbeforexrselect": {
            "attr": true,
            "attrName": "onbeforexrselect",
            "keyInterfaceName": "HTMLElement",
            "name": "onbeforexrselect",
            "prop": true,
            "propName": "onbeforexrselect",
            "readonly": false,
            "value": "event"
          },
          "onblur": {
            "attr": true,
            "attrName": "onblur",
            "keyInterfaceName": "HTMLElement",
            "name": "onblur",
            "prop": true,
            "propName": "onblur",
            "readonly": false,
            "value": "event"
          },
          "oncancel": {
            "attr": true,
            "attrName": "oncancel",
            "keyInterfaceName": "HTMLElement",
            "name": "oncancel",
            "prop": true,
            "propName": "oncancel",
            "readonly": false,
            "value": "event"
          },
          "oncanplay": {
            "attr": true,
            "attrName": "oncanplay",
            "keyInterfaceName": "HTMLElement",
            "name": "oncanplay",
            "prop": true,
            "propName": "oncanplay",
            "readonly": false,
            "value": "event"
          },
          "oncanplaythrough": {
            "attr": true,
            "attrName": "oncanplaythrough",
            "keyInterfaceName": "HTMLElement",
            "name": "oncanplaythrough",
            "prop": true,
            "propName": "oncanplaythrough",
            "readonly": false,
            "value": "event"
          },
          "onchange": {
            "attr": true,
            "attrName": "onchange",
            "keyInterfaceName": "HTMLElement",
            "name": "onchange",
            "prop": true,
            "propName": "onchange",
            "readonly": false,
            "value": "event"
          },
          "onclick": {
            "attr": true,
            "attrName": "onclick",
            "keyInterfaceName": "HTMLElement",
            "name": "onclick",
            "prop": true,
            "propName": "onclick",
            "readonly": false,
            "value": "event"
          },
          "onclose": {
            "attr": true,
            "attrName": "onclose",
            "keyInterfaceName": "HTMLElement",
            "name": "onclose",
            "prop": true,
            "propName": "onclose",
            "readonly": false,
            "value": "event"
          },
          "oncommand": {
            "attr": true,
            "attrName": "oncommand",
            "keyInterfaceName": "HTMLElement",
            "name": "oncommand",
            "prop": true,
            "propName": "oncommand",
            "readonly": false,
            "value": "event"
          },
          "oncontentvisibilityautostatechange": {
            "attr": true,
            "attrName": "oncontentvisibilityautostatechange",
            "keyInterfaceName": "HTMLElement",
            "name": "oncontentvisibilityautostatechange",
            "prop": true,
            "propName": "oncontentvisibilityautostatechange",
            "readonly": false,
            "value": "event"
          },
          "oncontextlost": {
            "attr": true,
            "attrName": "oncontextlost",
            "keyInterfaceName": "HTMLElement",
            "name": "oncontextlost",
            "prop": true,
            "propName": "oncontextlost",
            "readonly": false,
            "value": "event"
          },
          "oncontextmenu": {
            "attr": true,
            "attrName": "oncontextmenu",
            "keyInterfaceName": "HTMLElement",
            "name": "oncontextmenu",
            "prop": true,
            "propName": "oncontextmenu",
            "readonly": false,
            "value": "event"
          },
          "oncontextrestored": {
            "attr": true,
            "attrName": "oncontextrestored",
            "keyInterfaceName": "HTMLElement",
            "name": "oncontextrestored",
            "prop": true,
            "propName": "oncontextrestored",
            "readonly": false,
            "value": "event"
          },
          "oncopy": {
            "attr": true,
            "attrName": "oncopy",
            "keyInterfaceName": "HTMLElement",
            "name": "oncopy",
            "prop": true,
            "propName": "oncopy",
            "readonly": false,
            "value": "event"
          },
          "oncuechange": {
            "attr": true,
            "attrName": "oncuechange",
            "keyInterfaceName": "HTMLElement",
            "name": "oncuechange",
            "prop": true,
            "propName": "oncuechange",
            "readonly": false,
            "value": "event"
          },
          "oncut": {
            "attr": true,
            "attrName": "oncut",
            "keyInterfaceName": "HTMLElement",
            "name": "oncut",
            "prop": true,
            "propName": "oncut",
            "readonly": false,
            "value": "event"
          },
          "ondblclick": {
            "attr": true,
            "attrName": "ondblclick",
            "keyInterfaceName": "HTMLElement",
            "name": "ondblclick",
            "prop": true,
            "propName": "ondblclick",
            "readonly": false,
            "value": "event"
          },
          "ondrag": {
            "attr": true,
            "attrName": "ondrag",
            "keyInterfaceName": "HTMLElement",
            "name": "ondrag",
            "prop": true,
            "propName": "ondrag",
            "readonly": false,
            "value": "event"
          },
          "ondragend": {
            "attr": true,
            "attrName": "ondragend",
            "keyInterfaceName": "HTMLElement",
            "name": "ondragend",
            "prop": true,
            "propName": "ondragend",
            "readonly": false,
            "value": "event"
          },
          "ondragenter": {
            "attr": true,
            "attrName": "ondragenter",
            "keyInterfaceName": "HTMLElement",
            "name": "ondragenter",
            "prop": true,
            "propName": "ondragenter",
            "readonly": false,
            "value": "event"
          },
          "ondragleave": {
            "attr": true,
            "attrName": "ondragleave",
            "keyInterfaceName": "HTMLElement",
            "name": "ondragleave",
            "prop": true,
            "propName": "ondragleave",
            "readonly": false,
            "value": "event"
          },
          "ondragover": {
            "attr": true,
            "attrName": "ondragover",
            "keyInterfaceName": "HTMLElement",
            "name": "ondragover",
            "prop": true,
            "propName": "ondragover",
            "readonly": false,
            "value": "event"
          },
          "ondragstart": {
            "attr": true,
            "attrName": "ondragstart",
            "keyInterfaceName": "HTMLElement",
            "name": "ondragstart",
            "prop": true,
            "propName": "ondragstart",
            "readonly": false,
            "value": "event"
          },
          "ondrop": {
            "attr": true,
            "attrName": "ondrop",
            "keyInterfaceName": "HTMLElement",
            "name": "ondrop",
            "prop": true,
            "propName": "ondrop",
            "readonly": false,
            "value": "event"
          },
          "ondurationchange": {
            "attr": true,
            "attrName": "ondurationchange",
            "keyInterfaceName": "HTMLElement",
            "name": "ondurationchange",
            "prop": true,
            "propName": "ondurationchange",
            "readonly": false,
            "value": "event"
          },
          "onemptied": {
            "attr": true,
            "attrName": "onemptied",
            "keyInterfaceName": "HTMLElement",
            "name": "onemptied",
            "prop": true,
            "propName": "onemptied",
            "readonly": false,
            "value": "event"
          },
          "onended": {
            "attr": true,
            "attrName": "onended",
            "keyInterfaceName": "HTMLElement",
            "name": "onended",
            "prop": true,
            "propName": "onended",
            "readonly": false,
            "value": "event"
          },
          "onerror": {
            "attr": true,
            "attrName": "onerror",
            "keyInterfaceName": "HTMLElement",
            "name": "onerror",
            "prop": true,
            "propName": "onerror",
            "readonly": false,
            "value": "event"
          },
          "onfocus": {
            "attr": true,
            "attrName": "onfocus",
            "keyInterfaceName": "HTMLElement",
            "name": "onfocus",
            "prop": true,
            "propName": "onfocus",
            "readonly": false,
            "value": "event"
          },
          "onformdata": {
            "attr": true,
            "attrName": "onformdata",
            "keyInterfaceName": "HTMLElement",
            "name": "onformdata",
            "prop": true,
            "propName": "onformdata",
            "readonly": false,
            "value": "event"
          },
          "ongotpointercapture": {
            "attr": true,
            "attrName": "ongotpointercapture",
            "keyInterfaceName": "HTMLElement",
            "name": "ongotpointercapture",
            "prop": true,
            "propName": "ongotpointercapture",
            "readonly": false,
            "value": "event"
          },
          "oninput": {
            "attr": true,
            "attrName": "oninput",
            "keyInterfaceName": "HTMLElement",
            "name": "oninput",
            "prop": true,
            "propName": "oninput",
            "readonly": false,
            "value": "event"
          },
          "oninvalid": {
            "attr": true,
            "attrName": "oninvalid",
            "keyInterfaceName": "HTMLElement",
            "name": "oninvalid",
            "prop": true,
            "propName": "oninvalid",
            "readonly": false,
            "value": "event"
          },
          "onkeydown": {
            "attr": true,
            "attrName": "onkeydown",
            "keyInterfaceName": "HTMLElement",
            "name": "onkeydown",
            "prop": true,
            "propName": "onkeydown",
            "readonly": false,
            "value": "event"
          },
          "onkeypress": {
            "attr": true,
            "attrName": "onkeypress",
            "keyInterfaceName": "HTMLElement",
            "name": "onkeypress",
            "prop": true,
            "propName": "onkeypress",
            "readonly": false,
            "value": "event"
          },
          "onkeyup": {
            "attr": true,
            "attrName": "onkeyup",
            "keyInterfaceName": "HTMLElement",
            "name": "onkeyup",
            "prop": true,
            "propName": "onkeyup",
            "readonly": false,
            "value": "event"
          },
          "onload": {
            "attr": true,
            "attrName": "onload",
            "keyInterfaceName": "HTMLElement",
            "name": "onload",
            "prop": true,
            "propName": "onload",
            "readonly": false,
            "value": "event"
          },
          "onloadeddata": {
            "attr": true,
            "attrName": "onloadeddata",
            "keyInterfaceName": "HTMLElement",
            "name": "onloadeddata",
            "prop": true,
            "propName": "onloadeddata",
            "readonly": false,
            "value": "event"
          },
          "onloadedmetadata": {
            "attr": true,
            "attrName": "onloadedmetadata",
            "keyInterfaceName": "HTMLElement",
            "name": "onloadedmetadata",
            "prop": true,
            "propName": "onloadedmetadata",
            "readonly": false,
            "value": "event"
          },
          "onloadstart": {
            "attr": true,
            "attrName": "onloadstart",
            "keyInterfaceName": "HTMLElement",
            "name": "onloadstart",
            "prop": true,
            "propName": "onloadstart",
            "readonly": false,
            "value": "event"
          },
          "onlostpointercapture": {
            "attr": true,
            "attrName": "onlostpointercapture",
            "keyInterfaceName": "HTMLElement",
            "name": "onlostpointercapture",
            "prop": true,
            "propName": "onlostpointercapture",
            "readonly": false,
            "value": "event"
          },
          "onmousedown": {
            "attr": true,
            "attrName": "onmousedown",
            "keyInterfaceName": "HTMLElement",
            "name": "onmousedown",
            "prop": true,
            "propName": "onmousedown",
            "readonly": false,
            "value": "event"
          },
          "onmouseenter": {
            "attr": true,
            "attrName": "onmouseenter",
            "keyInterfaceName": "HTMLElement",
            "name": "onmouseenter",
            "prop": true,
            "propName": "onmouseenter",
            "readonly": false,
            "value": "event"
          },
          "onmouseleave": {
            "attr": true,
            "attrName": "onmouseleave",
            "keyInterfaceName": "HTMLElement",
            "name": "onmouseleave",
            "prop": true,
            "propName": "onmouseleave",
            "readonly": false,
            "value": "event"
          },
          "onmousemove": {
            "attr": true,
            "attrName": "onmousemove",
            "keyInterfaceName": "HTMLElement",
            "name": "onmousemove",
            "prop": true,
            "propName": "onmousemove",
            "readonly": false,
            "value": "event"
          },
          "onmouseout": {
            "attr": true,
            "attrName": "onmouseout",
            "keyInterfaceName": "HTMLElement",
            "name": "onmouseout",
            "prop": true,
            "propName": "onmouseout",
            "readonly": false,
            "value": "event"
          },
          "onmouseover": {
            "attr": true,
            "attrName": "onmouseover",
            "keyInterfaceName": "HTMLElement",
            "name": "onmouseover",
            "prop": true,
            "propName": "onmouseover",
            "readonly": false,
            "value": "event"
          },
          "onmouseup": {
            "attr": true,
            "attrName": "onmouseup",
            "keyInterfaceName": "HTMLElement",
            "name": "onmouseup",
            "prop": true,
            "propName": "onmouseup",
            "readonly": false,
            "value": "event"
          },
          "onmousewheel": {
            "attr": true,
            "attrName": "onmousewheel",
            "keyInterfaceName": "HTMLElement",
            "name": "onmousewheel",
            "prop": true,
            "propName": "onmousewheel",
            "readonly": false,
            "value": "event"
          },
          "onpaste": {
            "attr": true,
            "attrName": "onpaste",
            "keyInterfaceName": "HTMLElement",
            "name": "onpaste",
            "prop": true,
            "propName": "onpaste",
            "readonly": false,
            "value": "event"
          },
          "onpause": {
            "attr": true,
            "attrName": "onpause",
            "keyInterfaceName": "HTMLElement",
            "name": "onpause",
            "prop": true,
            "propName": "onpause",
            "readonly": false,
            "value": "event"
          },
          "onplay": {
            "attr": true,
            "attrName": "onplay",
            "keyInterfaceName": "HTMLElement",
            "name": "onplay",
            "prop": true,
            "propName": "onplay",
            "readonly": false,
            "value": "event"
          },
          "onplaying": {
            "attr": true,
            "attrName": "onplaying",
            "keyInterfaceName": "HTMLElement",
            "name": "onplaying",
            "prop": true,
            "propName": "onplaying",
            "readonly": false,
            "value": "event"
          },
          "onpointercancel": {
            "attr": true,
            "attrName": "onpointercancel",
            "keyInterfaceName": "HTMLElement",
            "name": "onpointercancel",
            "prop": true,
            "propName": "onpointercancel",
            "readonly": false,
            "value": "event"
          },
          "onpointerdown": {
            "attr": true,
            "attrName": "onpointerdown",
            "keyInterfaceName": "HTMLElement",
            "name": "onpointerdown",
            "prop": true,
            "propName": "onpointerdown",
            "readonly": false,
            "value": "event"
          },
          "onpointerenter": {
            "attr": true,
            "attrName": "onpointerenter",
            "keyInterfaceName": "HTMLElement",
            "name": "onpointerenter",
            "prop": true,
            "propName": "onpointerenter",
            "readonly": false,
            "value": "event"
          },
          "onpointerleave": {
            "attr": true,
            "attrName": "onpointerleave",
            "keyInterfaceName": "HTMLElement",
            "name": "onpointerleave",
            "prop": true,
            "propName": "onpointerleave",
            "readonly": false,
            "value": "event"
          },
          "onpointermove": {
            "attr": true,
            "attrName": "onpointermove",
            "keyInterfaceName": "HTMLElement",
            "name": "onpointermove",
            "prop": true,
            "propName": "onpointermove",
            "readonly": false,
            "value": "event"
          },
          "onpointerout": {
            "attr": true,
            "attrName": "onpointerout",
            "keyInterfaceName": "HTMLElement",
            "name": "onpointerout",
            "prop": true,
            "propName": "onpointerout",
            "readonly": false,
            "value": "event"
          },
          "onpointerover": {
            "attr": true,
            "attrName": "onpointerover",
            "keyInterfaceName": "HTMLElement",
            "name": "onpointerover",
            "prop": true,
            "propName": "onpointerover",
            "readonly": false,
            "value": "event"
          },
          "onpointerrawupdate": {
            "attr": true,
            "attrName": "onpointerrawupdate",
            "keyInterfaceName": "HTMLElement",
            "name": "onpointerrawupdate",
            "prop": true,
            "propName": "onpointerrawupdate",
            "readonly": false,
            "value": "event"
          },
          "onpointerup": {
            "attr": true,
            "attrName": "onpointerup",
            "keyInterfaceName": "HTMLElement",
            "name": "onpointerup",
            "prop": true,
            "propName": "onpointerup",
            "readonly": false,
            "value": "event"
          },
          "onprogress": {
            "attr": true,
            "attrName": "onprogress",
            "keyInterfaceName": "HTMLElement",
            "name": "onprogress",
            "prop": true,
            "propName": "onprogress",
            "readonly": false,
            "value": "event"
          },
          "onratechange": {
            "attr": true,
            "attrName": "onratechange",
            "keyInterfaceName": "HTMLElement",
            "name": "onratechange",
            "prop": true,
            "propName": "onratechange",
            "readonly": false,
            "value": "event"
          },
          "onreset": {
            "attr": true,
            "attrName": "onreset",
            "keyInterfaceName": "HTMLElement",
            "name": "onreset",
            "prop": true,
            "propName": "onreset",
            "readonly": false,
            "value": "event"
          },
          "onresize": {
            "attr": true,
            "attrName": "onresize",
            "keyInterfaceName": "HTMLElement",
            "name": "onresize",
            "prop": true,
            "propName": "onresize",
            "readonly": false,
            "value": "event"
          },
          "onscroll": {
            "attr": true,
            "attrName": "onscroll",
            "keyInterfaceName": "HTMLElement",
            "name": "onscroll",
            "prop": true,
            "propName": "onscroll",
            "readonly": false,
            "value": "event"
          },
          "onscrollend": {
            "attr": true,
            "attrName": "onscrollend",
            "keyInterfaceName": "HTMLElement",
            "name": "onscrollend",
            "prop": true,
            "propName": "onscrollend",
            "readonly": false,
            "value": "event"
          },
          "onscrollsnapchange": {
            "attr": true,
            "attrName": "onscrollsnapchange",
            "keyInterfaceName": "HTMLElement",
            "name": "onscrollsnapchange",
            "prop": true,
            "propName": "onscrollsnapchange",
            "readonly": false,
            "value": "event"
          },
          "onscrollsnapchanging": {
            "attr": true,
            "attrName": "onscrollsnapchanging",
            "keyInterfaceName": "HTMLElement",
            "name": "onscrollsnapchanging",
            "prop": true,
            "propName": "onscrollsnapchanging",
            "readonly": false,
            "value": "event"
          },
          "onsecuritypolicyviolation": {
            "attr": true,
            "attrName": "onsecuritypolicyviolation",
            "keyInterfaceName": "HTMLElement",
            "name": "onsecuritypolicyviolation",
            "prop": true,
            "propName": "onsecuritypolicyviolation",
            "readonly": false,
            "value": "event"
          },
          "onseeked": {
            "attr": true,
            "attrName": "onseeked",
            "keyInterfaceName": "HTMLElement",
            "name": "onseeked",
            "prop": true,
            "propName": "onseeked",
            "readonly": false,
            "value": "event"
          },
          "onseeking": {
            "attr": true,
            "attrName": "onseeking",
            "keyInterfaceName": "HTMLElement",
            "name": "onseeking",
            "prop": true,
            "propName": "onseeking",
            "readonly": false,
            "value": "event"
          },
          "onselect": {
            "attr": true,
            "attrName": "onselect",
            "keyInterfaceName": "HTMLElement",
            "name": "onselect",
            "prop": true,
            "propName": "onselect",
            "readonly": false,
            "value": "event"
          },
          "onselectionchange": {
            "attr": true,
            "attrName": "onselectionchange",
            "keyInterfaceName": "HTMLElement",
            "name": "onselectionchange",
            "prop": true,
            "propName": "onselectionchange",
            "readonly": false,
            "value": "event"
          },
          "onselectstart": {
            "attr": true,
            "attrName": "onselectstart",
            "keyInterfaceName": "HTMLElement",
            "name": "onselectstart",
            "prop": true,
            "propName": "onselectstart",
            "readonly": false,
            "value": "event"
          },
          "onslotchange": {
            "attr": true,
            "attrName": "onslotchange",
            "keyInterfaceName": "HTMLElement",
            "name": "onslotchange",
            "prop": true,
            "propName": "onslotchange",
            "readonly": false,
            "value": "event"
          },
          "onstalled": {
            "attr": true,
            "attrName": "onstalled",
            "keyInterfaceName": "HTMLElement",
            "name": "onstalled",
            "prop": true,
            "propName": "onstalled",
            "readonly": false,
            "value": "event"
          },
          "onsubmit": {
            "attr": true,
            "attrName": "onsubmit",
            "keyInterfaceName": "HTMLElement",
            "name": "onsubmit",
            "prop": true,
            "propName": "onsubmit",
            "readonly": false,
            "value": "event"
          },
          "onsuspend": {
            "attr": true,
            "attrName": "onsuspend",
            "keyInterfaceName": "HTMLElement",
            "name": "onsuspend",
            "prop": true,
            "propName": "onsuspend",
            "readonly": false,
            "value": "event"
          },
          "ontimeupdate": {
            "attr": true,
            "attrName": "ontimeupdate",
            "keyInterfaceName": "HTMLElement",
            "name": "ontimeupdate",
            "prop": true,
            "propName": "ontimeupdate",
            "readonly": false,
            "value": "event"
          },
          "ontoggle": {
            "attr": true,
            "attrName": "ontoggle",
            "keyInterfaceName": "HTMLElement",
            "name": "ontoggle",
            "prop": true,
            "propName": "ontoggle",
            "readonly": false,
            "value": "event"
          },
          "ontransitioncancel": {
            "attr": true,
            "attrName": "ontransitioncancel",
            "keyInterfaceName": "HTMLElement",
            "name": "ontransitioncancel",
            "prop": true,
            "propName": "ontransitioncancel",
            "readonly": false,
            "value": "event"
          },
          "ontransitionend": {
            "attr": true,
            "attrName": "ontransitionend",
            "keyInterfaceName": "HTMLElement",
            "name": "ontransitionend",
            "prop": true,
            "propName": "ontransitionend",
            "readonly": false,
            "value": "event"
          },
          "ontransitionrun": {
            "attr": true,
            "attrName": "ontransitionrun",
            "keyInterfaceName": "HTMLElement",
            "name": "ontransitionrun",
            "prop": true,
            "propName": "ontransitionrun",
            "readonly": false,
            "value": "event"
          },
          "ontransitionstart": {
            "attr": true,
            "attrName": "ontransitionstart",
            "keyInterfaceName": "HTMLElement",
            "name": "ontransitionstart",
            "prop": true,
            "propName": "ontransitionstart",
            "readonly": false,
            "value": "event"
          },
          "onvolumechange": {
            "attr": true,
            "attrName": "onvolumechange",
            "keyInterfaceName": "HTMLElement",
            "name": "onvolumechange",
            "prop": true,
            "propName": "onvolumechange",
            "readonly": false,
            "value": "event"
          },
          "onwaiting": {
            "attr": true,
            "attrName": "onwaiting",
            "keyInterfaceName": "HTMLElement",
            "name": "onwaiting",
            "prop": true,
            "propName": "onwaiting",
            "readonly": false,
            "value": "event"
          },
          "onwebkitanimationend": {
            "attr": true,
            "attrName": "onwebkitanimationend",
            "keyInterfaceName": "HTMLElement",
            "name": "onwebkitanimationend",
            "prop": true,
            "propName": "onwebkitanimationend",
            "readonly": false,
            "value": "event"
          },
          "onwebkitanimationiteration": {
            "attr": true,
            "attrName": "onwebkitanimationiteration",
            "keyInterfaceName": "HTMLElement",
            "name": "onwebkitanimationiteration",
            "prop": true,
            "propName": "onwebkitanimationiteration",
            "readonly": false,
            "value": "event"
          },
          "onwebkitanimationstart": {
            "attr": true,
            "attrName": "onwebkitanimationstart",
            "keyInterfaceName": "HTMLElement",
            "name": "onwebkitanimationstart",
            "prop": true,
            "propName": "onwebkitanimationstart",
            "readonly": false,
            "value": "event"
          },
          "onwebkittransitionend": {
            "attr": true,
            "attrName": "onwebkittransitionend",
            "keyInterfaceName": "HTMLElement",
            "name": "onwebkittransitionend",
            "prop": true,
            "propName": "onwebkittransitionend",
            "readonly": false,
            "value": "event"
          },
          "onwheel": {
            "attr": true,
            "attrName": "onwheel",
            "keyInterfaceName": "HTMLElement",
            "name": "onwheel",
            "prop": true,
            "propName": "onwheel",
            "readonly": false,
            "value": "event"
          },
          "outerText": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLElement",
            "name": "outerText",
            "prop": true,
            "propName": "outerText",
            "readonly": false,
            "value": "string"
          },
          "popover": {
            "attr": true,
            "attrName": "popover",
            "keyInterfaceName": "HTMLElement",
            "name": "popover",
            "prop": true,
            "propName": "popover",
            "readonly": false,
            "value": "string"
          },
          "spellcheck": {
            "attr": true,
            "attrName": "spellcheck",
            "keyInterfaceName": "HTMLElement",
            "name": "spellcheck",
            "prop": true,
            "propName": "spellcheck",
            "readonly": false,
            "value": "boolean"
          },
          "style": {
            "attr": true,
            "attrName": "style",
            "keyInterfaceName": "HTMLElement",
            "name": "style",
            "prop": true,
            "propName": "style",
            "readonly": false,
            "value": "string"
          },
          "tabIndex": {
            "attr": false,
            "attrName": "tabindex",
            "keyInterfaceName": "HTMLElement",
            "name": "tabIndex",
            "prop": true,
            "propName": "tabIndex",
            "readonly": false,
            "value": "number"
          },
          "tabindex": {
            "attr": true,
            "attrName": "tabindex",
            "keyInterfaceName": "HTMLElement",
            "name": "tabindex",
            "prop": false,
            "propName": "tabIndex",
            "readonly": false,
            "value": "number"
          },
          "title": {
            "attr": true,
            "attrName": "title",
            "keyInterfaceName": "HTMLElement",
            "name": "title",
            "prop": true,
            "propName": "title",
            "readonly": false,
            "value": "string"
          },
          "translate": {
            "attr": true,
            "attrName": "translate",
            "keyInterfaceName": "HTMLElement",
            "name": "translate",
            "prop": true,
            "propName": "translate",
            "readonly": false,
            "value": "boolean"
          },
          "virtualKeyboardPolicy": {
            "attr": false,
            "attrName": "virtualkeyboardpolicy",
            "keyInterfaceName": "HTMLElement",
            "name": "virtualKeyboardPolicy",
            "prop": true,
            "propName": "virtualKeyboardPolicy",
            "readonly": false,
            "value": "string"
          },
          "virtualkeyboardpolicy": {
            "attr": true,
            "attrName": "virtualkeyboardpolicy",
            "keyInterfaceName": "HTMLElement",
            "name": "virtualkeyboardpolicy",
            "prop": false,
            "propName": "virtualKeyboardPolicy",
            "readonly": false,
            "value": "string"
          },
          "writingSuggestions": {
            "attr": false,
            "attrName": "writingsuggestions",
            "keyInterfaceName": "HTMLElement",
            "name": "writingSuggestions",
            "prop": true,
            "propName": "writingSuggestions",
            "readonly": false,
            "value": "string"
          },
          "writingsuggestions": {
            "attr": true,
            "attrName": "writingsuggestions",
            "keyInterfaceName": "HTMLElement",
            "name": "writingsuggestions",
            "prop": false,
            "propName": "writingSuggestions",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [
          "HTMLElement.attributeStyleMap",
          "HTMLElement.dataset",
          "HTMLElement.isContentEditable",
          "HTMLElement.offsetHeight",
          "HTMLElement.offsetLeft",
          "HTMLElement.offsetParent",
          "HTMLElement.offsetTop",
          "HTMLElement.offsetWidth"
        ],
        "tagInterfaceName": "HTMLElement"
      },
      "mathelement": {
        "booleans": [
          "MathMLElement.autofocus"
        ],
        "events": [
          "MathMLElement.onabort",
          "MathMLElement.onanimationend",
          "MathMLElement.onanimationiteration",
          "MathMLElement.onanimationstart",
          "MathMLElement.onauxclick",
          "MathMLElement.onbeforeinput",
          "MathMLElement.onbeforematch",
          "MathMLElement.onbeforetoggle",
          "MathMLElement.onbeforexrselect",
          "MathMLElement.onblur",
          "MathMLElement.oncancel",
          "MathMLElement.oncanplay",
          "MathMLElement.oncanplaythrough",
          "MathMLElement.onchange",
          "MathMLElement.onclick",
          "MathMLElement.onclose",
          "MathMLElement.oncommand",
          "MathMLElement.oncontentvisibilityautostatechange",
          "MathMLElement.oncontextlost",
          "MathMLElement.oncontextmenu",
          "MathMLElement.oncontextrestored",
          "MathMLElement.oncopy",
          "MathMLElement.oncuechange",
          "MathMLElement.oncut",
          "MathMLElement.ondblclick",
          "MathMLElement.ondrag",
          "MathMLElement.ondragend",
          "MathMLElement.ondragenter",
          "MathMLElement.ondragleave",
          "MathMLElement.ondragover",
          "MathMLElement.ondragstart",
          "MathMLElement.ondrop",
          "MathMLElement.ondurationchange",
          "MathMLElement.onemptied",
          "MathMLElement.onended",
          "MathMLElement.onerror",
          "MathMLElement.onfocus",
          "MathMLElement.onformdata",
          "MathMLElement.ongotpointercapture",
          "MathMLElement.oninput",
          "MathMLElement.oninvalid",
          "MathMLElement.onkeydown",
          "MathMLElement.onkeypress",
          "MathMLElement.onkeyup",
          "MathMLElement.onload",
          "MathMLElement.onloadeddata",
          "MathMLElement.onloadedmetadata",
          "MathMLElement.onloadstart",
          "MathMLElement.onlostpointercapture",
          "MathMLElement.onmousedown",
          "MathMLElement.onmouseenter",
          "MathMLElement.onmouseleave",
          "MathMLElement.onmousemove",
          "MathMLElement.onmouseout",
          "MathMLElement.onmouseover",
          "MathMLElement.onmouseup",
          "MathMLElement.onmousewheel",
          "MathMLElement.onpaste",
          "MathMLElement.onpause",
          "MathMLElement.onplay",
          "MathMLElement.onplaying",
          "MathMLElement.onpointercancel",
          "MathMLElement.onpointerdown",
          "MathMLElement.onpointerenter",
          "MathMLElement.onpointerleave",
          "MathMLElement.onpointermove",
          "MathMLElement.onpointerout",
          "MathMLElement.onpointerover",
          "MathMLElement.onpointerrawupdate",
          "MathMLElement.onpointerup",
          "MathMLElement.onprogress",
          "MathMLElement.onratechange",
          "MathMLElement.onreset",
          "MathMLElement.onresize",
          "MathMLElement.onscroll",
          "MathMLElement.onscrollend",
          "MathMLElement.onscrollsnapchange",
          "MathMLElement.onscrollsnapchanging",
          "MathMLElement.onsecuritypolicyviolation",
          "MathMLElement.onseeked",
          "MathMLElement.onseeking",
          "MathMLElement.onselect",
          "MathMLElement.onselectionchange",
          "MathMLElement.onselectstart",
          "MathMLElement.onslotchange",
          "MathMLElement.onstalled",
          "MathMLElement.onsubmit",
          "MathMLElement.onsuspend",
          "MathMLElement.ontimeupdate",
          "MathMLElement.ontoggle",
          "MathMLElement.ontransitioncancel",
          "MathMLElement.ontransitionend",
          "MathMLElement.ontransitionrun",
          "MathMLElement.ontransitionstart",
          "MathMLElement.onvolumechange",
          "MathMLElement.onwaiting",
          "MathMLElement.onwebkitanimationend",
          "MathMLElement.onwebkitanimationiteration",
          "MathMLElement.onwebkitanimationstart",
          "MathMLElement.onwebkittransitionend",
          "MathMLElement.onwheel"
        ],
        "keys": {
          "autofocus": {
            "attr": true,
            "attrName": "autofocus",
            "keyInterfaceName": "MathMLElement",
            "name": "autofocus",
            "prop": true,
            "propName": "autofocus",
            "readonly": false,
            "value": "boolean"
          },
          "nonce": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "MathMLElement",
            "name": "nonce",
            "prop": true,
            "propName": "nonce",
            "readonly": false,
            "value": "string"
          },
          "onabort": {
            "attr": true,
            "attrName": "onabort",
            "keyInterfaceName": "MathMLElement",
            "name": "onabort",
            "prop": true,
            "propName": "onabort",
            "readonly": false,
            "value": "event"
          },
          "onanimationend": {
            "attr": true,
            "attrName": "onanimationend",
            "keyInterfaceName": "MathMLElement",
            "name": "onanimationend",
            "prop": true,
            "propName": "onanimationend",
            "readonly": false,
            "value": "event"
          },
          "onanimationiteration": {
            "attr": true,
            "attrName": "onanimationiteration",
            "keyInterfaceName": "MathMLElement",
            "name": "onanimationiteration",
            "prop": true,
            "propName": "onanimationiteration",
            "readonly": false,
            "value": "event"
          },
          "onanimationstart": {
            "attr": true,
            "attrName": "onanimationstart",
            "keyInterfaceName": "MathMLElement",
            "name": "onanimationstart",
            "prop": true,
            "propName": "onanimationstart",
            "readonly": false,
            "value": "event"
          },
          "onauxclick": {
            "attr": true,
            "attrName": "onauxclick",
            "keyInterfaceName": "MathMLElement",
            "name": "onauxclick",
            "prop": true,
            "propName": "onauxclick",
            "readonly": false,
            "value": "event"
          },
          "onbeforeinput": {
            "attr": true,
            "attrName": "onbeforeinput",
            "keyInterfaceName": "MathMLElement",
            "name": "onbeforeinput",
            "prop": true,
            "propName": "onbeforeinput",
            "readonly": false,
            "value": "event"
          },
          "onbeforematch": {
            "attr": true,
            "attrName": "onbeforematch",
            "keyInterfaceName": "MathMLElement",
            "name": "onbeforematch",
            "prop": true,
            "propName": "onbeforematch",
            "readonly": false,
            "value": "event"
          },
          "onbeforetoggle": {
            "attr": true,
            "attrName": "onbeforetoggle",
            "keyInterfaceName": "MathMLElement",
            "name": "onbeforetoggle",
            "prop": true,
            "propName": "onbeforetoggle",
            "readonly": false,
            "value": "event"
          },
          "onbeforexrselect": {
            "attr": true,
            "attrName": "onbeforexrselect",
            "keyInterfaceName": "MathMLElement",
            "name": "onbeforexrselect",
            "prop": true,
            "propName": "onbeforexrselect",
            "readonly": false,
            "value": "event"
          },
          "onblur": {
            "attr": true,
            "attrName": "onblur",
            "keyInterfaceName": "MathMLElement",
            "name": "onblur",
            "prop": true,
            "propName": "onblur",
            "readonly": false,
            "value": "event"
          },
          "oncancel": {
            "attr": true,
            "attrName": "oncancel",
            "keyInterfaceName": "MathMLElement",
            "name": "oncancel",
            "prop": true,
            "propName": "oncancel",
            "readonly": false,
            "value": "event"
          },
          "oncanplay": {
            "attr": true,
            "attrName": "oncanplay",
            "keyInterfaceName": "MathMLElement",
            "name": "oncanplay",
            "prop": true,
            "propName": "oncanplay",
            "readonly": false,
            "value": "event"
          },
          "oncanplaythrough": {
            "attr": true,
            "attrName": "oncanplaythrough",
            "keyInterfaceName": "MathMLElement",
            "name": "oncanplaythrough",
            "prop": true,
            "propName": "oncanplaythrough",
            "readonly": false,
            "value": "event"
          },
          "onchange": {
            "attr": true,
            "attrName": "onchange",
            "keyInterfaceName": "MathMLElement",
            "name": "onchange",
            "prop": true,
            "propName": "onchange",
            "readonly": false,
            "value": "event"
          },
          "onclick": {
            "attr": true,
            "attrName": "onclick",
            "keyInterfaceName": "MathMLElement",
            "name": "onclick",
            "prop": true,
            "propName": "onclick",
            "readonly": false,
            "value": "event"
          },
          "onclose": {
            "attr": true,
            "attrName": "onclose",
            "keyInterfaceName": "MathMLElement",
            "name": "onclose",
            "prop": true,
            "propName": "onclose",
            "readonly": false,
            "value": "event"
          },
          "oncommand": {
            "attr": true,
            "attrName": "oncommand",
            "keyInterfaceName": "MathMLElement",
            "name": "oncommand",
            "prop": true,
            "propName": "oncommand",
            "readonly": false,
            "value": "event"
          },
          "oncontentvisibilityautostatechange": {
            "attr": true,
            "attrName": "oncontentvisibilityautostatechange",
            "keyInterfaceName": "MathMLElement",
            "name": "oncontentvisibilityautostatechange",
            "prop": true,
            "propName": "oncontentvisibilityautostatechange",
            "readonly": false,
            "value": "event"
          },
          "oncontextlost": {
            "attr": true,
            "attrName": "oncontextlost",
            "keyInterfaceName": "MathMLElement",
            "name": "oncontextlost",
            "prop": true,
            "propName": "oncontextlost",
            "readonly": false,
            "value": "event"
          },
          "oncontextmenu": {
            "attr": true,
            "attrName": "oncontextmenu",
            "keyInterfaceName": "MathMLElement",
            "name": "oncontextmenu",
            "prop": true,
            "propName": "oncontextmenu",
            "readonly": false,
            "value": "event"
          },
          "oncontextrestored": {
            "attr": true,
            "attrName": "oncontextrestored",
            "keyInterfaceName": "MathMLElement",
            "name": "oncontextrestored",
            "prop": true,
            "propName": "oncontextrestored",
            "readonly": false,
            "value": "event"
          },
          "oncopy": {
            "attr": true,
            "attrName": "oncopy",
            "keyInterfaceName": "MathMLElement",
            "name": "oncopy",
            "prop": true,
            "propName": "oncopy",
            "readonly": false,
            "value": "event"
          },
          "oncuechange": {
            "attr": true,
            "attrName": "oncuechange",
            "keyInterfaceName": "MathMLElement",
            "name": "oncuechange",
            "prop": true,
            "propName": "oncuechange",
            "readonly": false,
            "value": "event"
          },
          "oncut": {
            "attr": true,
            "attrName": "oncut",
            "keyInterfaceName": "MathMLElement",
            "name": "oncut",
            "prop": true,
            "propName": "oncut",
            "readonly": false,
            "value": "event"
          },
          "ondblclick": {
            "attr": true,
            "attrName": "ondblclick",
            "keyInterfaceName": "MathMLElement",
            "name": "ondblclick",
            "prop": true,
            "propName": "ondblclick",
            "readonly": false,
            "value": "event"
          },
          "ondrag": {
            "attr": true,
            "attrName": "ondrag",
            "keyInterfaceName": "MathMLElement",
            "name": "ondrag",
            "prop": true,
            "propName": "ondrag",
            "readonly": false,
            "value": "event"
          },
          "ondragend": {
            "attr": true,
            "attrName": "ondragend",
            "keyInterfaceName": "MathMLElement",
            "name": "ondragend",
            "prop": true,
            "propName": "ondragend",
            "readonly": false,
            "value": "event"
          },
          "ondragenter": {
            "attr": true,
            "attrName": "ondragenter",
            "keyInterfaceName": "MathMLElement",
            "name": "ondragenter",
            "prop": true,
            "propName": "ondragenter",
            "readonly": false,
            "value": "event"
          },
          "ondragleave": {
            "attr": true,
            "attrName": "ondragleave",
            "keyInterfaceName": "MathMLElement",
            "name": "ondragleave",
            "prop": true,
            "propName": "ondragleave",
            "readonly": false,
            "value": "event"
          },
          "ondragover": {
            "attr": true,
            "attrName": "ondragover",
            "keyInterfaceName": "MathMLElement",
            "name": "ondragover",
            "prop": true,
            "propName": "ondragover",
            "readonly": false,
            "value": "event"
          },
          "ondragstart": {
            "attr": true,
            "attrName": "ondragstart",
            "keyInterfaceName": "MathMLElement",
            "name": "ondragstart",
            "prop": true,
            "propName": "ondragstart",
            "readonly": false,
            "value": "event"
          },
          "ondrop": {
            "attr": true,
            "attrName": "ondrop",
            "keyInterfaceName": "MathMLElement",
            "name": "ondrop",
            "prop": true,
            "propName": "ondrop",
            "readonly": false,
            "value": "event"
          },
          "ondurationchange": {
            "attr": true,
            "attrName": "ondurationchange",
            "keyInterfaceName": "MathMLElement",
            "name": "ondurationchange",
            "prop": true,
            "propName": "ondurationchange",
            "readonly": false,
            "value": "event"
          },
          "onemptied": {
            "attr": true,
            "attrName": "onemptied",
            "keyInterfaceName": "MathMLElement",
            "name": "onemptied",
            "prop": true,
            "propName": "onemptied",
            "readonly": false,
            "value": "event"
          },
          "onended": {
            "attr": true,
            "attrName": "onended",
            "keyInterfaceName": "MathMLElement",
            "name": "onended",
            "prop": true,
            "propName": "onended",
            "readonly": false,
            "value": "event"
          },
          "onerror": {
            "attr": true,
            "attrName": "onerror",
            "keyInterfaceName": "MathMLElement",
            "name": "onerror",
            "prop": true,
            "propName": "onerror",
            "readonly": false,
            "value": "event"
          },
          "onfocus": {
            "attr": true,
            "attrName": "onfocus",
            "keyInterfaceName": "MathMLElement",
            "name": "onfocus",
            "prop": true,
            "propName": "onfocus",
            "readonly": false,
            "value": "event"
          },
          "onformdata": {
            "attr": true,
            "attrName": "onformdata",
            "keyInterfaceName": "MathMLElement",
            "name": "onformdata",
            "prop": true,
            "propName": "onformdata",
            "readonly": false,
            "value": "event"
          },
          "ongotpointercapture": {
            "attr": true,
            "attrName": "ongotpointercapture",
            "keyInterfaceName": "MathMLElement",
            "name": "ongotpointercapture",
            "prop": true,
            "propName": "ongotpointercapture",
            "readonly": false,
            "value": "event"
          },
          "oninput": {
            "attr": true,
            "attrName": "oninput",
            "keyInterfaceName": "MathMLElement",
            "name": "oninput",
            "prop": true,
            "propName": "oninput",
            "readonly": false,
            "value": "event"
          },
          "oninvalid": {
            "attr": true,
            "attrName": "oninvalid",
            "keyInterfaceName": "MathMLElement",
            "name": "oninvalid",
            "prop": true,
            "propName": "oninvalid",
            "readonly": false,
            "value": "event"
          },
          "onkeydown": {
            "attr": true,
            "attrName": "onkeydown",
            "keyInterfaceName": "MathMLElement",
            "name": "onkeydown",
            "prop": true,
            "propName": "onkeydown",
            "readonly": false,
            "value": "event"
          },
          "onkeypress": {
            "attr": true,
            "attrName": "onkeypress",
            "keyInterfaceName": "MathMLElement",
            "name": "onkeypress",
            "prop": true,
            "propName": "onkeypress",
            "readonly": false,
            "value": "event"
          },
          "onkeyup": {
            "attr": true,
            "attrName": "onkeyup",
            "keyInterfaceName": "MathMLElement",
            "name": "onkeyup",
            "prop": true,
            "propName": "onkeyup",
            "readonly": false,
            "value": "event"
          },
          "onload": {
            "attr": true,
            "attrName": "onload",
            "keyInterfaceName": "MathMLElement",
            "name": "onload",
            "prop": true,
            "propName": "onload",
            "readonly": false,
            "value": "event"
          },
          "onloadeddata": {
            "attr": true,
            "attrName": "onloadeddata",
            "keyInterfaceName": "MathMLElement",
            "name": "onloadeddata",
            "prop": true,
            "propName": "onloadeddata",
            "readonly": false,
            "value": "event"
          },
          "onloadedmetadata": {
            "attr": true,
            "attrName": "onloadedmetadata",
            "keyInterfaceName": "MathMLElement",
            "name": "onloadedmetadata",
            "prop": true,
            "propName": "onloadedmetadata",
            "readonly": false,
            "value": "event"
          },
          "onloadstart": {
            "attr": true,
            "attrName": "onloadstart",
            "keyInterfaceName": "MathMLElement",
            "name": "onloadstart",
            "prop": true,
            "propName": "onloadstart",
            "readonly": false,
            "value": "event"
          },
          "onlostpointercapture": {
            "attr": true,
            "attrName": "onlostpointercapture",
            "keyInterfaceName": "MathMLElement",
            "name": "onlostpointercapture",
            "prop": true,
            "propName": "onlostpointercapture",
            "readonly": false,
            "value": "event"
          },
          "onmousedown": {
            "attr": true,
            "attrName": "onmousedown",
            "keyInterfaceName": "MathMLElement",
            "name": "onmousedown",
            "prop": true,
            "propName": "onmousedown",
            "readonly": false,
            "value": "event"
          },
          "onmouseenter": {
            "attr": true,
            "attrName": "onmouseenter",
            "keyInterfaceName": "MathMLElement",
            "name": "onmouseenter",
            "prop": true,
            "propName": "onmouseenter",
            "readonly": false,
            "value": "event"
          },
          "onmouseleave": {
            "attr": true,
            "attrName": "onmouseleave",
            "keyInterfaceName": "MathMLElement",
            "name": "onmouseleave",
            "prop": true,
            "propName": "onmouseleave",
            "readonly": false,
            "value": "event"
          },
          "onmousemove": {
            "attr": true,
            "attrName": "onmousemove",
            "keyInterfaceName": "MathMLElement",
            "name": "onmousemove",
            "prop": true,
            "propName": "onmousemove",
            "readonly": false,
            "value": "event"
          },
          "onmouseout": {
            "attr": true,
            "attrName": "onmouseout",
            "keyInterfaceName": "MathMLElement",
            "name": "onmouseout",
            "prop": true,
            "propName": "onmouseout",
            "readonly": false,
            "value": "event"
          },
          "onmouseover": {
            "attr": true,
            "attrName": "onmouseover",
            "keyInterfaceName": "MathMLElement",
            "name": "onmouseover",
            "prop": true,
            "propName": "onmouseover",
            "readonly": false,
            "value": "event"
          },
          "onmouseup": {
            "attr": true,
            "attrName": "onmouseup",
            "keyInterfaceName": "MathMLElement",
            "name": "onmouseup",
            "prop": true,
            "propName": "onmouseup",
            "readonly": false,
            "value": "event"
          },
          "onmousewheel": {
            "attr": true,
            "attrName": "onmousewheel",
            "keyInterfaceName": "MathMLElement",
            "name": "onmousewheel",
            "prop": true,
            "propName": "onmousewheel",
            "readonly": false,
            "value": "event"
          },
          "onpaste": {
            "attr": true,
            "attrName": "onpaste",
            "keyInterfaceName": "MathMLElement",
            "name": "onpaste",
            "prop": true,
            "propName": "onpaste",
            "readonly": false,
            "value": "event"
          },
          "onpause": {
            "attr": true,
            "attrName": "onpause",
            "keyInterfaceName": "MathMLElement",
            "name": "onpause",
            "prop": true,
            "propName": "onpause",
            "readonly": false,
            "value": "event"
          },
          "onplay": {
            "attr": true,
            "attrName": "onplay",
            "keyInterfaceName": "MathMLElement",
            "name": "onplay",
            "prop": true,
            "propName": "onplay",
            "readonly": false,
            "value": "event"
          },
          "onplaying": {
            "attr": true,
            "attrName": "onplaying",
            "keyInterfaceName": "MathMLElement",
            "name": "onplaying",
            "prop": true,
            "propName": "onplaying",
            "readonly": false,
            "value": "event"
          },
          "onpointercancel": {
            "attr": true,
            "attrName": "onpointercancel",
            "keyInterfaceName": "MathMLElement",
            "name": "onpointercancel",
            "prop": true,
            "propName": "onpointercancel",
            "readonly": false,
            "value": "event"
          },
          "onpointerdown": {
            "attr": true,
            "attrName": "onpointerdown",
            "keyInterfaceName": "MathMLElement",
            "name": "onpointerdown",
            "prop": true,
            "propName": "onpointerdown",
            "readonly": false,
            "value": "event"
          },
          "onpointerenter": {
            "attr": true,
            "attrName": "onpointerenter",
            "keyInterfaceName": "MathMLElement",
            "name": "onpointerenter",
            "prop": true,
            "propName": "onpointerenter",
            "readonly": false,
            "value": "event"
          },
          "onpointerleave": {
            "attr": true,
            "attrName": "onpointerleave",
            "keyInterfaceName": "MathMLElement",
            "name": "onpointerleave",
            "prop": true,
            "propName": "onpointerleave",
            "readonly": false,
            "value": "event"
          },
          "onpointermove": {
            "attr": true,
            "attrName": "onpointermove",
            "keyInterfaceName": "MathMLElement",
            "name": "onpointermove",
            "prop": true,
            "propName": "onpointermove",
            "readonly": false,
            "value": "event"
          },
          "onpointerout": {
            "attr": true,
            "attrName": "onpointerout",
            "keyInterfaceName": "MathMLElement",
            "name": "onpointerout",
            "prop": true,
            "propName": "onpointerout",
            "readonly": false,
            "value": "event"
          },
          "onpointerover": {
            "attr": true,
            "attrName": "onpointerover",
            "keyInterfaceName": "MathMLElement",
            "name": "onpointerover",
            "prop": true,
            "propName": "onpointerover",
            "readonly": false,
            "value": "event"
          },
          "onpointerrawupdate": {
            "attr": true,
            "attrName": "onpointerrawupdate",
            "keyInterfaceName": "MathMLElement",
            "name": "onpointerrawupdate",
            "prop": true,
            "propName": "onpointerrawupdate",
            "readonly": false,
            "value": "event"
          },
          "onpointerup": {
            "attr": true,
            "attrName": "onpointerup",
            "keyInterfaceName": "MathMLElement",
            "name": "onpointerup",
            "prop": true,
            "propName": "onpointerup",
            "readonly": false,
            "value": "event"
          },
          "onprogress": {
            "attr": true,
            "attrName": "onprogress",
            "keyInterfaceName": "MathMLElement",
            "name": "onprogress",
            "prop": true,
            "propName": "onprogress",
            "readonly": false,
            "value": "event"
          },
          "onratechange": {
            "attr": true,
            "attrName": "onratechange",
            "keyInterfaceName": "MathMLElement",
            "name": "onratechange",
            "prop": true,
            "propName": "onratechange",
            "readonly": false,
            "value": "event"
          },
          "onreset": {
            "attr": true,
            "attrName": "onreset",
            "keyInterfaceName": "MathMLElement",
            "name": "onreset",
            "prop": true,
            "propName": "onreset",
            "readonly": false,
            "value": "event"
          },
          "onresize": {
            "attr": true,
            "attrName": "onresize",
            "keyInterfaceName": "MathMLElement",
            "name": "onresize",
            "prop": true,
            "propName": "onresize",
            "readonly": false,
            "value": "event"
          },
          "onscroll": {
            "attr": true,
            "attrName": "onscroll",
            "keyInterfaceName": "MathMLElement",
            "name": "onscroll",
            "prop": true,
            "propName": "onscroll",
            "readonly": false,
            "value": "event"
          },
          "onscrollend": {
            "attr": true,
            "attrName": "onscrollend",
            "keyInterfaceName": "MathMLElement",
            "name": "onscrollend",
            "prop": true,
            "propName": "onscrollend",
            "readonly": false,
            "value": "event"
          },
          "onscrollsnapchange": {
            "attr": true,
            "attrName": "onscrollsnapchange",
            "keyInterfaceName": "MathMLElement",
            "name": "onscrollsnapchange",
            "prop": true,
            "propName": "onscrollsnapchange",
            "readonly": false,
            "value": "event"
          },
          "onscrollsnapchanging": {
            "attr": true,
            "attrName": "onscrollsnapchanging",
            "keyInterfaceName": "MathMLElement",
            "name": "onscrollsnapchanging",
            "prop": true,
            "propName": "onscrollsnapchanging",
            "readonly": false,
            "value": "event"
          },
          "onsecuritypolicyviolation": {
            "attr": true,
            "attrName": "onsecuritypolicyviolation",
            "keyInterfaceName": "MathMLElement",
            "name": "onsecuritypolicyviolation",
            "prop": true,
            "propName": "onsecuritypolicyviolation",
            "readonly": false,
            "value": "event"
          },
          "onseeked": {
            "attr": true,
            "attrName": "onseeked",
            "keyInterfaceName": "MathMLElement",
            "name": "onseeked",
            "prop": true,
            "propName": "onseeked",
            "readonly": false,
            "value": "event"
          },
          "onseeking": {
            "attr": true,
            "attrName": "onseeking",
            "keyInterfaceName": "MathMLElement",
            "name": "onseeking",
            "prop": true,
            "propName": "onseeking",
            "readonly": false,
            "value": "event"
          },
          "onselect": {
            "attr": true,
            "attrName": "onselect",
            "keyInterfaceName": "MathMLElement",
            "name": "onselect",
            "prop": true,
            "propName": "onselect",
            "readonly": false,
            "value": "event"
          },
          "onselectionchange": {
            "attr": true,
            "attrName": "onselectionchange",
            "keyInterfaceName": "MathMLElement",
            "name": "onselectionchange",
            "prop": true,
            "propName": "onselectionchange",
            "readonly": false,
            "value": "event"
          },
          "onselectstart": {
            "attr": true,
            "attrName": "onselectstart",
            "keyInterfaceName": "MathMLElement",
            "name": "onselectstart",
            "prop": true,
            "propName": "onselectstart",
            "readonly": false,
            "value": "event"
          },
          "onslotchange": {
            "attr": true,
            "attrName": "onslotchange",
            "keyInterfaceName": "MathMLElement",
            "name": "onslotchange",
            "prop": true,
            "propName": "onslotchange",
            "readonly": false,
            "value": "event"
          },
          "onstalled": {
            "attr": true,
            "attrName": "onstalled",
            "keyInterfaceName": "MathMLElement",
            "name": "onstalled",
            "prop": true,
            "propName": "onstalled",
            "readonly": false,
            "value": "event"
          },
          "onsubmit": {
            "attr": true,
            "attrName": "onsubmit",
            "keyInterfaceName": "MathMLElement",
            "name": "onsubmit",
            "prop": true,
            "propName": "onsubmit",
            "readonly": false,
            "value": "event"
          },
          "onsuspend": {
            "attr": true,
            "attrName": "onsuspend",
            "keyInterfaceName": "MathMLElement",
            "name": "onsuspend",
            "prop": true,
            "propName": "onsuspend",
            "readonly": false,
            "value": "event"
          },
          "ontimeupdate": {
            "attr": true,
            "attrName": "ontimeupdate",
            "keyInterfaceName": "MathMLElement",
            "name": "ontimeupdate",
            "prop": true,
            "propName": "ontimeupdate",
            "readonly": false,
            "value": "event"
          },
          "ontoggle": {
            "attr": true,
            "attrName": "ontoggle",
            "keyInterfaceName": "MathMLElement",
            "name": "ontoggle",
            "prop": true,
            "propName": "ontoggle",
            "readonly": false,
            "value": "event"
          },
          "ontransitioncancel": {
            "attr": true,
            "attrName": "ontransitioncancel",
            "keyInterfaceName": "MathMLElement",
            "name": "ontransitioncancel",
            "prop": true,
            "propName": "ontransitioncancel",
            "readonly": false,
            "value": "event"
          },
          "ontransitionend": {
            "attr": true,
            "attrName": "ontransitionend",
            "keyInterfaceName": "MathMLElement",
            "name": "ontransitionend",
            "prop": true,
            "propName": "ontransitionend",
            "readonly": false,
            "value": "event"
          },
          "ontransitionrun": {
            "attr": true,
            "attrName": "ontransitionrun",
            "keyInterfaceName": "MathMLElement",
            "name": "ontransitionrun",
            "prop": true,
            "propName": "ontransitionrun",
            "readonly": false,
            "value": "event"
          },
          "ontransitionstart": {
            "attr": true,
            "attrName": "ontransitionstart",
            "keyInterfaceName": "MathMLElement",
            "name": "ontransitionstart",
            "prop": true,
            "propName": "ontransitionstart",
            "readonly": false,
            "value": "event"
          },
          "onvolumechange": {
            "attr": true,
            "attrName": "onvolumechange",
            "keyInterfaceName": "MathMLElement",
            "name": "onvolumechange",
            "prop": true,
            "propName": "onvolumechange",
            "readonly": false,
            "value": "event"
          },
          "onwaiting": {
            "attr": true,
            "attrName": "onwaiting",
            "keyInterfaceName": "MathMLElement",
            "name": "onwaiting",
            "prop": true,
            "propName": "onwaiting",
            "readonly": false,
            "value": "event"
          },
          "onwebkitanimationend": {
            "attr": true,
            "attrName": "onwebkitanimationend",
            "keyInterfaceName": "MathMLElement",
            "name": "onwebkitanimationend",
            "prop": true,
            "propName": "onwebkitanimationend",
            "readonly": false,
            "value": "event"
          },
          "onwebkitanimationiteration": {
            "attr": true,
            "attrName": "onwebkitanimationiteration",
            "keyInterfaceName": "MathMLElement",
            "name": "onwebkitanimationiteration",
            "prop": true,
            "propName": "onwebkitanimationiteration",
            "readonly": false,
            "value": "event"
          },
          "onwebkitanimationstart": {
            "attr": true,
            "attrName": "onwebkitanimationstart",
            "keyInterfaceName": "MathMLElement",
            "name": "onwebkitanimationstart",
            "prop": true,
            "propName": "onwebkitanimationstart",
            "readonly": false,
            "value": "event"
          },
          "onwebkittransitionend": {
            "attr": true,
            "attrName": "onwebkittransitionend",
            "keyInterfaceName": "MathMLElement",
            "name": "onwebkittransitionend",
            "prop": true,
            "propName": "onwebkittransitionend",
            "readonly": false,
            "value": "event"
          },
          "onwheel": {
            "attr": true,
            "attrName": "onwheel",
            "keyInterfaceName": "MathMLElement",
            "name": "onwheel",
            "prop": true,
            "propName": "onwheel",
            "readonly": false,
            "value": "event"
          },
          "style": {
            "attr": true,
            "attrName": "style",
            "keyInterfaceName": "MathMLElement",
            "name": "style",
            "prop": true,
            "propName": "style",
            "readonly": false,
            "value": "string"
          },
          "tabIndex": {
            "attr": false,
            "attrName": "tabindex",
            "keyInterfaceName": "MathMLElement",
            "name": "tabIndex",
            "prop": true,
            "propName": "tabIndex",
            "readonly": false,
            "value": "number"
          },
          "tabindex": {
            "attr": true,
            "attrName": "tabindex",
            "keyInterfaceName": "MathMLElement",
            "name": "tabindex",
            "prop": false,
            "propName": "tabIndex",
            "readonly": false,
            "value": "number"
          }
        },
        "readonly": [
          "MathMLElement.attributeStyleMap",
          "MathMLElement.dataset"
        ],
        "tagInterfaceName": "MathMLElement"
      },
      "svgelement": {
        "booleans": [
          "SVGElement.autofocus"
        ],
        "events": [
          "SVGElement.onabort",
          "SVGElement.onanimationend",
          "SVGElement.onanimationiteration",
          "SVGElement.onanimationstart",
          "SVGElement.onauxclick",
          "SVGElement.onbeforeinput",
          "SVGElement.onbeforematch",
          "SVGElement.onbeforetoggle",
          "SVGElement.onbeforexrselect",
          "SVGElement.onblur",
          "SVGElement.oncancel",
          "SVGElement.oncanplay",
          "SVGElement.oncanplaythrough",
          "SVGElement.onchange",
          "SVGElement.onclick",
          "SVGElement.onclose",
          "SVGElement.oncommand",
          "SVGElement.oncontentvisibilityautostatechange",
          "SVGElement.oncontextlost",
          "SVGElement.oncontextmenu",
          "SVGElement.oncontextrestored",
          "SVGElement.oncopy",
          "SVGElement.oncuechange",
          "SVGElement.oncut",
          "SVGElement.ondblclick",
          "SVGElement.ondrag",
          "SVGElement.ondragend",
          "SVGElement.ondragenter",
          "SVGElement.ondragleave",
          "SVGElement.ondragover",
          "SVGElement.ondragstart",
          "SVGElement.ondrop",
          "SVGElement.ondurationchange",
          "SVGElement.onemptied",
          "SVGElement.onended",
          "SVGElement.onerror",
          "SVGElement.onfocus",
          "SVGElement.onformdata",
          "SVGElement.ongotpointercapture",
          "SVGElement.oninput",
          "SVGElement.oninvalid",
          "SVGElement.onkeydown",
          "SVGElement.onkeypress",
          "SVGElement.onkeyup",
          "SVGElement.onload",
          "SVGElement.onloadeddata",
          "SVGElement.onloadedmetadata",
          "SVGElement.onloadstart",
          "SVGElement.onlostpointercapture",
          "SVGElement.onmousedown",
          "SVGElement.onmouseenter",
          "SVGElement.onmouseleave",
          "SVGElement.onmousemove",
          "SVGElement.onmouseout",
          "SVGElement.onmouseover",
          "SVGElement.onmouseup",
          "SVGElement.onmousewheel",
          "SVGElement.onpaste",
          "SVGElement.onpause",
          "SVGElement.onplay",
          "SVGElement.onplaying",
          "SVGElement.onpointercancel",
          "SVGElement.onpointerdown",
          "SVGElement.onpointerenter",
          "SVGElement.onpointerleave",
          "SVGElement.onpointermove",
          "SVGElement.onpointerout",
          "SVGElement.onpointerover",
          "SVGElement.onpointerrawupdate",
          "SVGElement.onpointerup",
          "SVGElement.onprogress",
          "SVGElement.onratechange",
          "SVGElement.onreset",
          "SVGElement.onresize",
          "SVGElement.onscroll",
          "SVGElement.onscrollend",
          "SVGElement.onscrollsnapchange",
          "SVGElement.onscrollsnapchanging",
          "SVGElement.onsecuritypolicyviolation",
          "SVGElement.onseeked",
          "SVGElement.onseeking",
          "SVGElement.onselect",
          "SVGElement.onselectionchange",
          "SVGElement.onselectstart",
          "SVGElement.onslotchange",
          "SVGElement.onstalled",
          "SVGElement.onsubmit",
          "SVGElement.onsuspend",
          "SVGElement.ontimeupdate",
          "SVGElement.ontoggle",
          "SVGElement.ontransitioncancel",
          "SVGElement.ontransitionend",
          "SVGElement.ontransitionrun",
          "SVGElement.ontransitionstart",
          "SVGElement.onvolumechange",
          "SVGElement.onwaiting",
          "SVGElement.onwebkitanimationend",
          "SVGElement.onwebkitanimationiteration",
          "SVGElement.onwebkitanimationstart",
          "SVGElement.onwebkittransitionend",
          "SVGElement.onwheel"
        ],
        "keys": {
          "autofocus": {
            "attr": true,
            "attrName": "autofocus",
            "keyInterfaceName": "SVGElement",
            "name": "autofocus",
            "prop": true,
            "propName": "autofocus",
            "readonly": false,
            "value": "boolean"
          },
          "nonce": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "SVGElement",
            "name": "nonce",
            "prop": true,
            "propName": "nonce",
            "readonly": false,
            "value": "string"
          },
          "onabort": {
            "attr": true,
            "attrName": "onabort",
            "keyInterfaceName": "SVGElement",
            "name": "onabort",
            "prop": true,
            "propName": "onabort",
            "readonly": false,
            "value": "event"
          },
          "onanimationend": {
            "attr": true,
            "attrName": "onanimationend",
            "keyInterfaceName": "SVGElement",
            "name": "onanimationend",
            "prop": true,
            "propName": "onanimationend",
            "readonly": false,
            "value": "event"
          },
          "onanimationiteration": {
            "attr": true,
            "attrName": "onanimationiteration",
            "keyInterfaceName": "SVGElement",
            "name": "onanimationiteration",
            "prop": true,
            "propName": "onanimationiteration",
            "readonly": false,
            "value": "event"
          },
          "onanimationstart": {
            "attr": true,
            "attrName": "onanimationstart",
            "keyInterfaceName": "SVGElement",
            "name": "onanimationstart",
            "prop": true,
            "propName": "onanimationstart",
            "readonly": false,
            "value": "event"
          },
          "onauxclick": {
            "attr": true,
            "attrName": "onauxclick",
            "keyInterfaceName": "SVGElement",
            "name": "onauxclick",
            "prop": true,
            "propName": "onauxclick",
            "readonly": false,
            "value": "event"
          },
          "onbeforeinput": {
            "attr": true,
            "attrName": "onbeforeinput",
            "keyInterfaceName": "SVGElement",
            "name": "onbeforeinput",
            "prop": true,
            "propName": "onbeforeinput",
            "readonly": false,
            "value": "event"
          },
          "onbeforematch": {
            "attr": true,
            "attrName": "onbeforematch",
            "keyInterfaceName": "SVGElement",
            "name": "onbeforematch",
            "prop": true,
            "propName": "onbeforematch",
            "readonly": false,
            "value": "event"
          },
          "onbeforetoggle": {
            "attr": true,
            "attrName": "onbeforetoggle",
            "keyInterfaceName": "SVGElement",
            "name": "onbeforetoggle",
            "prop": true,
            "propName": "onbeforetoggle",
            "readonly": false,
            "value": "event"
          },
          "onbeforexrselect": {
            "attr": true,
            "attrName": "onbeforexrselect",
            "keyInterfaceName": "SVGElement",
            "name": "onbeforexrselect",
            "prop": true,
            "propName": "onbeforexrselect",
            "readonly": false,
            "value": "event"
          },
          "onblur": {
            "attr": true,
            "attrName": "onblur",
            "keyInterfaceName": "SVGElement",
            "name": "onblur",
            "prop": true,
            "propName": "onblur",
            "readonly": false,
            "value": "event"
          },
          "oncancel": {
            "attr": true,
            "attrName": "oncancel",
            "keyInterfaceName": "SVGElement",
            "name": "oncancel",
            "prop": true,
            "propName": "oncancel",
            "readonly": false,
            "value": "event"
          },
          "oncanplay": {
            "attr": true,
            "attrName": "oncanplay",
            "keyInterfaceName": "SVGElement",
            "name": "oncanplay",
            "prop": true,
            "propName": "oncanplay",
            "readonly": false,
            "value": "event"
          },
          "oncanplaythrough": {
            "attr": true,
            "attrName": "oncanplaythrough",
            "keyInterfaceName": "SVGElement",
            "name": "oncanplaythrough",
            "prop": true,
            "propName": "oncanplaythrough",
            "readonly": false,
            "value": "event"
          },
          "onchange": {
            "attr": true,
            "attrName": "onchange",
            "keyInterfaceName": "SVGElement",
            "name": "onchange",
            "prop": true,
            "propName": "onchange",
            "readonly": false,
            "value": "event"
          },
          "onclick": {
            "attr": true,
            "attrName": "onclick",
            "keyInterfaceName": "SVGElement",
            "name": "onclick",
            "prop": true,
            "propName": "onclick",
            "readonly": false,
            "value": "event"
          },
          "onclose": {
            "attr": true,
            "attrName": "onclose",
            "keyInterfaceName": "SVGElement",
            "name": "onclose",
            "prop": true,
            "propName": "onclose",
            "readonly": false,
            "value": "event"
          },
          "oncommand": {
            "attr": true,
            "attrName": "oncommand",
            "keyInterfaceName": "SVGElement",
            "name": "oncommand",
            "prop": true,
            "propName": "oncommand",
            "readonly": false,
            "value": "event"
          },
          "oncontentvisibilityautostatechange": {
            "attr": true,
            "attrName": "oncontentvisibilityautostatechange",
            "keyInterfaceName": "SVGElement",
            "name": "oncontentvisibilityautostatechange",
            "prop": true,
            "propName": "oncontentvisibilityautostatechange",
            "readonly": false,
            "value": "event"
          },
          "oncontextlost": {
            "attr": true,
            "attrName": "oncontextlost",
            "keyInterfaceName": "SVGElement",
            "name": "oncontextlost",
            "prop": true,
            "propName": "oncontextlost",
            "readonly": false,
            "value": "event"
          },
          "oncontextmenu": {
            "attr": true,
            "attrName": "oncontextmenu",
            "keyInterfaceName": "SVGElement",
            "name": "oncontextmenu",
            "prop": true,
            "propName": "oncontextmenu",
            "readonly": false,
            "value": "event"
          },
          "oncontextrestored": {
            "attr": true,
            "attrName": "oncontextrestored",
            "keyInterfaceName": "SVGElement",
            "name": "oncontextrestored",
            "prop": true,
            "propName": "oncontextrestored",
            "readonly": false,
            "value": "event"
          },
          "oncopy": {
            "attr": true,
            "attrName": "oncopy",
            "keyInterfaceName": "SVGElement",
            "name": "oncopy",
            "prop": true,
            "propName": "oncopy",
            "readonly": false,
            "value": "event"
          },
          "oncuechange": {
            "attr": true,
            "attrName": "oncuechange",
            "keyInterfaceName": "SVGElement",
            "name": "oncuechange",
            "prop": true,
            "propName": "oncuechange",
            "readonly": false,
            "value": "event"
          },
          "oncut": {
            "attr": true,
            "attrName": "oncut",
            "keyInterfaceName": "SVGElement",
            "name": "oncut",
            "prop": true,
            "propName": "oncut",
            "readonly": false,
            "value": "event"
          },
          "ondblclick": {
            "attr": true,
            "attrName": "ondblclick",
            "keyInterfaceName": "SVGElement",
            "name": "ondblclick",
            "prop": true,
            "propName": "ondblclick",
            "readonly": false,
            "value": "event"
          },
          "ondrag": {
            "attr": true,
            "attrName": "ondrag",
            "keyInterfaceName": "SVGElement",
            "name": "ondrag",
            "prop": true,
            "propName": "ondrag",
            "readonly": false,
            "value": "event"
          },
          "ondragend": {
            "attr": true,
            "attrName": "ondragend",
            "keyInterfaceName": "SVGElement",
            "name": "ondragend",
            "prop": true,
            "propName": "ondragend",
            "readonly": false,
            "value": "event"
          },
          "ondragenter": {
            "attr": true,
            "attrName": "ondragenter",
            "keyInterfaceName": "SVGElement",
            "name": "ondragenter",
            "prop": true,
            "propName": "ondragenter",
            "readonly": false,
            "value": "event"
          },
          "ondragleave": {
            "attr": true,
            "attrName": "ondragleave",
            "keyInterfaceName": "SVGElement",
            "name": "ondragleave",
            "prop": true,
            "propName": "ondragleave",
            "readonly": false,
            "value": "event"
          },
          "ondragover": {
            "attr": true,
            "attrName": "ondragover",
            "keyInterfaceName": "SVGElement",
            "name": "ondragover",
            "prop": true,
            "propName": "ondragover",
            "readonly": false,
            "value": "event"
          },
          "ondragstart": {
            "attr": true,
            "attrName": "ondragstart",
            "keyInterfaceName": "SVGElement",
            "name": "ondragstart",
            "prop": true,
            "propName": "ondragstart",
            "readonly": false,
            "value": "event"
          },
          "ondrop": {
            "attr": true,
            "attrName": "ondrop",
            "keyInterfaceName": "SVGElement",
            "name": "ondrop",
            "prop": true,
            "propName": "ondrop",
            "readonly": false,
            "value": "event"
          },
          "ondurationchange": {
            "attr": true,
            "attrName": "ondurationchange",
            "keyInterfaceName": "SVGElement",
            "name": "ondurationchange",
            "prop": true,
            "propName": "ondurationchange",
            "readonly": false,
            "value": "event"
          },
          "onemptied": {
            "attr": true,
            "attrName": "onemptied",
            "keyInterfaceName": "SVGElement",
            "name": "onemptied",
            "prop": true,
            "propName": "onemptied",
            "readonly": false,
            "value": "event"
          },
          "onended": {
            "attr": true,
            "attrName": "onended",
            "keyInterfaceName": "SVGElement",
            "name": "onended",
            "prop": true,
            "propName": "onended",
            "readonly": false,
            "value": "event"
          },
          "onerror": {
            "attr": true,
            "attrName": "onerror",
            "keyInterfaceName": "SVGElement",
            "name": "onerror",
            "prop": true,
            "propName": "onerror",
            "readonly": false,
            "value": "event"
          },
          "onfocus": {
            "attr": true,
            "attrName": "onfocus",
            "keyInterfaceName": "SVGElement",
            "name": "onfocus",
            "prop": true,
            "propName": "onfocus",
            "readonly": false,
            "value": "event"
          },
          "onformdata": {
            "attr": true,
            "attrName": "onformdata",
            "keyInterfaceName": "SVGElement",
            "name": "onformdata",
            "prop": true,
            "propName": "onformdata",
            "readonly": false,
            "value": "event"
          },
          "ongotpointercapture": {
            "attr": true,
            "attrName": "ongotpointercapture",
            "keyInterfaceName": "SVGElement",
            "name": "ongotpointercapture",
            "prop": true,
            "propName": "ongotpointercapture",
            "readonly": false,
            "value": "event"
          },
          "oninput": {
            "attr": true,
            "attrName": "oninput",
            "keyInterfaceName": "SVGElement",
            "name": "oninput",
            "prop": true,
            "propName": "oninput",
            "readonly": false,
            "value": "event"
          },
          "oninvalid": {
            "attr": true,
            "attrName": "oninvalid",
            "keyInterfaceName": "SVGElement",
            "name": "oninvalid",
            "prop": true,
            "propName": "oninvalid",
            "readonly": false,
            "value": "event"
          },
          "onkeydown": {
            "attr": true,
            "attrName": "onkeydown",
            "keyInterfaceName": "SVGElement",
            "name": "onkeydown",
            "prop": true,
            "propName": "onkeydown",
            "readonly": false,
            "value": "event"
          },
          "onkeypress": {
            "attr": true,
            "attrName": "onkeypress",
            "keyInterfaceName": "SVGElement",
            "name": "onkeypress",
            "prop": true,
            "propName": "onkeypress",
            "readonly": false,
            "value": "event"
          },
          "onkeyup": {
            "attr": true,
            "attrName": "onkeyup",
            "keyInterfaceName": "SVGElement",
            "name": "onkeyup",
            "prop": true,
            "propName": "onkeyup",
            "readonly": false,
            "value": "event"
          },
          "onload": {
            "attr": true,
            "attrName": "onload",
            "keyInterfaceName": "SVGElement",
            "name": "onload",
            "prop": true,
            "propName": "onload",
            "readonly": false,
            "value": "event"
          },
          "onloadeddata": {
            "attr": true,
            "attrName": "onloadeddata",
            "keyInterfaceName": "SVGElement",
            "name": "onloadeddata",
            "prop": true,
            "propName": "onloadeddata",
            "readonly": false,
            "value": "event"
          },
          "onloadedmetadata": {
            "attr": true,
            "attrName": "onloadedmetadata",
            "keyInterfaceName": "SVGElement",
            "name": "onloadedmetadata",
            "prop": true,
            "propName": "onloadedmetadata",
            "readonly": false,
            "value": "event"
          },
          "onloadstart": {
            "attr": true,
            "attrName": "onloadstart",
            "keyInterfaceName": "SVGElement",
            "name": "onloadstart",
            "prop": true,
            "propName": "onloadstart",
            "readonly": false,
            "value": "event"
          },
          "onlostpointercapture": {
            "attr": true,
            "attrName": "onlostpointercapture",
            "keyInterfaceName": "SVGElement",
            "name": "onlostpointercapture",
            "prop": true,
            "propName": "onlostpointercapture",
            "readonly": false,
            "value": "event"
          },
          "onmousedown": {
            "attr": true,
            "attrName": "onmousedown",
            "keyInterfaceName": "SVGElement",
            "name": "onmousedown",
            "prop": true,
            "propName": "onmousedown",
            "readonly": false,
            "value": "event"
          },
          "onmouseenter": {
            "attr": true,
            "attrName": "onmouseenter",
            "keyInterfaceName": "SVGElement",
            "name": "onmouseenter",
            "prop": true,
            "propName": "onmouseenter",
            "readonly": false,
            "value": "event"
          },
          "onmouseleave": {
            "attr": true,
            "attrName": "onmouseleave",
            "keyInterfaceName": "SVGElement",
            "name": "onmouseleave",
            "prop": true,
            "propName": "onmouseleave",
            "readonly": false,
            "value": "event"
          },
          "onmousemove": {
            "attr": true,
            "attrName": "onmousemove",
            "keyInterfaceName": "SVGElement",
            "name": "onmousemove",
            "prop": true,
            "propName": "onmousemove",
            "readonly": false,
            "value": "event"
          },
          "onmouseout": {
            "attr": true,
            "attrName": "onmouseout",
            "keyInterfaceName": "SVGElement",
            "name": "onmouseout",
            "prop": true,
            "propName": "onmouseout",
            "readonly": false,
            "value": "event"
          },
          "onmouseover": {
            "attr": true,
            "attrName": "onmouseover",
            "keyInterfaceName": "SVGElement",
            "name": "onmouseover",
            "prop": true,
            "propName": "onmouseover",
            "readonly": false,
            "value": "event"
          },
          "onmouseup": {
            "attr": true,
            "attrName": "onmouseup",
            "keyInterfaceName": "SVGElement",
            "name": "onmouseup",
            "prop": true,
            "propName": "onmouseup",
            "readonly": false,
            "value": "event"
          },
          "onmousewheel": {
            "attr": true,
            "attrName": "onmousewheel",
            "keyInterfaceName": "SVGElement",
            "name": "onmousewheel",
            "prop": true,
            "propName": "onmousewheel",
            "readonly": false,
            "value": "event"
          },
          "onpaste": {
            "attr": true,
            "attrName": "onpaste",
            "keyInterfaceName": "SVGElement",
            "name": "onpaste",
            "prop": true,
            "propName": "onpaste",
            "readonly": false,
            "value": "event"
          },
          "onpause": {
            "attr": true,
            "attrName": "onpause",
            "keyInterfaceName": "SVGElement",
            "name": "onpause",
            "prop": true,
            "propName": "onpause",
            "readonly": false,
            "value": "event"
          },
          "onplay": {
            "attr": true,
            "attrName": "onplay",
            "keyInterfaceName": "SVGElement",
            "name": "onplay",
            "prop": true,
            "propName": "onplay",
            "readonly": false,
            "value": "event"
          },
          "onplaying": {
            "attr": true,
            "attrName": "onplaying",
            "keyInterfaceName": "SVGElement",
            "name": "onplaying",
            "prop": true,
            "propName": "onplaying",
            "readonly": false,
            "value": "event"
          },
          "onpointercancel": {
            "attr": true,
            "attrName": "onpointercancel",
            "keyInterfaceName": "SVGElement",
            "name": "onpointercancel",
            "prop": true,
            "propName": "onpointercancel",
            "readonly": false,
            "value": "event"
          },
          "onpointerdown": {
            "attr": true,
            "attrName": "onpointerdown",
            "keyInterfaceName": "SVGElement",
            "name": "onpointerdown",
            "prop": true,
            "propName": "onpointerdown",
            "readonly": false,
            "value": "event"
          },
          "onpointerenter": {
            "attr": true,
            "attrName": "onpointerenter",
            "keyInterfaceName": "SVGElement",
            "name": "onpointerenter",
            "prop": true,
            "propName": "onpointerenter",
            "readonly": false,
            "value": "event"
          },
          "onpointerleave": {
            "attr": true,
            "attrName": "onpointerleave",
            "keyInterfaceName": "SVGElement",
            "name": "onpointerleave",
            "prop": true,
            "propName": "onpointerleave",
            "readonly": false,
            "value": "event"
          },
          "onpointermove": {
            "attr": true,
            "attrName": "onpointermove",
            "keyInterfaceName": "SVGElement",
            "name": "onpointermove",
            "prop": true,
            "propName": "onpointermove",
            "readonly": false,
            "value": "event"
          },
          "onpointerout": {
            "attr": true,
            "attrName": "onpointerout",
            "keyInterfaceName": "SVGElement",
            "name": "onpointerout",
            "prop": true,
            "propName": "onpointerout",
            "readonly": false,
            "value": "event"
          },
          "onpointerover": {
            "attr": true,
            "attrName": "onpointerover",
            "keyInterfaceName": "SVGElement",
            "name": "onpointerover",
            "prop": true,
            "propName": "onpointerover",
            "readonly": false,
            "value": "event"
          },
          "onpointerrawupdate": {
            "attr": true,
            "attrName": "onpointerrawupdate",
            "keyInterfaceName": "SVGElement",
            "name": "onpointerrawupdate",
            "prop": true,
            "propName": "onpointerrawupdate",
            "readonly": false,
            "value": "event"
          },
          "onpointerup": {
            "attr": true,
            "attrName": "onpointerup",
            "keyInterfaceName": "SVGElement",
            "name": "onpointerup",
            "prop": true,
            "propName": "onpointerup",
            "readonly": false,
            "value": "event"
          },
          "onprogress": {
            "attr": true,
            "attrName": "onprogress",
            "keyInterfaceName": "SVGElement",
            "name": "onprogress",
            "prop": true,
            "propName": "onprogress",
            "readonly": false,
            "value": "event"
          },
          "onratechange": {
            "attr": true,
            "attrName": "onratechange",
            "keyInterfaceName": "SVGElement",
            "name": "onratechange",
            "prop": true,
            "propName": "onratechange",
            "readonly": false,
            "value": "event"
          },
          "onreset": {
            "attr": true,
            "attrName": "onreset",
            "keyInterfaceName": "SVGElement",
            "name": "onreset",
            "prop": true,
            "propName": "onreset",
            "readonly": false,
            "value": "event"
          },
          "onresize": {
            "attr": true,
            "attrName": "onresize",
            "keyInterfaceName": "SVGElement",
            "name": "onresize",
            "prop": true,
            "propName": "onresize",
            "readonly": false,
            "value": "event"
          },
          "onscroll": {
            "attr": true,
            "attrName": "onscroll",
            "keyInterfaceName": "SVGElement",
            "name": "onscroll",
            "prop": true,
            "propName": "onscroll",
            "readonly": false,
            "value": "event"
          },
          "onscrollend": {
            "attr": true,
            "attrName": "onscrollend",
            "keyInterfaceName": "SVGElement",
            "name": "onscrollend",
            "prop": true,
            "propName": "onscrollend",
            "readonly": false,
            "value": "event"
          },
          "onscrollsnapchange": {
            "attr": true,
            "attrName": "onscrollsnapchange",
            "keyInterfaceName": "SVGElement",
            "name": "onscrollsnapchange",
            "prop": true,
            "propName": "onscrollsnapchange",
            "readonly": false,
            "value": "event"
          },
          "onscrollsnapchanging": {
            "attr": true,
            "attrName": "onscrollsnapchanging",
            "keyInterfaceName": "SVGElement",
            "name": "onscrollsnapchanging",
            "prop": true,
            "propName": "onscrollsnapchanging",
            "readonly": false,
            "value": "event"
          },
          "onsecuritypolicyviolation": {
            "attr": true,
            "attrName": "onsecuritypolicyviolation",
            "keyInterfaceName": "SVGElement",
            "name": "onsecuritypolicyviolation",
            "prop": true,
            "propName": "onsecuritypolicyviolation",
            "readonly": false,
            "value": "event"
          },
          "onseeked": {
            "attr": true,
            "attrName": "onseeked",
            "keyInterfaceName": "SVGElement",
            "name": "onseeked",
            "prop": true,
            "propName": "onseeked",
            "readonly": false,
            "value": "event"
          },
          "onseeking": {
            "attr": true,
            "attrName": "onseeking",
            "keyInterfaceName": "SVGElement",
            "name": "onseeking",
            "prop": true,
            "propName": "onseeking",
            "readonly": false,
            "value": "event"
          },
          "onselect": {
            "attr": true,
            "attrName": "onselect",
            "keyInterfaceName": "SVGElement",
            "name": "onselect",
            "prop": true,
            "propName": "onselect",
            "readonly": false,
            "value": "event"
          },
          "onselectionchange": {
            "attr": true,
            "attrName": "onselectionchange",
            "keyInterfaceName": "SVGElement",
            "name": "onselectionchange",
            "prop": true,
            "propName": "onselectionchange",
            "readonly": false,
            "value": "event"
          },
          "onselectstart": {
            "attr": true,
            "attrName": "onselectstart",
            "keyInterfaceName": "SVGElement",
            "name": "onselectstart",
            "prop": true,
            "propName": "onselectstart",
            "readonly": false,
            "value": "event"
          },
          "onslotchange": {
            "attr": true,
            "attrName": "onslotchange",
            "keyInterfaceName": "SVGElement",
            "name": "onslotchange",
            "prop": true,
            "propName": "onslotchange",
            "readonly": false,
            "value": "event"
          },
          "onstalled": {
            "attr": true,
            "attrName": "onstalled",
            "keyInterfaceName": "SVGElement",
            "name": "onstalled",
            "prop": true,
            "propName": "onstalled",
            "readonly": false,
            "value": "event"
          },
          "onsubmit": {
            "attr": true,
            "attrName": "onsubmit",
            "keyInterfaceName": "SVGElement",
            "name": "onsubmit",
            "prop": true,
            "propName": "onsubmit",
            "readonly": false,
            "value": "event"
          },
          "onsuspend": {
            "attr": true,
            "attrName": "onsuspend",
            "keyInterfaceName": "SVGElement",
            "name": "onsuspend",
            "prop": true,
            "propName": "onsuspend",
            "readonly": false,
            "value": "event"
          },
          "ontimeupdate": {
            "attr": true,
            "attrName": "ontimeupdate",
            "keyInterfaceName": "SVGElement",
            "name": "ontimeupdate",
            "prop": true,
            "propName": "ontimeupdate",
            "readonly": false,
            "value": "event"
          },
          "ontoggle": {
            "attr": true,
            "attrName": "ontoggle",
            "keyInterfaceName": "SVGElement",
            "name": "ontoggle",
            "prop": true,
            "propName": "ontoggle",
            "readonly": false,
            "value": "event"
          },
          "ontransitioncancel": {
            "attr": true,
            "attrName": "ontransitioncancel",
            "keyInterfaceName": "SVGElement",
            "name": "ontransitioncancel",
            "prop": true,
            "propName": "ontransitioncancel",
            "readonly": false,
            "value": "event"
          },
          "ontransitionend": {
            "attr": true,
            "attrName": "ontransitionend",
            "keyInterfaceName": "SVGElement",
            "name": "ontransitionend",
            "prop": true,
            "propName": "ontransitionend",
            "readonly": false,
            "value": "event"
          },
          "ontransitionrun": {
            "attr": true,
            "attrName": "ontransitionrun",
            "keyInterfaceName": "SVGElement",
            "name": "ontransitionrun",
            "prop": true,
            "propName": "ontransitionrun",
            "readonly": false,
            "value": "event"
          },
          "ontransitionstart": {
            "attr": true,
            "attrName": "ontransitionstart",
            "keyInterfaceName": "SVGElement",
            "name": "ontransitionstart",
            "prop": true,
            "propName": "ontransitionstart",
            "readonly": false,
            "value": "event"
          },
          "onvolumechange": {
            "attr": true,
            "attrName": "onvolumechange",
            "keyInterfaceName": "SVGElement",
            "name": "onvolumechange",
            "prop": true,
            "propName": "onvolumechange",
            "readonly": false,
            "value": "event"
          },
          "onwaiting": {
            "attr": true,
            "attrName": "onwaiting",
            "keyInterfaceName": "SVGElement",
            "name": "onwaiting",
            "prop": true,
            "propName": "onwaiting",
            "readonly": false,
            "value": "event"
          },
          "onwebkitanimationend": {
            "attr": true,
            "attrName": "onwebkitanimationend",
            "keyInterfaceName": "SVGElement",
            "name": "onwebkitanimationend",
            "prop": true,
            "propName": "onwebkitanimationend",
            "readonly": false,
            "value": "event"
          },
          "onwebkitanimationiteration": {
            "attr": true,
            "attrName": "onwebkitanimationiteration",
            "keyInterfaceName": "SVGElement",
            "name": "onwebkitanimationiteration",
            "prop": true,
            "propName": "onwebkitanimationiteration",
            "readonly": false,
            "value": "event"
          },
          "onwebkitanimationstart": {
            "attr": true,
            "attrName": "onwebkitanimationstart",
            "keyInterfaceName": "SVGElement",
            "name": "onwebkitanimationstart",
            "prop": true,
            "propName": "onwebkitanimationstart",
            "readonly": false,
            "value": "event"
          },
          "onwebkittransitionend": {
            "attr": true,
            "attrName": "onwebkittransitionend",
            "keyInterfaceName": "SVGElement",
            "name": "onwebkittransitionend",
            "prop": true,
            "propName": "onwebkittransitionend",
            "readonly": false,
            "value": "event"
          },
          "onwheel": {
            "attr": true,
            "attrName": "onwheel",
            "keyInterfaceName": "SVGElement",
            "name": "onwheel",
            "prop": true,
            "propName": "onwheel",
            "readonly": false,
            "value": "event"
          },
          "style": {
            "attr": true,
            "attrName": "style",
            "keyInterfaceName": "SVGElement",
            "name": "style",
            "prop": true,
            "propName": "style",
            "readonly": false,
            "value": "string"
          },
          "tabIndex": {
            "attr": false,
            "attrName": "tabindex",
            "keyInterfaceName": "SVGElement",
            "name": "tabIndex",
            "prop": true,
            "propName": "tabIndex",
            "readonly": false,
            "value": "number"
          },
          "tabindex": {
            "attr": true,
            "attrName": "tabindex",
            "keyInterfaceName": "SVGElement",
            "name": "tabindex",
            "prop": false,
            "propName": "tabIndex",
            "readonly": false,
            "value": "number"
          }
        },
        "readonly": [
          "SVGElement.attributeStyleMap",
          "SVGElement.className",
          "SVGElement.dataset",
          "SVGElement.ownerSVGElement",
          "SVGElement.viewportElement"
        ],
        "tagInterfaceName": "SVGElement"
      }
    },
    "math": {
      "annotation": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "MathMLElement"
      },
      "annotation-xml": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "MathMLElement"
      },
      "maction": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "MathMLElement"
      },
      "math": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "MathMLElement"
      },
      "menclose": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "MathMLElement"
      },
      "merror": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "MathMLElement"
      },
      "mfenced": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "MathMLElement"
      },
      "mfrac": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "MathMLElement"
      },
      "mi": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "MathMLElement"
      },
      "mmultiscripts": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "MathMLElement"
      },
      "mn": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "MathMLElement"
      },
      "mo": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "MathMLElement"
      },
      "mover": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "MathMLElement"
      },
      "mpadded": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "MathMLElement"
      },
      "mphantom": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "MathMLElement"
      },
      "mprescripts": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "MathMLElement"
      },
      "mroot": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "MathMLElement"
      },
      "mrow": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "MathMLElement"
      },
      "ms": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "MathMLElement"
      },
      "mspace": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "MathMLElement"
      },
      "msqrt": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "MathMLElement"
      },
      "mstyle": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "MathMLElement"
      },
      "msub": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "MathMLElement"
      },
      "msubsup": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "MathMLElement"
      },
      "msup": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "MathMLElement"
      },
      "mtable": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "MathMLElement"
      },
      "mtd": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "MathMLElement"
      },
      "mtext": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "MathMLElement"
      },
      "mtr": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "MathMLElement"
      },
      "munder": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "MathMLElement"
      },
      "munderover": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "MathMLElement"
      },
      "semantics": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "MathMLElement"
      }
    },
    "svg": {
      "a": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGAElement.href",
          "SVGAElement.target",
          "SVGGraphicsElement.farthestViewportElement",
          "SVGGraphicsElement.nearestViewportElement",
          "SVGGraphicsElement.requiredExtensions",
          "SVGGraphicsElement.systemLanguage",
          "SVGGraphicsElement.transform"
        ],
        "tagInterfaceName": "SVGAElement"
      },
      "altGlyph": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "SVGElement"
      },
      "altGlyphDef": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "SVGElement"
      },
      "altGlyphItem": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "SVGElement"
      },
      "animate": {
        "booleans": [],
        "events": [
          "SVGAnimationElement.onbegin",
          "SVGAnimationElement.onend",
          "SVGAnimationElement.onrepeat"
        ],
        "keys": {
          "onbegin": {
            "attr": true,
            "attrName": "onbegin",
            "keyInterfaceName": "SVGAnimationElement",
            "name": "onbegin",
            "prop": true,
            "propName": "onbegin",
            "readonly": false,
            "value": "event"
          },
          "onend": {
            "attr": true,
            "attrName": "onend",
            "keyInterfaceName": "SVGAnimationElement",
            "name": "onend",
            "prop": true,
            "propName": "onend",
            "readonly": false,
            "value": "event"
          },
          "onrepeat": {
            "attr": true,
            "attrName": "onrepeat",
            "keyInterfaceName": "SVGAnimationElement",
            "name": "onrepeat",
            "prop": true,
            "propName": "onrepeat",
            "readonly": false,
            "value": "event"
          }
        },
        "readonly": [
          "SVGAnimationElement.requiredExtensions",
          "SVGAnimationElement.systemLanguage",
          "SVGAnimationElement.targetElement"
        ],
        "tagInterfaceName": "SVGAnimateElement"
      },
      "animateColor": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "SVGElement"
      },
      "animateMotion": {
        "booleans": [],
        "events": [
          "SVGAnimationElement.onbegin",
          "SVGAnimationElement.onend",
          "SVGAnimationElement.onrepeat"
        ],
        "keys": {
          "onbegin": {
            "attr": true,
            "attrName": "onbegin",
            "keyInterfaceName": "SVGAnimationElement",
            "name": "onbegin",
            "prop": true,
            "propName": "onbegin",
            "readonly": false,
            "value": "event"
          },
          "onend": {
            "attr": true,
            "attrName": "onend",
            "keyInterfaceName": "SVGAnimationElement",
            "name": "onend",
            "prop": true,
            "propName": "onend",
            "readonly": false,
            "value": "event"
          },
          "onrepeat": {
            "attr": true,
            "attrName": "onrepeat",
            "keyInterfaceName": "SVGAnimationElement",
            "name": "onrepeat",
            "prop": true,
            "propName": "onrepeat",
            "readonly": false,
            "value": "event"
          }
        },
        "readonly": [
          "SVGAnimationElement.requiredExtensions",
          "SVGAnimationElement.systemLanguage",
          "SVGAnimationElement.targetElement"
        ],
        "tagInterfaceName": "SVGAnimateMotionElement"
      },
      "animateTransform": {
        "booleans": [],
        "events": [
          "SVGAnimationElement.onbegin",
          "SVGAnimationElement.onend",
          "SVGAnimationElement.onrepeat"
        ],
        "keys": {
          "onbegin": {
            "attr": true,
            "attrName": "onbegin",
            "keyInterfaceName": "SVGAnimationElement",
            "name": "onbegin",
            "prop": true,
            "propName": "onbegin",
            "readonly": false,
            "value": "event"
          },
          "onend": {
            "attr": true,
            "attrName": "onend",
            "keyInterfaceName": "SVGAnimationElement",
            "name": "onend",
            "prop": true,
            "propName": "onend",
            "readonly": false,
            "value": "event"
          },
          "onrepeat": {
            "attr": true,
            "attrName": "onrepeat",
            "keyInterfaceName": "SVGAnimationElement",
            "name": "onrepeat",
            "prop": true,
            "propName": "onrepeat",
            "readonly": false,
            "value": "event"
          }
        },
        "readonly": [
          "SVGAnimationElement.requiredExtensions",
          "SVGAnimationElement.systemLanguage",
          "SVGAnimationElement.targetElement"
        ],
        "tagInterfaceName": "SVGAnimateTransformElement"
      },
      "circle": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGCircleElement.cx",
          "SVGCircleElement.cy",
          "SVGCircleElement.r",
          "SVGGeometryElement.pathLength",
          "SVGGraphicsElement.farthestViewportElement",
          "SVGGraphicsElement.nearestViewportElement",
          "SVGGraphicsElement.requiredExtensions",
          "SVGGraphicsElement.systemLanguage",
          "SVGGraphicsElement.transform"
        ],
        "tagInterfaceName": "SVGCircleElement"
      },
      "clipPath": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGClipPathElement.clipPathUnits",
          "SVGClipPathElement.transform"
        ],
        "tagInterfaceName": "SVGClipPathElement"
      },
      "color-profile": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "SVGElement"
      },
      "cursor": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "SVGElement"
      },
      "defs": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGGraphicsElement.farthestViewportElement",
          "SVGGraphicsElement.nearestViewportElement",
          "SVGGraphicsElement.requiredExtensions",
          "SVGGraphicsElement.systemLanguage",
          "SVGGraphicsElement.transform"
        ],
        "tagInterfaceName": "SVGDefsElement"
      },
      "desc": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "SVGDescElement"
      },
      "ellipse": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGEllipseElement.cx",
          "SVGEllipseElement.cy",
          "SVGEllipseElement.rx",
          "SVGEllipseElement.ry",
          "SVGGeometryElement.pathLength",
          "SVGGraphicsElement.farthestViewportElement",
          "SVGGraphicsElement.nearestViewportElement",
          "SVGGraphicsElement.requiredExtensions",
          "SVGGraphicsElement.systemLanguage",
          "SVGGraphicsElement.transform"
        ],
        "tagInterfaceName": "SVGEllipseElement"
      },
      "feBlend": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGFEBlendElement.height",
          "SVGFEBlendElement.in1",
          "SVGFEBlendElement.in2",
          "SVGFEBlendElement.mode",
          "SVGFEBlendElement.result",
          "SVGFEBlendElement.width",
          "SVGFEBlendElement.x",
          "SVGFEBlendElement.y"
        ],
        "tagInterfaceName": "SVGFEBlendElement"
      },
      "feColorMatrix": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGFEColorMatrixElement.height",
          "SVGFEColorMatrixElement.in1",
          "SVGFEColorMatrixElement.result",
          "SVGFEColorMatrixElement.type",
          "SVGFEColorMatrixElement.values",
          "SVGFEColorMatrixElement.width",
          "SVGFEColorMatrixElement.x",
          "SVGFEColorMatrixElement.y"
        ],
        "tagInterfaceName": "SVGFEColorMatrixElement"
      },
      "feComponentTransfer": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGFEComponentTransferElement.height",
          "SVGFEComponentTransferElement.in1",
          "SVGFEComponentTransferElement.result",
          "SVGFEComponentTransferElement.width",
          "SVGFEComponentTransferElement.x",
          "SVGFEComponentTransferElement.y"
        ],
        "tagInterfaceName": "SVGFEComponentTransferElement"
      },
      "feComposite": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGFECompositeElement.height",
          "SVGFECompositeElement.in1",
          "SVGFECompositeElement.in2",
          "SVGFECompositeElement.k1",
          "SVGFECompositeElement.k2",
          "SVGFECompositeElement.k3",
          "SVGFECompositeElement.k4",
          "SVGFECompositeElement.operator",
          "SVGFECompositeElement.result",
          "SVGFECompositeElement.width",
          "SVGFECompositeElement.x",
          "SVGFECompositeElement.y"
        ],
        "tagInterfaceName": "SVGFECompositeElement"
      },
      "feConvolveMatrix": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGFEConvolveMatrixElement.bias",
          "SVGFEConvolveMatrixElement.divisor",
          "SVGFEConvolveMatrixElement.edgeMode",
          "SVGFEConvolveMatrixElement.height",
          "SVGFEConvolveMatrixElement.in1",
          "SVGFEConvolveMatrixElement.kernelMatrix",
          "SVGFEConvolveMatrixElement.kernelUnitLengthX",
          "SVGFEConvolveMatrixElement.kernelUnitLengthY",
          "SVGFEConvolveMatrixElement.orderX",
          "SVGFEConvolveMatrixElement.orderY",
          "SVGFEConvolveMatrixElement.preserveAlpha",
          "SVGFEConvolveMatrixElement.result",
          "SVGFEConvolveMatrixElement.targetX",
          "SVGFEConvolveMatrixElement.targetY",
          "SVGFEConvolveMatrixElement.width",
          "SVGFEConvolveMatrixElement.x",
          "SVGFEConvolveMatrixElement.y"
        ],
        "tagInterfaceName": "SVGFEConvolveMatrixElement"
      },
      "feDiffuseLighting": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGFEDiffuseLightingElement.diffuseConstant",
          "SVGFEDiffuseLightingElement.height",
          "SVGFEDiffuseLightingElement.in1",
          "SVGFEDiffuseLightingElement.kernelUnitLengthX",
          "SVGFEDiffuseLightingElement.kernelUnitLengthY",
          "SVGFEDiffuseLightingElement.result",
          "SVGFEDiffuseLightingElement.surfaceScale",
          "SVGFEDiffuseLightingElement.width",
          "SVGFEDiffuseLightingElement.x",
          "SVGFEDiffuseLightingElement.y"
        ],
        "tagInterfaceName": "SVGFEDiffuseLightingElement"
      },
      "feDisplacementMap": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGFEDisplacementMapElement.height",
          "SVGFEDisplacementMapElement.in1",
          "SVGFEDisplacementMapElement.in2",
          "SVGFEDisplacementMapElement.result",
          "SVGFEDisplacementMapElement.scale",
          "SVGFEDisplacementMapElement.width",
          "SVGFEDisplacementMapElement.x",
          "SVGFEDisplacementMapElement.xChannelSelector",
          "SVGFEDisplacementMapElement.y",
          "SVGFEDisplacementMapElement.yChannelSelector"
        ],
        "tagInterfaceName": "SVGFEDisplacementMapElement"
      },
      "feDistantLight": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGFEDistantLightElement.azimuth",
          "SVGFEDistantLightElement.elevation"
        ],
        "tagInterfaceName": "SVGFEDistantLightElement"
      },
      "feDropShadow": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGFEDropShadowElement.dx",
          "SVGFEDropShadowElement.dy",
          "SVGFEDropShadowElement.height",
          "SVGFEDropShadowElement.in1",
          "SVGFEDropShadowElement.result",
          "SVGFEDropShadowElement.stdDeviationX",
          "SVGFEDropShadowElement.stdDeviationY",
          "SVGFEDropShadowElement.width",
          "SVGFEDropShadowElement.x",
          "SVGFEDropShadowElement.y"
        ],
        "tagInterfaceName": "SVGFEDropShadowElement"
      },
      "feFlood": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGFEFloodElement.height",
          "SVGFEFloodElement.result",
          "SVGFEFloodElement.width",
          "SVGFEFloodElement.x",
          "SVGFEFloodElement.y"
        ],
        "tagInterfaceName": "SVGFEFloodElement"
      },
      "feFuncA": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGComponentTransferFunctionElement.amplitude",
          "SVGComponentTransferFunctionElement.exponent",
          "SVGComponentTransferFunctionElement.intercept",
          "SVGComponentTransferFunctionElement.offset",
          "SVGComponentTransferFunctionElement.slope",
          "SVGComponentTransferFunctionElement.tableValues",
          "SVGComponentTransferFunctionElement.type"
        ],
        "tagInterfaceName": "SVGFEFuncAElement"
      },
      "feFuncB": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGComponentTransferFunctionElement.amplitude",
          "SVGComponentTransferFunctionElement.exponent",
          "SVGComponentTransferFunctionElement.intercept",
          "SVGComponentTransferFunctionElement.offset",
          "SVGComponentTransferFunctionElement.slope",
          "SVGComponentTransferFunctionElement.tableValues",
          "SVGComponentTransferFunctionElement.type"
        ],
        "tagInterfaceName": "SVGFEFuncBElement"
      },
      "feFuncG": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGComponentTransferFunctionElement.amplitude",
          "SVGComponentTransferFunctionElement.exponent",
          "SVGComponentTransferFunctionElement.intercept",
          "SVGComponentTransferFunctionElement.offset",
          "SVGComponentTransferFunctionElement.slope",
          "SVGComponentTransferFunctionElement.tableValues",
          "SVGComponentTransferFunctionElement.type"
        ],
        "tagInterfaceName": "SVGFEFuncGElement"
      },
      "feFuncR": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGComponentTransferFunctionElement.amplitude",
          "SVGComponentTransferFunctionElement.exponent",
          "SVGComponentTransferFunctionElement.intercept",
          "SVGComponentTransferFunctionElement.offset",
          "SVGComponentTransferFunctionElement.slope",
          "SVGComponentTransferFunctionElement.tableValues",
          "SVGComponentTransferFunctionElement.type"
        ],
        "tagInterfaceName": "SVGFEFuncRElement"
      },
      "feGaussianBlur": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGFEGaussianBlurElement.height",
          "SVGFEGaussianBlurElement.in1",
          "SVGFEGaussianBlurElement.result",
          "SVGFEGaussianBlurElement.stdDeviationX",
          "SVGFEGaussianBlurElement.stdDeviationY",
          "SVGFEGaussianBlurElement.width",
          "SVGFEGaussianBlurElement.x",
          "SVGFEGaussianBlurElement.y"
        ],
        "tagInterfaceName": "SVGFEGaussianBlurElement"
      },
      "feImage": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGFEImageElement.height",
          "SVGFEImageElement.href",
          "SVGFEImageElement.preserveAspectRatio",
          "SVGFEImageElement.result",
          "SVGFEImageElement.width",
          "SVGFEImageElement.x",
          "SVGFEImageElement.y"
        ],
        "tagInterfaceName": "SVGFEImageElement"
      },
      "feMerge": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGFEMergeElement.height",
          "SVGFEMergeElement.result",
          "SVGFEMergeElement.width",
          "SVGFEMergeElement.x",
          "SVGFEMergeElement.y"
        ],
        "tagInterfaceName": "SVGFEMergeElement"
      },
      "feMergeNode": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGFEMergeNodeElement.in1"
        ],
        "tagInterfaceName": "SVGFEMergeNodeElement"
      },
      "feMorphology": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGFEMorphologyElement.height",
          "SVGFEMorphologyElement.in1",
          "SVGFEMorphologyElement.operator",
          "SVGFEMorphologyElement.radiusX",
          "SVGFEMorphologyElement.radiusY",
          "SVGFEMorphologyElement.result",
          "SVGFEMorphologyElement.width",
          "SVGFEMorphologyElement.x",
          "SVGFEMorphologyElement.y"
        ],
        "tagInterfaceName": "SVGFEMorphologyElement"
      },
      "feOffset": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGFEOffsetElement.dx",
          "SVGFEOffsetElement.dy",
          "SVGFEOffsetElement.height",
          "SVGFEOffsetElement.in1",
          "SVGFEOffsetElement.result",
          "SVGFEOffsetElement.width",
          "SVGFEOffsetElement.x",
          "SVGFEOffsetElement.y"
        ],
        "tagInterfaceName": "SVGFEOffsetElement"
      },
      "fePointLight": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGFEPointLightElement.x",
          "SVGFEPointLightElement.y",
          "SVGFEPointLightElement.z"
        ],
        "tagInterfaceName": "SVGFEPointLightElement"
      },
      "feSpecularLighting": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGFESpecularLightingElement.height",
          "SVGFESpecularLightingElement.in1",
          "SVGFESpecularLightingElement.kernelUnitLengthX",
          "SVGFESpecularLightingElement.kernelUnitLengthY",
          "SVGFESpecularLightingElement.result",
          "SVGFESpecularLightingElement.specularConstant",
          "SVGFESpecularLightingElement.specularExponent",
          "SVGFESpecularLightingElement.surfaceScale",
          "SVGFESpecularLightingElement.width",
          "SVGFESpecularLightingElement.x",
          "SVGFESpecularLightingElement.y"
        ],
        "tagInterfaceName": "SVGFESpecularLightingElement"
      },
      "feSpotLight": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGFESpotLightElement.limitingConeAngle",
          "SVGFESpotLightElement.pointsAtX",
          "SVGFESpotLightElement.pointsAtY",
          "SVGFESpotLightElement.pointsAtZ",
          "SVGFESpotLightElement.specularExponent",
          "SVGFESpotLightElement.x",
          "SVGFESpotLightElement.y",
          "SVGFESpotLightElement.z"
        ],
        "tagInterfaceName": "SVGFESpotLightElement"
      },
      "feTile": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGFETileElement.height",
          "SVGFETileElement.in1",
          "SVGFETileElement.result",
          "SVGFETileElement.width",
          "SVGFETileElement.x",
          "SVGFETileElement.y"
        ],
        "tagInterfaceName": "SVGFETileElement"
      },
      "feTurbulence": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGFETurbulenceElement.baseFrequencyX",
          "SVGFETurbulenceElement.baseFrequencyY",
          "SVGFETurbulenceElement.height",
          "SVGFETurbulenceElement.numOctaves",
          "SVGFETurbulenceElement.result",
          "SVGFETurbulenceElement.seed",
          "SVGFETurbulenceElement.stitchTiles",
          "SVGFETurbulenceElement.type",
          "SVGFETurbulenceElement.width",
          "SVGFETurbulenceElement.x",
          "SVGFETurbulenceElement.y"
        ],
        "tagInterfaceName": "SVGFETurbulenceElement"
      },
      "filter": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGFilterElement.filterUnits",
          "SVGFilterElement.height",
          "SVGFilterElement.href",
          "SVGFilterElement.primitiveUnits",
          "SVGFilterElement.width",
          "SVGFilterElement.x",
          "SVGFilterElement.y"
        ],
        "tagInterfaceName": "SVGFilterElement"
      },
      "font": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "SVGElement"
      },
      "font-face": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "SVGElement"
      },
      "font-face-format": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "SVGElement"
      },
      "font-face-name": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "SVGElement"
      },
      "font-face-src": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "SVGElement"
      },
      "font-face-uri": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "SVGElement"
      },
      "foreignObject": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGForeignObjectElement.height",
          "SVGForeignObjectElement.width",
          "SVGForeignObjectElement.x",
          "SVGForeignObjectElement.y",
          "SVGGraphicsElement.farthestViewportElement",
          "SVGGraphicsElement.nearestViewportElement",
          "SVGGraphicsElement.requiredExtensions",
          "SVGGraphicsElement.systemLanguage",
          "SVGGraphicsElement.transform"
        ],
        "tagInterfaceName": "SVGForeignObjectElement"
      },
      "g": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGGraphicsElement.farthestViewportElement",
          "SVGGraphicsElement.nearestViewportElement",
          "SVGGraphicsElement.requiredExtensions",
          "SVGGraphicsElement.systemLanguage",
          "SVGGraphicsElement.transform"
        ],
        "tagInterfaceName": "SVGGElement"
      },
      "glyph": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "SVGElement"
      },
      "glyphRef": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "SVGElement"
      },
      "hkern": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "SVGElement"
      },
      "image": {
        "booleans": [],
        "events": [],
        "keys": {
          "crossOrigin": {
            "attr": false,
            "attrName": "crossorigin",
            "keyInterfaceName": "SVGImageElement",
            "name": "crossOrigin",
            "prop": true,
            "propName": "crossOrigin",
            "readonly": false,
            "value": "string"
          },
          "crossorigin": {
            "attr": true,
            "attrName": "crossorigin",
            "keyInterfaceName": "SVGImageElement",
            "name": "crossorigin",
            "prop": false,
            "propName": "crossOrigin",
            "readonly": false,
            "value": "string"
          },
          "decoding": {
            "attr": true,
            "attrName": "decoding",
            "keyInterfaceName": "SVGImageElement",
            "name": "decoding",
            "prop": true,
            "propName": "decoding",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [
          "SVGGraphicsElement.farthestViewportElement",
          "SVGGraphicsElement.nearestViewportElement",
          "SVGGraphicsElement.requiredExtensions",
          "SVGGraphicsElement.systemLanguage",
          "SVGGraphicsElement.transform",
          "SVGImageElement.height",
          "SVGImageElement.href",
          "SVGImageElement.preserveAspectRatio",
          "SVGImageElement.width",
          "SVGImageElement.x",
          "SVGImageElement.y"
        ],
        "tagInterfaceName": "SVGImageElement"
      },
      "line": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGGeometryElement.pathLength",
          "SVGGraphicsElement.farthestViewportElement",
          "SVGGraphicsElement.nearestViewportElement",
          "SVGGraphicsElement.requiredExtensions",
          "SVGGraphicsElement.systemLanguage",
          "SVGGraphicsElement.transform",
          "SVGLineElement.x1",
          "SVGLineElement.x2",
          "SVGLineElement.y1",
          "SVGLineElement.y2"
        ],
        "tagInterfaceName": "SVGLineElement"
      },
      "linearGradient": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGGradientElement.gradientTransform",
          "SVGGradientElement.gradientUnits",
          "SVGGradientElement.href",
          "SVGGradientElement.spreadMethod",
          "SVGLinearGradientElement.x1",
          "SVGLinearGradientElement.x2",
          "SVGLinearGradientElement.y1",
          "SVGLinearGradientElement.y2"
        ],
        "tagInterfaceName": "SVGLinearGradientElement"
      },
      "marker": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGMarkerElement.markerHeight",
          "SVGMarkerElement.markerUnits",
          "SVGMarkerElement.markerWidth",
          "SVGMarkerElement.orientAngle",
          "SVGMarkerElement.orientType",
          "SVGMarkerElement.preserveAspectRatio",
          "SVGMarkerElement.refX",
          "SVGMarkerElement.refY",
          "SVGMarkerElement.viewBox"
        ],
        "tagInterfaceName": "SVGMarkerElement"
      },
      "mask": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGMaskElement.height",
          "SVGMaskElement.maskContentUnits",
          "SVGMaskElement.maskUnits",
          "SVGMaskElement.requiredExtensions",
          "SVGMaskElement.systemLanguage",
          "SVGMaskElement.width",
          "SVGMaskElement.x",
          "SVGMaskElement.y"
        ],
        "tagInterfaceName": "SVGMaskElement"
      },
      "metadata": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "SVGMetadataElement"
      },
      "missing-glyph": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "SVGElement"
      },
      "mpath": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGMPathElement.href"
        ],
        "tagInterfaceName": "SVGMPathElement"
      },
      "path": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGGeometryElement.pathLength",
          "SVGGraphicsElement.farthestViewportElement",
          "SVGGraphicsElement.nearestViewportElement",
          "SVGGraphicsElement.requiredExtensions",
          "SVGGraphicsElement.systemLanguage",
          "SVGGraphicsElement.transform"
        ],
        "tagInterfaceName": "SVGPathElement"
      },
      "pattern": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGPatternElement.height",
          "SVGPatternElement.href",
          "SVGPatternElement.patternContentUnits",
          "SVGPatternElement.patternTransform",
          "SVGPatternElement.patternUnits",
          "SVGPatternElement.preserveAspectRatio",
          "SVGPatternElement.requiredExtensions",
          "SVGPatternElement.systemLanguage",
          "SVGPatternElement.viewBox",
          "SVGPatternElement.width",
          "SVGPatternElement.x",
          "SVGPatternElement.y"
        ],
        "tagInterfaceName": "SVGPatternElement"
      },
      "polygon": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGGeometryElement.pathLength",
          "SVGGraphicsElement.farthestViewportElement",
          "SVGGraphicsElement.nearestViewportElement",
          "SVGGraphicsElement.requiredExtensions",
          "SVGGraphicsElement.systemLanguage",
          "SVGGraphicsElement.transform",
          "SVGPolygonElement.animatedPoints",
          "SVGPolygonElement.points"
        ],
        "tagInterfaceName": "SVGPolygonElement"
      },
      "polyline": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGGeometryElement.pathLength",
          "SVGGraphicsElement.farthestViewportElement",
          "SVGGraphicsElement.nearestViewportElement",
          "SVGGraphicsElement.requiredExtensions",
          "SVGGraphicsElement.systemLanguage",
          "SVGGraphicsElement.transform",
          "SVGPolylineElement.animatedPoints",
          "SVGPolylineElement.points"
        ],
        "tagInterfaceName": "SVGPolylineElement"
      },
      "radialGradient": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGGradientElement.gradientTransform",
          "SVGGradientElement.gradientUnits",
          "SVGGradientElement.href",
          "SVGGradientElement.spreadMethod",
          "SVGRadialGradientElement.cx",
          "SVGRadialGradientElement.cy",
          "SVGRadialGradientElement.fr",
          "SVGRadialGradientElement.fx",
          "SVGRadialGradientElement.fy",
          "SVGRadialGradientElement.r"
        ],
        "tagInterfaceName": "SVGRadialGradientElement"
      },
      "rect": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGGeometryElement.pathLength",
          "SVGGraphicsElement.farthestViewportElement",
          "SVGGraphicsElement.nearestViewportElement",
          "SVGGraphicsElement.requiredExtensions",
          "SVGGraphicsElement.systemLanguage",
          "SVGGraphicsElement.transform",
          "SVGRectElement.height",
          "SVGRectElement.rx",
          "SVGRectElement.ry",
          "SVGRectElement.width",
          "SVGRectElement.x",
          "SVGRectElement.y"
        ],
        "tagInterfaceName": "SVGRectElement"
      },
      "script": {
        "booleans": [],
        "events": [],
        "keys": {
          "type": {
            "attr": true,
            "attrName": "type",
            "keyInterfaceName": "SVGScriptElement",
            "name": "type",
            "prop": true,
            "propName": "type",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [
          "SVGScriptElement.href"
        ],
        "tagInterfaceName": "SVGScriptElement"
      },
      "set": {
        "booleans": [],
        "events": [
          "SVGAnimationElement.onbegin",
          "SVGAnimationElement.onend",
          "SVGAnimationElement.onrepeat"
        ],
        "keys": {
          "onbegin": {
            "attr": true,
            "attrName": "onbegin",
            "keyInterfaceName": "SVGAnimationElement",
            "name": "onbegin",
            "prop": true,
            "propName": "onbegin",
            "readonly": false,
            "value": "event"
          },
          "onend": {
            "attr": true,
            "attrName": "onend",
            "keyInterfaceName": "SVGAnimationElement",
            "name": "onend",
            "prop": true,
            "propName": "onend",
            "readonly": false,
            "value": "event"
          },
          "onrepeat": {
            "attr": true,
            "attrName": "onrepeat",
            "keyInterfaceName": "SVGAnimationElement",
            "name": "onrepeat",
            "prop": true,
            "propName": "onrepeat",
            "readonly": false,
            "value": "event"
          }
        },
        "readonly": [
          "SVGAnimationElement.requiredExtensions",
          "SVGAnimationElement.systemLanguage",
          "SVGAnimationElement.targetElement"
        ],
        "tagInterfaceName": "SVGSetElement"
      },
      "stop": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGStopElement.offset"
        ],
        "tagInterfaceName": "SVGStopElement"
      },
      "style": {
        "booleans": [
          "SVGStyleElement.disabled"
        ],
        "events": [],
        "keys": {
          "disabled": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "SVGStyleElement",
            "name": "disabled",
            "prop": true,
            "propName": "disabled",
            "readonly": false,
            "value": "boolean"
          },
          "media": {
            "attr": true,
            "attrName": "media",
            "keyInterfaceName": "SVGStyleElement",
            "name": "media",
            "prop": true,
            "propName": "media",
            "readonly": false,
            "value": "string"
          },
          "title": {
            "attr": true,
            "attrName": "title",
            "keyInterfaceName": "SVGStyleElement",
            "name": "title",
            "prop": true,
            "propName": "title",
            "readonly": false,
            "value": "string"
          },
          "type": {
            "attr": true,
            "attrName": "type",
            "keyInterfaceName": "SVGStyleElement",
            "name": "type",
            "prop": true,
            "propName": "type",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [
          "SVGStyleElement.sheet"
        ],
        "tagInterfaceName": "SVGStyleElement"
      },
      "svg": {
        "booleans": [],
        "events": [],
        "keys": {
          "currentScale": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "SVGSVGElement",
            "name": "currentScale",
            "prop": true,
            "propName": "currentScale",
            "readonly": false,
            "value": "number"
          },
          "zoomAndPan": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "SVGSVGElement",
            "name": "zoomAndPan",
            "prop": true,
            "propName": "zoomAndPan",
            "readonly": false,
            "value": "number"
          }
        },
        "readonly": [
          "SVGGraphicsElement.farthestViewportElement",
          "SVGGraphicsElement.nearestViewportElement",
          "SVGGraphicsElement.requiredExtensions",
          "SVGGraphicsElement.systemLanguage",
          "SVGGraphicsElement.transform",
          "SVGSVGElement.currentTranslate",
          "SVGSVGElement.height",
          "SVGSVGElement.preserveAspectRatio",
          "SVGSVGElement.viewBox",
          "SVGSVGElement.width",
          "SVGSVGElement.x",
          "SVGSVGElement.y"
        ],
        "tagInterfaceName": "SVGSVGElement"
      },
      "switch": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGGraphicsElement.farthestViewportElement",
          "SVGGraphicsElement.nearestViewportElement",
          "SVGGraphicsElement.requiredExtensions",
          "SVGGraphicsElement.systemLanguage",
          "SVGGraphicsElement.transform"
        ],
        "tagInterfaceName": "SVGSwitchElement"
      },
      "symbol": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGSymbolElement.preserveAspectRatio",
          "SVGSymbolElement.viewBox"
        ],
        "tagInterfaceName": "SVGSymbolElement"
      },
      "text": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGGraphicsElement.farthestViewportElement",
          "SVGGraphicsElement.nearestViewportElement",
          "SVGGraphicsElement.requiredExtensions",
          "SVGGraphicsElement.systemLanguage",
          "SVGGraphicsElement.transform",
          "SVGTextContentElement.lengthAdjust",
          "SVGTextContentElement.textLength",
          "SVGTextPositioningElement.dx",
          "SVGTextPositioningElement.dy",
          "SVGTextPositioningElement.rotate",
          "SVGTextPositioningElement.x",
          "SVGTextPositioningElement.y"
        ],
        "tagInterfaceName": "SVGTextElement"
      },
      "textPath": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGGraphicsElement.farthestViewportElement",
          "SVGGraphicsElement.nearestViewportElement",
          "SVGGraphicsElement.requiredExtensions",
          "SVGGraphicsElement.systemLanguage",
          "SVGGraphicsElement.transform",
          "SVGTextContentElement.lengthAdjust",
          "SVGTextContentElement.textLength",
          "SVGTextPathElement.href",
          "SVGTextPathElement.method",
          "SVGTextPathElement.spacing",
          "SVGTextPathElement.startOffset"
        ],
        "tagInterfaceName": "SVGTextPathElement"
      },
      "title": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "SVGTitleElement"
      },
      "tref": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "SVGElement"
      },
      "tspan": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGGraphicsElement.farthestViewportElement",
          "SVGGraphicsElement.nearestViewportElement",
          "SVGGraphicsElement.requiredExtensions",
          "SVGGraphicsElement.systemLanguage",
          "SVGGraphicsElement.transform",
          "SVGTextContentElement.lengthAdjust",
          "SVGTextContentElement.textLength",
          "SVGTextPositioningElement.dx",
          "SVGTextPositioningElement.dy",
          "SVGTextPositioningElement.rotate",
          "SVGTextPositioningElement.x",
          "SVGTextPositioningElement.y"
        ],
        "tagInterfaceName": "SVGTSpanElement"
      },
      "use": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGGraphicsElement.farthestViewportElement",
          "SVGGraphicsElement.nearestViewportElement",
          "SVGGraphicsElement.requiredExtensions",
          "SVGGraphicsElement.systemLanguage",
          "SVGGraphicsElement.transform",
          "SVGUseElement.height",
          "SVGUseElement.href",
          "SVGUseElement.width",
          "SVGUseElement.x",
          "SVGUseElement.y"
        ],
        "tagInterfaceName": "SVGUseElement"
      },
      "view": {
        "booleans": [],
        "events": [],
        "keys": {
          "zoomAndPan": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "SVGViewElement",
            "name": "zoomAndPan",
            "prop": true,
            "propName": "zoomAndPan",
            "readonly": false,
            "value": "number"
          }
        },
        "readonly": [
          "SVGViewElement.preserveAspectRatio",
          "SVGViewElement.viewBox"
        ],
        "tagInterfaceName": "SVGViewElement"
      },
      "vkern": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "SVGElement"
      }
    }
  },
  "firefox": {
    "booleans": [
      "HTMLAreaElement.noHref",
      "HTMLAreaElement.nohref",
      "HTMLButtonElement.disabled",
      "HTMLButtonElement.formNoValidate",
      "HTMLButtonElement.formnovalidate",
      "HTMLCanvasElement.moz-opaque",
      "HTMLCanvasElement.mozOpaque",
      "HTMLDetailsElement.open",
      "HTMLDialogElement.open",
      "HTMLDirectoryElement.compact",
      "HTMLDListElement.compact",
      "HTMLElement.autocorrect",
      "HTMLElement.autofocus",
      "HTMLElement.draggable",
      "HTMLElement.hidden",
      "HTMLElement.inert",
      "HTMLElement.spellcheck",
      "HTMLElement.translate",
      "HTMLFieldSetElement.disabled",
      "HTMLFormElement.noValidate",
      "HTMLFormElement.novalidate",
      "HTMLFrameElement.noResize",
      "HTMLFrameElement.noresize",
      "HTMLHRElement.noShade",
      "HTMLHRElement.noshade",
      "HTMLIFrameElement.allowFullscreen",
      "HTMLIFrameElement.allowfullscreen",
      "HTMLImageElement.isMap",
      "HTMLImageElement.ismap",
      "HTMLInputElement.checked",
      "HTMLInputElement.defaultChecked",
      "HTMLInputElement.disabled",
      "HTMLInputElement.formNoValidate",
      "HTMLInputElement.formnovalidate",
      "HTMLInputElement.indeterminate",
      "HTMLInputElement.multiple",
      "HTMLInputElement.readOnly",
      "HTMLInputElement.readonly",
      "HTMLInputElement.required",
      "HTMLInputElement.webkitdirectory",
      "HTMLLinkElement.disabled",
      "HTMLMarqueeElement.trueSpeed",
      "HTMLMarqueeElement.truespeed",
      "HTMLMediaElement.autoplay",
      "HTMLMediaElement.controls",
      "HTMLMediaElement.defaultMuted",
      "HTMLMediaElement.loop",
      "HTMLMediaElement.muted",
      "HTMLMediaElement.preservesPitch",
      "HTMLMenuElement.compact",
      "HTMLObjectElement.declare",
      "HTMLOListElement.compact",
      "HTMLOListElement.reversed",
      "HTMLOptGroupElement.disabled",
      "HTMLOptionElement.defaultSelected",
      "HTMLOptionElement.disabled",
      "HTMLOptionElement.selected",
      "HTMLScriptElement.async",
      "HTMLScriptElement.defer",
      "HTMLScriptElement.noModule",
      "HTMLScriptElement.nomodule",
      "HTMLSelectElement.disabled",
      "HTMLSelectElement.multiple",
      "HTMLSelectElement.required",
      "HTMLStyleElement.disabled",
      "HTMLTableCellElement.noWrap",
      "HTMLTableCellElement.nowrap",
      "HTMLTemplateElement.shadowRootClonable",
      "HTMLTemplateElement.shadowrootclonable",
      "HTMLTemplateElement.shadowRootDelegatesFocus",
      "HTMLTemplateElement.shadowrootdelegatesfocus",
      "HTMLTemplateElement.shadowRootSerializable",
      "HTMLTemplateElement.shadowrootserializable",
      "HTMLTextAreaElement.disabled",
      "HTMLTextAreaElement.readOnly",
      "HTMLTextAreaElement.readonly",
      "HTMLTextAreaElement.required",
      "HTMLTrackElement.default",
      "HTMLUListElement.compact",
      "HTMLVideoElement.disablePictureInPicture",
      "HTMLVideoElement.disablepictureinpicture",
      "MathMLElement.autofocus",
      "SVGElement.autofocus",
      "SVGScriptElement.async",
      "SVGScriptElement.defer",
      "SVGStyleElement.disabled"
    ],
    "dynamic": true,
    "events": [
      "Element.onfullscreenchange",
      "Element.onfullscreenerror",
      "HTMLBodyElement.onafterprint",
      "HTMLBodyElement.onbeforeprint",
      "HTMLBodyElement.onbeforeunload",
      "HTMLBodyElement.ongamepadconnected",
      "HTMLBodyElement.ongamepaddisconnected",
      "HTMLBodyElement.onhashchange",
      "HTMLBodyElement.onlanguagechange",
      "HTMLBodyElement.onmessage",
      "HTMLBodyElement.onmessageerror",
      "HTMLBodyElement.onoffline",
      "HTMLBodyElement.ononline",
      "HTMLBodyElement.onpagehide",
      "HTMLBodyElement.onpageshow",
      "HTMLBodyElement.onpopstate",
      "HTMLBodyElement.onrejectionhandled",
      "HTMLBodyElement.onstorage",
      "HTMLBodyElement.onunhandledrejection",
      "HTMLBodyElement.onunload",
      "HTMLElement.onabort",
      "HTMLElement.onanimationcancel",
      "HTMLElement.onanimationend",
      "HTMLElement.onanimationiteration",
      "HTMLElement.onanimationstart",
      "HTMLElement.onauxclick",
      "HTMLElement.onbeforeinput",
      "HTMLElement.onbeforetoggle",
      "HTMLElement.onblur",
      "HTMLElement.oncancel",
      "HTMLElement.oncanplay",
      "HTMLElement.oncanplaythrough",
      "HTMLElement.onchange",
      "HTMLElement.onclick",
      "HTMLElement.onclose",
      "HTMLElement.oncontentvisibilityautostatechange",
      "HTMLElement.oncontextlost",
      "HTMLElement.oncontextmenu",
      "HTMLElement.oncontextrestored",
      "HTMLElement.oncopy",
      "HTMLElement.oncuechange",
      "HTMLElement.oncut",
      "HTMLElement.ondblclick",
      "HTMLElement.ondrag",
      "HTMLElement.ondragend",
      "HTMLElement.ondragenter",
      "HTMLElement.ondragexit",
      "HTMLElement.ondragleave",
      "HTMLElement.ondragover",
      "HTMLElement.ondragstart",
      "HTMLElement.ondrop",
      "HTMLElement.ondurationchange",
      "HTMLElement.onemptied",
      "HTMLElement.onended",
      "HTMLElement.onerror",
      "HTMLElement.onfocus",
      "HTMLElement.onformdata",
      "HTMLElement.ongotpointercapture",
      "HTMLElement.oninput",
      "HTMLElement.oninvalid",
      "HTMLElement.onkeydown",
      "HTMLElement.onkeypress",
      "HTMLElement.onkeyup",
      "HTMLElement.onload",
      "HTMLElement.onloadeddata",
      "HTMLElement.onloadedmetadata",
      "HTMLElement.onloadstart",
      "HTMLElement.onlostpointercapture",
      "HTMLElement.onmousedown",
      "HTMLElement.onmouseenter",
      "HTMLElement.onmouseleave",
      "HTMLElement.onmousemove",
      "HTMLElement.onmouseout",
      "HTMLElement.onmouseover",
      "HTMLElement.onmouseup",
      "HTMLElement.onmozfullscreenchange",
      "HTMLElement.onmozfullscreenerror",
      "HTMLElement.onpaste",
      "HTMLElement.onpause",
      "HTMLElement.onplay",
      "HTMLElement.onplaying",
      "HTMLElement.onpointercancel",
      "HTMLElement.onpointerdown",
      "HTMLElement.onpointerenter",
      "HTMLElement.onpointerleave",
      "HTMLElement.onpointermove",
      "HTMLElement.onpointerout",
      "HTMLElement.onpointerover",
      "HTMLElement.onpointerup",
      "HTMLElement.onprogress",
      "HTMLElement.onratechange",
      "HTMLElement.onreset",
      "HTMLElement.onresize",
      "HTMLElement.onscroll",
      "HTMLElement.onscrollend",
      "HTMLElement.onsecuritypolicyviolation",
      "HTMLElement.onseeked",
      "HTMLElement.onseeking",
      "HTMLElement.onselect",
      "HTMLElement.onselectionchange",
      "HTMLElement.onselectstart",
      "HTMLElement.onslotchange",
      "HTMLElement.onstalled",
      "HTMLElement.onsubmit",
      "HTMLElement.onsuspend",
      "HTMLElement.ontimeupdate",
      "HTMLElement.ontoggle",
      "HTMLElement.ontransitioncancel",
      "HTMLElement.ontransitionend",
      "HTMLElement.ontransitionrun",
      "HTMLElement.ontransitionstart",
      "HTMLElement.onvolumechange",
      "HTMLElement.onwaiting",
      "HTMLElement.onwebkitanimationend",
      "HTMLElement.onwebkitanimationiteration",
      "HTMLElement.onwebkitanimationstart",
      "HTMLElement.onwebkittransitionend",
      "HTMLElement.onwheel",
      "HTMLFrameSetElement.onafterprint",
      "HTMLFrameSetElement.onbeforeprint",
      "HTMLFrameSetElement.onbeforeunload",
      "HTMLFrameSetElement.ongamepadconnected",
      "HTMLFrameSetElement.ongamepaddisconnected",
      "HTMLFrameSetElement.onhashchange",
      "HTMLFrameSetElement.onlanguagechange",
      "HTMLFrameSetElement.onmessage",
      "HTMLFrameSetElement.onmessageerror",
      "HTMLFrameSetElement.onoffline",
      "HTMLFrameSetElement.ononline",
      "HTMLFrameSetElement.onpagehide",
      "HTMLFrameSetElement.onpageshow",
      "HTMLFrameSetElement.onpopstate",
      "HTMLFrameSetElement.onrejectionhandled",
      "HTMLFrameSetElement.onstorage",
      "HTMLFrameSetElement.onunhandledrejection",
      "HTMLFrameSetElement.onunload",
      "HTMLMediaElement.onencrypted",
      "HTMLMediaElement.onwaitingforkey",
      "MathMLElement.onabort",
      "MathMLElement.onanimationcancel",
      "MathMLElement.onanimationend",
      "MathMLElement.onanimationiteration",
      "MathMLElement.onanimationstart",
      "MathMLElement.onauxclick",
      "MathMLElement.onbeforeinput",
      "MathMLElement.onbeforetoggle",
      "MathMLElement.onblur",
      "MathMLElement.oncancel",
      "MathMLElement.oncanplay",
      "MathMLElement.oncanplaythrough",
      "MathMLElement.onchange",
      "MathMLElement.onclick",
      "MathMLElement.onclose",
      "MathMLElement.oncontentvisibilityautostatechange",
      "MathMLElement.oncontextlost",
      "MathMLElement.oncontextmenu",
      "MathMLElement.oncontextrestored",
      "MathMLElement.oncopy",
      "MathMLElement.oncuechange",
      "MathMLElement.oncut",
      "MathMLElement.ondblclick",
      "MathMLElement.ondrag",
      "MathMLElement.ondragend",
      "MathMLElement.ondragenter",
      "MathMLElement.ondragexit",
      "MathMLElement.ondragleave",
      "MathMLElement.ondragover",
      "MathMLElement.ondragstart",
      "MathMLElement.ondrop",
      "MathMLElement.ondurationchange",
      "MathMLElement.onemptied",
      "MathMLElement.onended",
      "MathMLElement.onerror",
      "MathMLElement.onfocus",
      "MathMLElement.onformdata",
      "MathMLElement.ongotpointercapture",
      "MathMLElement.oninput",
      "MathMLElement.oninvalid",
      "MathMLElement.onkeydown",
      "MathMLElement.onkeypress",
      "MathMLElement.onkeyup",
      "MathMLElement.onload",
      "MathMLElement.onloadeddata",
      "MathMLElement.onloadedmetadata",
      "MathMLElement.onloadstart",
      "MathMLElement.onlostpointercapture",
      "MathMLElement.onmousedown",
      "MathMLElement.onmouseenter",
      "MathMLElement.onmouseleave",
      "MathMLElement.onmousemove",
      "MathMLElement.onmouseout",
      "MathMLElement.onmouseover",
      "MathMLElement.onmouseup",
      "MathMLElement.onmozfullscreenchange",
      "MathMLElement.onmozfullscreenerror",
      "MathMLElement.onpaste",
      "MathMLElement.onpause",
      "MathMLElement.onplay",
      "MathMLElement.onplaying",
      "MathMLElement.onpointercancel",
      "MathMLElement.onpointerdown",
      "MathMLElement.onpointerenter",
      "MathMLElement.onpointerleave",
      "MathMLElement.onpointermove",
      "MathMLElement.onpointerout",
      "MathMLElement.onpointerover",
      "MathMLElement.onpointerup",
      "MathMLElement.onprogress",
      "MathMLElement.onratechange",
      "MathMLElement.onreset",
      "MathMLElement.onresize",
      "MathMLElement.onscroll",
      "MathMLElement.onscrollend",
      "MathMLElement.onsecuritypolicyviolation",
      "MathMLElement.onseeked",
      "MathMLElement.onseeking",
      "MathMLElement.onselect",
      "MathMLElement.onselectionchange",
      "MathMLElement.onselectstart",
      "MathMLElement.onslotchange",
      "MathMLElement.onstalled",
      "MathMLElement.onsubmit",
      "MathMLElement.onsuspend",
      "MathMLElement.ontimeupdate",
      "MathMLElement.ontoggle",
      "MathMLElement.ontransitioncancel",
      "MathMLElement.ontransitionend",
      "MathMLElement.ontransitionrun",
      "MathMLElement.ontransitionstart",
      "MathMLElement.onvolumechange",
      "MathMLElement.onwaiting",
      "MathMLElement.onwebkitanimationend",
      "MathMLElement.onwebkitanimationiteration",
      "MathMLElement.onwebkitanimationstart",
      "MathMLElement.onwebkittransitionend",
      "MathMLElement.onwheel",
      "SVGAnimationElement.onbegin",
      "SVGAnimationElement.onend",
      "SVGAnimationElement.onrepeat",
      "SVGElement.onabort",
      "SVGElement.onanimationcancel",
      "SVGElement.onanimationend",
      "SVGElement.onanimationiteration",
      "SVGElement.onanimationstart",
      "SVGElement.onauxclick",
      "SVGElement.onbeforeinput",
      "SVGElement.onbeforetoggle",
      "SVGElement.onblur",
      "SVGElement.oncancel",
      "SVGElement.oncanplay",
      "SVGElement.oncanplaythrough",
      "SVGElement.onchange",
      "SVGElement.onclick",
      "SVGElement.onclose",
      "SVGElement.oncontentvisibilityautostatechange",
      "SVGElement.oncontextlost",
      "SVGElement.oncontextmenu",
      "SVGElement.oncontextrestored",
      "SVGElement.oncopy",
      "SVGElement.oncuechange",
      "SVGElement.oncut",
      "SVGElement.ondblclick",
      "SVGElement.ondrag",
      "SVGElement.ondragend",
      "SVGElement.ondragenter",
      "SVGElement.ondragexit",
      "SVGElement.ondragleave",
      "SVGElement.ondragover",
      "SVGElement.ondragstart",
      "SVGElement.ondrop",
      "SVGElement.ondurationchange",
      "SVGElement.onemptied",
      "SVGElement.onended",
      "SVGElement.onerror",
      "SVGElement.onfocus",
      "SVGElement.onformdata",
      "SVGElement.ongotpointercapture",
      "SVGElement.oninput",
      "SVGElement.oninvalid",
      "SVGElement.onkeydown",
      "SVGElement.onkeypress",
      "SVGElement.onkeyup",
      "SVGElement.onload",
      "SVGElement.onloadeddata",
      "SVGElement.onloadedmetadata",
      "SVGElement.onloadstart",
      "SVGElement.onlostpointercapture",
      "SVGElement.onmousedown",
      "SVGElement.onmouseenter",
      "SVGElement.onmouseleave",
      "SVGElement.onmousemove",
      "SVGElement.onmouseout",
      "SVGElement.onmouseover",
      "SVGElement.onmouseup",
      "SVGElement.onmozfullscreenchange",
      "SVGElement.onmozfullscreenerror",
      "SVGElement.onpaste",
      "SVGElement.onpause",
      "SVGElement.onplay",
      "SVGElement.onplaying",
      "SVGElement.onpointercancel",
      "SVGElement.onpointerdown",
      "SVGElement.onpointerenter",
      "SVGElement.onpointerleave",
      "SVGElement.onpointermove",
      "SVGElement.onpointerout",
      "SVGElement.onpointerover",
      "SVGElement.onpointerup",
      "SVGElement.onprogress",
      "SVGElement.onratechange",
      "SVGElement.onreset",
      "SVGElement.onresize",
      "SVGElement.onscroll",
      "SVGElement.onscrollend",
      "SVGElement.onsecuritypolicyviolation",
      "SVGElement.onseeked",
      "SVGElement.onseeking",
      "SVGElement.onselect",
      "SVGElement.onselectionchange",
      "SVGElement.onselectstart",
      "SVGElement.onslotchange",
      "SVGElement.onstalled",
      "SVGElement.onsubmit",
      "SVGElement.onsuspend",
      "SVGElement.ontimeupdate",
      "SVGElement.ontoggle",
      "SVGElement.ontransitioncancel",
      "SVGElement.ontransitionend",
      "SVGElement.ontransitionrun",
      "SVGElement.ontransitionstart",
      "SVGElement.onvolumechange",
      "SVGElement.onwaiting",
      "SVGElement.onwebkitanimationend",
      "SVGElement.onwebkitanimationiteration",
      "SVGElement.onwebkitanimationstart",
      "SVGElement.onwebkittransitionend",
      "SVGElement.onwheel"
    ],
    "html": {
      "a": {
        "booleans": [],
        "events": [],
        "keys": {
          "charset": {
            "attr": true,
            "attrName": "charset",
            "keyInterfaceName": "HTMLAnchorElement",
            "name": "charset",
            "prop": true,
            "propName": "charset",
            "readonly": false,
            "value": "string"
          },
          "coords": {
            "attr": true,
            "attrName": "coords",
            "keyInterfaceName": "HTMLAnchorElement",
            "name": "coords",
            "prop": true,
            "propName": "coords",
            "readonly": false,
            "value": "string"
          },
          "download": {
            "attr": true,
            "attrName": "download",
            "keyInterfaceName": "HTMLAnchorElement",
            "name": "download",
            "prop": true,
            "propName": "download",
            "readonly": false,
            "value": "string"
          },
          "hash": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLAnchorElement",
            "name": "hash",
            "prop": true,
            "propName": "hash",
            "readonly": false,
            "value": "string"
          },
          "host": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLAnchorElement",
            "name": "host",
            "prop": true,
            "propName": "host",
            "readonly": false,
            "value": "string"
          },
          "hostname": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLAnchorElement",
            "name": "hostname",
            "prop": true,
            "propName": "hostname",
            "readonly": false,
            "value": "string"
          },
          "href": {
            "attr": true,
            "attrName": "href",
            "keyInterfaceName": "HTMLAnchorElement",
            "name": "href",
            "prop": true,
            "propName": "href",
            "readonly": false,
            "value": "string"
          },
          "hreflang": {
            "attr": true,
            "attrName": "hreflang",
            "keyInterfaceName": "HTMLAnchorElement",
            "name": "hreflang",
            "prop": true,
            "propName": "hreflang",
            "readonly": false,
            "value": "string"
          },
          "name": {
            "attr": true,
            "attrName": "name",
            "keyInterfaceName": "HTMLAnchorElement",
            "name": "name",
            "prop": true,
            "propName": "name",
            "readonly": false,
            "value": "string"
          },
          "password": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLAnchorElement",
            "name": "password",
            "prop": true,
            "propName": "password",
            "readonly": false,
            "value": "string"
          },
          "pathname": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLAnchorElement",
            "name": "pathname",
            "prop": true,
            "propName": "pathname",
            "readonly": false,
            "value": "string"
          },
          "ping": {
            "attr": true,
            "attrName": "ping",
            "keyInterfaceName": "HTMLAnchorElement",
            "name": "ping",
            "prop": true,
            "propName": "ping",
            "readonly": false,
            "value": "string"
          },
          "port": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLAnchorElement",
            "name": "port",
            "prop": true,
            "propName": "port",
            "readonly": false,
            "value": "string"
          },
          "protocol": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLAnchorElement",
            "name": "protocol",
            "prop": true,
            "propName": "protocol",
            "readonly": false,
            "value": "string"
          },
          "referrerPolicy": {
            "attr": false,
            "attrName": "referrerpolicy",
            "keyInterfaceName": "HTMLAnchorElement",
            "name": "referrerPolicy",
            "prop": true,
            "propName": "referrerPolicy",
            "readonly": false,
            "value": "string"
          },
          "referrerpolicy": {
            "attr": true,
            "attrName": "referrerpolicy",
            "keyInterfaceName": "HTMLAnchorElement",
            "name": "referrerpolicy",
            "prop": false,
            "propName": "referrerPolicy",
            "readonly": false,
            "value": "string"
          },
          "rel": {
            "attr": true,
            "attrName": "rel",
            "keyInterfaceName": "HTMLAnchorElement",
            "name": "rel",
            "prop": true,
            "propName": "relList",
            "readonly": false,
            "value": "string"
          },
          "relList": {
            "attr": false,
            "attrName": "rel",
            "keyInterfaceName": "HTMLAnchorElement",
            "name": "relList",
            "prop": true,
            "propName": "relList",
            "readonly": false,
            "value": "string"
          },
          "rev": {
            "attr": true,
            "attrName": "rev",
            "keyInterfaceName": "HTMLAnchorElement",
            "name": "rev",
            "prop": true,
            "propName": "rev",
            "readonly": false,
            "value": "string"
          },
          "search": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLAnchorElement",
            "name": "search",
            "prop": true,
            "propName": "search",
            "readonly": false,
            "value": "string"
          },
          "shape": {
            "attr": true,
            "attrName": "shape",
            "keyInterfaceName": "HTMLAnchorElement",
            "name": "shape",
            "prop": true,
            "propName": "shape",
            "readonly": false,
            "value": "string"
          },
          "target": {
            "attr": true,
            "attrName": "target",
            "keyInterfaceName": "HTMLAnchorElement",
            "name": "target",
            "prop": true,
            "propName": "target",
            "readonly": false,
            "value": "string"
          },
          "text": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLAnchorElement",
            "name": "text",
            "prop": true,
            "propName": "text",
            "readonly": false,
            "value": "string"
          },
          "type": {
            "attr": true,
            "attrName": "type",
            "keyInterfaceName": "HTMLAnchorElement",
            "name": "type",
            "prop": true,
            "propName": "type",
            "readonly": false,
            "value": "string"
          },
          "username": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLAnchorElement",
            "name": "username",
            "prop": true,
            "propName": "username",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [
          "HTMLAnchorElement.origin"
        ],
        "tagInterfaceName": "HTMLAnchorElement"
      },
      "abbr": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "acronym": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "address": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "applet": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLUnknownElement"
      },
      "area": {
        "booleans": [
          "HTMLAreaElement.noHref",
          "HTMLAreaElement.nohref"
        ],
        "events": [],
        "keys": {
          "alt": {
            "attr": true,
            "attrName": "alt",
            "keyInterfaceName": "HTMLAreaElement",
            "name": "alt",
            "prop": true,
            "propName": "alt",
            "readonly": false,
            "value": "string"
          },
          "coords": {
            "attr": true,
            "attrName": "coords",
            "keyInterfaceName": "HTMLAreaElement",
            "name": "coords",
            "prop": true,
            "propName": "coords",
            "readonly": false,
            "value": "string"
          },
          "download": {
            "attr": true,
            "attrName": "download",
            "keyInterfaceName": "HTMLAreaElement",
            "name": "download",
            "prop": true,
            "propName": "download",
            "readonly": false,
            "value": "string"
          },
          "hash": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLAreaElement",
            "name": "hash",
            "prop": true,
            "propName": "hash",
            "readonly": false,
            "value": "string"
          },
          "host": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLAreaElement",
            "name": "host",
            "prop": true,
            "propName": "host",
            "readonly": false,
            "value": "string"
          },
          "hostname": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLAreaElement",
            "name": "hostname",
            "prop": true,
            "propName": "hostname",
            "readonly": false,
            "value": "string"
          },
          "href": {
            "attr": true,
            "attrName": "href",
            "keyInterfaceName": "HTMLAreaElement",
            "name": "href",
            "prop": true,
            "propName": "href",
            "readonly": false,
            "value": "string"
          },
          "noHref": {
            "attr": false,
            "attrName": "nohref",
            "keyInterfaceName": "HTMLAreaElement",
            "name": "noHref",
            "prop": true,
            "propName": "noHref",
            "readonly": false,
            "value": "boolean"
          },
          "nohref": {
            "attr": true,
            "attrName": "nohref",
            "keyInterfaceName": "HTMLAreaElement",
            "name": "nohref",
            "prop": false,
            "propName": "noHref",
            "readonly": false,
            "value": "boolean"
          },
          "password": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLAreaElement",
            "name": "password",
            "prop": true,
            "propName": "password",
            "readonly": false,
            "value": "string"
          },
          "pathname": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLAreaElement",
            "name": "pathname",
            "prop": true,
            "propName": "pathname",
            "readonly": false,
            "value": "string"
          },
          "ping": {
            "attr": true,
            "attrName": "ping",
            "keyInterfaceName": "HTMLAreaElement",
            "name": "ping",
            "prop": true,
            "propName": "ping",
            "readonly": false,
            "value": "string"
          },
          "port": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLAreaElement",
            "name": "port",
            "prop": true,
            "propName": "port",
            "readonly": false,
            "value": "string"
          },
          "protocol": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLAreaElement",
            "name": "protocol",
            "prop": true,
            "propName": "protocol",
            "readonly": false,
            "value": "string"
          },
          "referrerPolicy": {
            "attr": false,
            "attrName": "referrerpolicy",
            "keyInterfaceName": "HTMLAreaElement",
            "name": "referrerPolicy",
            "prop": true,
            "propName": "referrerPolicy",
            "readonly": false,
            "value": "string"
          },
          "referrerpolicy": {
            "attr": true,
            "attrName": "referrerpolicy",
            "keyInterfaceName": "HTMLAreaElement",
            "name": "referrerpolicy",
            "prop": false,
            "propName": "referrerPolicy",
            "readonly": false,
            "value": "string"
          },
          "rel": {
            "attr": true,
            "attrName": "rel",
            "keyInterfaceName": "HTMLAreaElement",
            "name": "rel",
            "prop": true,
            "propName": "relList",
            "readonly": false,
            "value": "string"
          },
          "relList": {
            "attr": false,
            "attrName": "rel",
            "keyInterfaceName": "HTMLAreaElement",
            "name": "relList",
            "prop": true,
            "propName": "relList",
            "readonly": false,
            "value": "string"
          },
          "search": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLAreaElement",
            "name": "search",
            "prop": true,
            "propName": "search",
            "readonly": false,
            "value": "string"
          },
          "shape": {
            "attr": true,
            "attrName": "shape",
            "keyInterfaceName": "HTMLAreaElement",
            "name": "shape",
            "prop": true,
            "propName": "shape",
            "readonly": false,
            "value": "string"
          },
          "target": {
            "attr": true,
            "attrName": "target",
            "keyInterfaceName": "HTMLAreaElement",
            "name": "target",
            "prop": true,
            "propName": "target",
            "readonly": false,
            "value": "string"
          },
          "username": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLAreaElement",
            "name": "username",
            "prop": true,
            "propName": "username",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [
          "HTMLAreaElement.origin"
        ],
        "tagInterfaceName": "HTMLAreaElement"
      },
      "article": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "aside": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "audio": {
        "booleans": [
          "HTMLMediaElement.autoplay",
          "HTMLMediaElement.controls",
          "HTMLMediaElement.defaultMuted",
          "HTMLMediaElement.loop",
          "HTMLMediaElement.muted",
          "HTMLMediaElement.muted",
          "HTMLMediaElement.preservesPitch"
        ],
        "events": [
          "HTMLMediaElement.onencrypted",
          "HTMLMediaElement.onwaitingforkey"
        ],
        "keys": {
          "autoplay": {
            "attr": true,
            "attrName": "autoplay",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "autoplay",
            "prop": true,
            "propName": "autoplay",
            "readonly": false,
            "value": "boolean"
          },
          "controls": {
            "attr": true,
            "attrName": "controls",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "controls",
            "prop": true,
            "propName": "controls",
            "readonly": false,
            "value": "boolean"
          },
          "crossOrigin": {
            "attr": false,
            "attrName": "crossorigin",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "crossOrigin",
            "prop": true,
            "propName": "crossOrigin",
            "readonly": false,
            "value": "string"
          },
          "crossorigin": {
            "attr": true,
            "attrName": "crossorigin",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "crossorigin",
            "prop": false,
            "propName": "crossOrigin",
            "readonly": false,
            "value": "string"
          },
          "currentTime": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "currentTime",
            "prop": true,
            "propName": "currentTime",
            "readonly": false,
            "value": "number"
          },
          "defaultMuted": {
            "attr": false,
            "attrName": "muted",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "defaultMuted",
            "prop": true,
            "propName": "defaultMuted",
            "readonly": false,
            "value": "boolean"
          },
          "defaultPlaybackRate": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "defaultPlaybackRate",
            "prop": true,
            "propName": "defaultPlaybackRate",
            "readonly": false,
            "value": "number"
          },
          "loop": {
            "attr": true,
            "attrName": "loop",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "loop",
            "prop": true,
            "propName": "loop",
            "readonly": false,
            "value": "boolean"
          },
          "muted": {
            "attr": true,
            "attrName": "muted",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "muted",
            "prop": true,
            "propName": "defaultMuted",
            "readonly": false,
            "value": "boolean"
          },
          "onencrypted": {
            "attr": true,
            "attrName": "onencrypted",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "onencrypted",
            "prop": true,
            "propName": "onencrypted",
            "readonly": false,
            "value": "event"
          },
          "onwaitingforkey": {
            "attr": true,
            "attrName": "onwaitingforkey",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "onwaitingforkey",
            "prop": true,
            "propName": "onwaitingforkey",
            "readonly": false,
            "value": "event"
          },
          "playbackRate": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "playbackRate",
            "prop": true,
            "propName": "playbackRate",
            "readonly": false,
            "value": "number"
          },
          "preload": {
            "attr": true,
            "attrName": "preload",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "preload",
            "prop": true,
            "propName": "preload",
            "readonly": false,
            "value": "string"
          },
          "preservesPitch": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "preservesPitch",
            "prop": true,
            "propName": "preservesPitch",
            "readonly": false,
            "value": "boolean"
          },
          "src": {
            "attr": true,
            "attrName": "src",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "src",
            "prop": true,
            "propName": "src",
            "readonly": false,
            "value": "string"
          },
          "srcObject": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "srcObject",
            "prop": true,
            "propName": "srcObject",
            "readonly": false,
            "value": "MediaStream | MediaSource | Blob | File"
          },
          "volume": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "volume",
            "prop": true,
            "propName": "volume",
            "readonly": false,
            "value": "number"
          }
        },
        "readonly": [
          "HTMLMediaElement.buffered",
          "HTMLMediaElement.currentSrc",
          "HTMLMediaElement.duration",
          "HTMLMediaElement.ended",
          "HTMLMediaElement.error",
          "HTMLMediaElement.mediaKeys",
          "HTMLMediaElement.mozAudioCaptured",
          "HTMLMediaElement.mozFragmentEnd",
          "HTMLMediaElement.networkState",
          "HTMLMediaElement.paused",
          "HTMLMediaElement.played",
          "HTMLMediaElement.readyState",
          "HTMLMediaElement.seekable",
          "HTMLMediaElement.seeking",
          "HTMLMediaElement.sinkId",
          "HTMLMediaElement.textTracks"
        ],
        "tagInterfaceName": "HTMLAudioElement"
      },
      "b": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "base": {
        "booleans": [],
        "events": [],
        "keys": {
          "href": {
            "attr": true,
            "attrName": "href",
            "keyInterfaceName": "HTMLBaseElement",
            "name": "href",
            "prop": true,
            "propName": "href",
            "readonly": false,
            "value": "string"
          },
          "target": {
            "attr": true,
            "attrName": "target",
            "keyInterfaceName": "HTMLBaseElement",
            "name": "target",
            "prop": true,
            "propName": "target",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLBaseElement"
      },
      "basefont": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "bdi": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "bdo": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "bgsound": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLUnknownElement"
      },
      "big": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "blink": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLUnknownElement"
      },
      "blockquote": {
        "booleans": [],
        "events": [],
        "keys": {
          "cite": {
            "attr": true,
            "attrName": "cite",
            "keyInterfaceName": "HTMLQuoteElement",
            "name": "cite",
            "prop": true,
            "propName": "cite",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLQuoteElement"
      },
      "body": {
        "booleans": [],
        "events": [
          "HTMLBodyElement.onafterprint",
          "HTMLBodyElement.onbeforeprint",
          "HTMLBodyElement.onbeforeunload",
          "HTMLBodyElement.ongamepadconnected",
          "HTMLBodyElement.ongamepaddisconnected",
          "HTMLBodyElement.onhashchange",
          "HTMLBodyElement.onlanguagechange",
          "HTMLBodyElement.onmessage",
          "HTMLBodyElement.onmessageerror",
          "HTMLBodyElement.onoffline",
          "HTMLBodyElement.ononline",
          "HTMLBodyElement.onpagehide",
          "HTMLBodyElement.onpageshow",
          "HTMLBodyElement.onpopstate",
          "HTMLBodyElement.onrejectionhandled",
          "HTMLBodyElement.onstorage",
          "HTMLBodyElement.onunhandledrejection",
          "HTMLBodyElement.onunload"
        ],
        "keys": {
          "aLink": {
            "attr": false,
            "attrName": "alink",
            "keyInterfaceName": "HTMLBodyElement",
            "name": "aLink",
            "prop": true,
            "propName": "aLink",
            "readonly": false,
            "value": "string"
          },
          "alink": {
            "attr": true,
            "attrName": "alink",
            "keyInterfaceName": "HTMLBodyElement",
            "name": "alink",
            "prop": false,
            "propName": "aLink",
            "readonly": false,
            "value": "string"
          },
          "background": {
            "attr": true,
            "attrName": "background",
            "keyInterfaceName": "HTMLBodyElement",
            "name": "background",
            "prop": true,
            "propName": "background",
            "readonly": false,
            "value": "string"
          },
          "bgColor": {
            "attr": false,
            "attrName": "bgcolor",
            "keyInterfaceName": "HTMLBodyElement",
            "name": "bgColor",
            "prop": true,
            "propName": "bgColor",
            "readonly": false,
            "value": "string"
          },
          "bgcolor": {
            "attr": true,
            "attrName": "bgcolor",
            "keyInterfaceName": "HTMLBodyElement",
            "name": "bgcolor",
            "prop": false,
            "propName": "bgColor",
            "readonly": false,
            "value": "string"
          },
          "link": {
            "attr": true,
            "attrName": "link",
            "keyInterfaceName": "HTMLBodyElement",
            "name": "link",
            "prop": true,
            "propName": "link",
            "readonly": false,
            "value": "string"
          },
          "onafterprint": {
            "attr": true,
            "attrName": "onafterprint",
            "keyInterfaceName": "HTMLBodyElement",
            "name": "onafterprint",
            "prop": true,
            "propName": "onafterprint",
            "readonly": false,
            "value": "event"
          },
          "onbeforeprint": {
            "attr": true,
            "attrName": "onbeforeprint",
            "keyInterfaceName": "HTMLBodyElement",
            "name": "onbeforeprint",
            "prop": true,
            "propName": "onbeforeprint",
            "readonly": false,
            "value": "event"
          },
          "onbeforeunload": {
            "attr": true,
            "attrName": "onbeforeunload",
            "keyInterfaceName": "HTMLBodyElement",
            "name": "onbeforeunload",
            "prop": true,
            "propName": "onbeforeunload",
            "readonly": false,
            "value": "event"
          },
          "ongamepadconnected": {
            "attr": true,
            "attrName": "ongamepadconnected",
            "keyInterfaceName": "HTMLBodyElement",
            "name": "ongamepadconnected",
            "prop": true,
            "propName": "ongamepadconnected",
            "readonly": false,
            "value": "event"
          },
          "ongamepaddisconnected": {
            "attr": true,
            "attrName": "ongamepaddisconnected",
            "keyInterfaceName": "HTMLBodyElement",
            "name": "ongamepaddisconnected",
            "prop": true,
            "propName": "ongamepaddisconnected",
            "readonly": false,
            "value": "event"
          },
          "onhashchange": {
            "attr": true,
            "attrName": "onhashchange",
            "keyInterfaceName": "HTMLBodyElement",
            "name": "onhashchange",
            "prop": true,
            "propName": "onhashchange",
            "readonly": false,
            "value": "event"
          },
          "onlanguagechange": {
            "attr": true,
            "attrName": "onlanguagechange",
            "keyInterfaceName": "HTMLBodyElement",
            "name": "onlanguagechange",
            "prop": true,
            "propName": "onlanguagechange",
            "readonly": false,
            "value": "event"
          },
          "onmessage": {
            "attr": true,
            "attrName": "onmessage",
            "keyInterfaceName": "HTMLBodyElement",
            "name": "onmessage",
            "prop": true,
            "propName": "onmessage",
            "readonly": false,
            "value": "event"
          },
          "onmessageerror": {
            "attr": true,
            "attrName": "onmessageerror",
            "keyInterfaceName": "HTMLBodyElement",
            "name": "onmessageerror",
            "prop": true,
            "propName": "onmessageerror",
            "readonly": false,
            "value": "event"
          },
          "onoffline": {
            "attr": true,
            "attrName": "onoffline",
            "keyInterfaceName": "HTMLBodyElement",
            "name": "onoffline",
            "prop": true,
            "propName": "onoffline",
            "readonly": false,
            "value": "event"
          },
          "ononline": {
            "attr": true,
            "attrName": "ononline",
            "keyInterfaceName": "HTMLBodyElement",
            "name": "ononline",
            "prop": true,
            "propName": "ononline",
            "readonly": false,
            "value": "event"
          },
          "onpagehide": {
            "attr": true,
            "attrName": "onpagehide",
            "keyInterfaceName": "HTMLBodyElement",
            "name": "onpagehide",
            "prop": true,
            "propName": "onpagehide",
            "readonly": false,
            "value": "event"
          },
          "onpageshow": {
            "attr": true,
            "attrName": "onpageshow",
            "keyInterfaceName": "HTMLBodyElement",
            "name": "onpageshow",
            "prop": true,
            "propName": "onpageshow",
            "readonly": false,
            "value": "event"
          },
          "onpopstate": {
            "attr": true,
            "attrName": "onpopstate",
            "keyInterfaceName": "HTMLBodyElement",
            "name": "onpopstate",
            "prop": true,
            "propName": "onpopstate",
            "readonly": false,
            "value": "event"
          },
          "onrejectionhandled": {
            "attr": true,
            "attrName": "onrejectionhandled",
            "keyInterfaceName": "HTMLBodyElement",
            "name": "onrejectionhandled",
            "prop": true,
            "propName": "onrejectionhandled",
            "readonly": false,
            "value": "event"
          },
          "onstorage": {
            "attr": true,
            "attrName": "onstorage",
            "keyInterfaceName": "HTMLBodyElement",
            "name": "onstorage",
            "prop": true,
            "propName": "onstorage",
            "readonly": false,
            "value": "event"
          },
          "onunhandledrejection": {
            "attr": true,
            "attrName": "onunhandledrejection",
            "keyInterfaceName": "HTMLBodyElement",
            "name": "onunhandledrejection",
            "prop": true,
            "propName": "onunhandledrejection",
            "readonly": false,
            "value": "event"
          },
          "onunload": {
            "attr": true,
            "attrName": "onunload",
            "keyInterfaceName": "HTMLBodyElement",
            "name": "onunload",
            "prop": true,
            "propName": "onunload",
            "readonly": false,
            "value": "event"
          },
          "text": {
            "attr": true,
            "attrName": "text",
            "keyInterfaceName": "HTMLBodyElement",
            "name": "text",
            "prop": true,
            "propName": "text",
            "readonly": false,
            "value": "string"
          },
          "vLink": {
            "attr": false,
            "attrName": "vlink",
            "keyInterfaceName": "HTMLBodyElement",
            "name": "vLink",
            "prop": true,
            "propName": "vLink",
            "readonly": false,
            "value": "string"
          },
          "vlink": {
            "attr": true,
            "attrName": "vlink",
            "keyInterfaceName": "HTMLBodyElement",
            "name": "vlink",
            "prop": false,
            "propName": "vLink",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLBodyElement"
      },
      "br": {
        "booleans": [],
        "events": [],
        "keys": {
          "clear": {
            "attr": true,
            "attrName": "clear",
            "keyInterfaceName": "HTMLBRElement",
            "name": "clear",
            "prop": true,
            "propName": "clear",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLBRElement"
      },
      "button": {
        "booleans": [
          "HTMLButtonElement.disabled",
          "HTMLButtonElement.formNoValidate",
          "HTMLButtonElement.formnovalidate"
        ],
        "events": [],
        "keys": {
          "disabled": {
            "attr": true,
            "attrName": "disabled",
            "keyInterfaceName": "HTMLButtonElement",
            "name": "disabled",
            "prop": true,
            "propName": "disabled",
            "readonly": false,
            "value": "boolean"
          },
          "formAction": {
            "attr": false,
            "attrName": "formaction",
            "keyInterfaceName": "HTMLButtonElement",
            "name": "formAction",
            "prop": true,
            "propName": "formAction",
            "readonly": false,
            "value": "string"
          },
          "formaction": {
            "attr": true,
            "attrName": "formaction",
            "keyInterfaceName": "HTMLButtonElement",
            "name": "formaction",
            "prop": false,
            "propName": "formAction",
            "readonly": false,
            "value": "string"
          },
          "formEnctype": {
            "attr": false,
            "attrName": "formenctype",
            "keyInterfaceName": "HTMLButtonElement",
            "name": "formEnctype",
            "prop": true,
            "propName": "formEnctype",
            "readonly": false,
            "value": "string"
          },
          "formenctype": {
            "attr": true,
            "attrName": "formenctype",
            "keyInterfaceName": "HTMLButtonElement",
            "name": "formenctype",
            "prop": false,
            "propName": "formEnctype",
            "readonly": false,
            "value": "string"
          },
          "formMethod": {
            "attr": false,
            "attrName": "formmethod",
            "keyInterfaceName": "HTMLButtonElement",
            "name": "formMethod",
            "prop": true,
            "propName": "formMethod",
            "readonly": false,
            "value": "string"
          },
          "formmethod": {
            "attr": true,
            "attrName": "formmethod",
            "keyInterfaceName": "HTMLButtonElement",
            "name": "formmethod",
            "prop": false,
            "propName": "formMethod",
            "readonly": false,
            "value": "string"
          },
          "formNoValidate": {
            "attr": false,
            "attrName": "formnovalidate",
            "keyInterfaceName": "HTMLButtonElement",
            "name": "formNoValidate",
            "prop": true,
            "propName": "formNoValidate",
            "readonly": false,
            "value": "boolean"
          },
          "formnovalidate": {
            "attr": true,
            "attrName": "formnovalidate",
            "keyInterfaceName": "HTMLButtonElement",
            "name": "formnovalidate",
            "prop": false,
            "propName": "formNoValidate",
            "readonly": false,
            "value": "boolean"
          },
          "formTarget": {
            "attr": false,
            "attrName": "formtarget",
            "keyInterfaceName": "HTMLButtonElement",
            "name": "formTarget",
            "prop": true,
            "propName": "formTarget",
            "readonly": false,
            "value": "string"
          },
          "formtarget": {
            "attr": true,
            "attrName": "formtarget",
            "keyInterfaceName": "HTMLButtonElement",
            "name": "formtarget",
            "prop": false,
            "propName": "formTarget",
            "readonly": false,
            "value": "string"
          },
          "name": {
            "attr": true,
            "attrName": "name",
            "keyInterfaceName": "HTMLButtonElement",
            "name": "name",
            "prop": true,
            "propName": "name",
            "readonly": false,
            "value": "string"
          },
          "popoverTargetAction": {
            "attr": false,
            "attrName": "popovertargetaction",
            "keyInterfaceName": "HTMLButtonElement",
            "name": "popoverTargetAction",
            "prop": true,
            "propName": "popoverTargetAction",
            "readonly": false,
            "value": "string"
          },
          "popovertargetaction": {
            "attr": true,
            "attrName": "popovertargetaction",
            "keyInterfaceName": "HTMLButtonElement",
            "name": "popovertargetaction",
            "prop": false,
            "propName": "popoverTargetAction",
            "readonly": false,
            "value": "string"
          },
          "popoverTargetElement": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLButtonElement",
            "name": "popoverTargetElement",
            "prop": true,
            "propName": "popoverTargetElement",
            "readonly": false,
            "value": "Element"
          },
          "type": {
            "attr": true,
            "attrName": "type",
            "keyInterfaceName": "HTMLButtonElement",
            "name": "type",
            "prop": true,
            "propName": "type",
            "readonly": false,
            "value": "string"
          },
          "value": {
            "attr": true,
            "attrName": "value",
            "keyInterfaceName": "HTMLButtonElement",
            "name": "value",
            "prop": true,
            "propName": "value",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [
          "HTMLButtonElement.form",
          "HTMLButtonElement.labels",
          "HTMLButtonElement.validationMessage",
          "HTMLButtonElement.validity",
          "HTMLButtonElement.willValidate"
        ],
        "tagInterfaceName": "HTMLButtonElement"
      },
      "canvas": {
        "booleans": [
          "HTMLCanvasElement.moz-opaque",
          "HTMLCanvasElement.mozOpaque"
        ],
        "events": [],
        "keys": {
          "height": {
            "attr": true,
            "attrName": "height",
            "keyInterfaceName": "HTMLCanvasElement",
            "name": "height",
            "prop": true,
            "propName": "height",
            "readonly": false,
            "value": "number"
          },
          "mozOpaque": {
            "attr": false,
            "attrName": "moz-opaque",
            "keyInterfaceName": "HTMLCanvasElement",
            "name": "mozOpaque",
            "prop": true,
            "propName": "mozOpaque",
            "readonly": false,
            "value": "boolean"
          },
          "moz-opaque": {
            "attr": true,
            "attrName": "moz-opaque",
            "keyInterfaceName": "HTMLCanvasElement",
            "name": "moz-opaque",
            "prop": false,
            "propName": "mozOpaque",
            "readonly": false,
            "value": "boolean"
          },
          "mozPrintCallback": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLCanvasElement",
            "name": "mozPrintCallback",
            "prop": true,
            "propName": "mozPrintCallback",
            "readonly": false,
            "value": "event"
          },
          "width": {
            "attr": true,
            "attrName": "width",
            "keyInterfaceName": "HTMLCanvasElement",
            "name": "width",
            "prop": true,
            "propName": "width",
            "readonly": false,
            "value": "number"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLCanvasElement"
      },
      "caption": {
        "booleans": [],
        "events": [],
        "keys": {
          "align": {
            "attr": true,
            "attrName": "align",
            "keyInterfaceName": "HTMLTableCaptionElement",
            "name": "align",
            "prop": true,
            "propName": "align",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLTableCaptionElement"
      },
      "center": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "cite": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "code": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "col": {
        "booleans": [],
        "events": [],
        "keys": {
          "align": {
            "attr": true,
            "attrName": "align",
            "keyInterfaceName": "HTMLTableColElement",
            "name": "align",
            "prop": true,
            "propName": "align",
            "readonly": false,
            "value": "string"
          },
          "ch": {
            "attr": false,
            "attrName": "char",
            "keyInterfaceName": "HTMLTableColElement",
            "name": "ch",
            "prop": true,
            "propName": "ch",
            "readonly": false,
            "value": "string"
          },
          "char": {
            "attr": true,
            "attrName": "char",
            "keyInterfaceName": "HTMLTableColElement",
            "name": "char",
            "prop": false,
            "propName": "ch",
            "readonly": false,
            "value": "string"
          },
          "charoff": {
            "attr": true,
            "attrName": "charoff",
            "keyInterfaceName": "HTMLTableColElement",
            "name": "charoff",
            "prop": false,
            "propName": "chOff",
            "readonly": false,
            "value": "string"
          },
          "chOff": {
            "attr": false,
            "attrName": "charoff",
            "keyInterfaceName": "HTMLTableColElement",
            "name": "chOff",
            "prop": true,
            "propName": "chOff",
            "readonly": false,
            "value": "string"
          },
          "span": {
            "attr": true,
            "attrName": "span",
            "keyInterfaceName": "HTMLTableColElement",
            "name": "span",
            "prop": true,
            "propName": "span",
            "readonly": false,
            "value": "number"
          },
          "vAlign": {
            "attr": false,
            "attrName": "valign",
            "keyInterfaceName": "HTMLTableColElement",
            "name": "vAlign",
            "prop": true,
            "propName": "vAlign",
            "readonly": false,
            "value": "string"
          },
          "valign": {
            "attr": true,
            "attrName": "valign",
            "keyInterfaceName": "HTMLTableColElement",
            "name": "valign",
            "prop": false,
            "propName": "vAlign",
            "readonly": false,
            "value": "string"
          },
          "width": {
            "attr": true,
            "attrName": "width",
            "keyInterfaceName": "HTMLTableColElement",
            "name": "width",
            "prop": true,
            "propName": "width",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLTableColElement"
      },
      "colgroup": {
        "booleans": [],
        "events": [],
        "keys": {
          "align": {
            "attr": true,
            "attrName": "align",
            "keyInterfaceName": "HTMLTableColElement",
            "name": "align",
            "prop": true,
            "propName": "align",
            "readonly": false,
            "value": "string"
          },
          "ch": {
            "attr": false,
            "attrName": "char",
            "keyInterfaceName": "HTMLTableColElement",
            "name": "ch",
            "prop": true,
            "propName": "ch",
            "readonly": false,
            "value": "string"
          },
          "char": {
            "attr": true,
            "attrName": "char",
            "keyInterfaceName": "HTMLTableColElement",
            "name": "char",
            "prop": false,
            "propName": "ch",
            "readonly": false,
            "value": "string"
          },
          "charoff": {
            "attr": true,
            "attrName": "charoff",
            "keyInterfaceName": "HTMLTableColElement",
            "name": "charoff",
            "prop": false,
            "propName": "chOff",
            "readonly": false,
            "value": "string"
          },
          "chOff": {
            "attr": false,
            "attrName": "charoff",
            "keyInterfaceName": "HTMLTableColElement",
            "name": "chOff",
            "prop": true,
            "propName": "chOff",
            "readonly": false,
            "value": "string"
          },
          "span": {
            "attr": true,
            "attrName": "span",
            "keyInterfaceName": "HTMLTableColElement",
            "name": "span",
            "prop": true,
            "propName": "span",
            "readonly": false,
            "value": "number"
          },
          "vAlign": {
            "attr": false,
            "attrName": "valign",
            "keyInterfaceName": "HTMLTableColElement",
            "name": "vAlign",
            "prop": true,
            "propName": "vAlign",
            "readonly": false,
            "value": "string"
          },
          "valign": {
            "attr": true,
            "attrName": "valign",
            "keyInterfaceName": "HTMLTableColElement",
            "name": "valign",
            "prop": false,
            "propName": "vAlign",
            "readonly": false,
            "value": "string"
          },
          "width": {
            "attr": true,
            "attrName": "width",
            "keyInterfaceName": "HTMLTableColElement",
            "name": "width",
            "prop": true,
            "propName": "width",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLTableColElement"
      },
      "content": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLUnknownElement"
      },
      "data": {
        "booleans": [],
        "events": [],
        "keys": {
          "value": {
            "attr": true,
            "attrName": "value",
            "keyInterfaceName": "HTMLDataElement",
            "name": "value",
            "prop": true,
            "propName": "value",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLDataElement"
      },
      "datalist": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "HTMLDataListElement.options"
        ],
        "tagInterfaceName": "HTMLDataListElement"
      },
      "dd": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "del": {
        "booleans": [],
        "events": [],
        "keys": {
          "cite": {
            "attr": true,
            "attrName": "cite",
            "keyInterfaceName": "HTMLModElement",
            "name": "cite",
            "prop": true,
            "propName": "cite",
            "readonly": false,
            "value": "string"
          },
          "dateTime": {
            "attr": false,
            "attrName": "datetime",
            "keyInterfaceName": "HTMLModElement",
            "name": "dateTime",
            "prop": true,
            "propName": "dateTime",
            "readonly": false,
            "value": "string"
          },
          "datetime": {
            "attr": true,
            "attrName": "datetime",
            "keyInterfaceName": "HTMLModElement",
            "name": "datetime",
            "prop": false,
            "propName": "dateTime",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLModElement"
      },
      "details": {
        "booleans": [
          "HTMLDetailsElement.open"
        ],
        "events": [],
        "keys": {
          "name": {
            "attr": true,
            "attrName": "name",
            "keyInterfaceName": "HTMLDetailsElement",
            "name": "name",
            "prop": true,
            "propName": "name",
            "readonly": false,
            "value": "string"
          },
          "open": {
            "attr": true,
            "attrName": "open",
            "keyInterfaceName": "HTMLDetailsElement",
            "name": "open",
            "prop": true,
            "propName": "open",
            "readonly": false,
            "value": "boolean"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLDetailsElement"
      },
      "dfn": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "dialog": {
        "booleans": [
          "HTMLDialogElement.open"
        ],
        "events": [],
        "keys": {
          "open": {
            "attr": true,
            "attrName": "open",
            "keyInterfaceName": "HTMLDialogElement",
            "name": "open",
            "prop": true,
            "propName": "open",
            "readonly": false,
            "value": "boolean"
          },
          "returnValue": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLDialogElement",
            "name": "returnValue",
            "prop": true,
            "propName": "returnValue",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLDialogElement"
      },
      "dir": {
        "booleans": [
          "HTMLDirectoryElement.compact"
        ],
        "events": [],
        "keys": {
          "compact": {
            "attr": true,
            "attrName": "compact",
            "keyInterfaceName": "HTMLDirectoryElement",
            "name": "compact",
            "prop": true,
            "propName": "compact",
            "readonly": false,
            "value": "boolean"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLDirectoryElement"
      },
      "div": {
        "booleans": [],
        "events": [],
        "keys": {
          "align": {
            "attr": true,
            "attrName": "align",
            "keyInterfaceName": "HTMLDivElement",
            "name": "align",
            "prop": true,
            "propName": "align",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLDivElement"
      },
      "dl": {
        "booleans": [
          "HTMLDListElement.compact"
        ],
        "events": [],
        "keys": {
          "compact": {
            "attr": true,
            "attrName": "compact",
            "keyInterfaceName": "HTMLDListElement",
            "name": "compact",
            "prop": true,
            "propName": "compact",
            "readonly": false,
            "value": "boolean"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLDListElement"
      },
      "dt": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "em": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "embed": {
        "booleans": [],
        "events": [],
        "keys": {
          "align": {
            "attr": true,
            "attrName": "align",
            "keyInterfaceName": "HTMLEmbedElement",
            "name": "align",
            "prop": true,
            "propName": "align",
            "readonly": false,
            "value": "string"
          },
          "height": {
            "attr": true,
            "attrName": "height",
            "keyInterfaceName": "HTMLEmbedElement",
            "name": "height",
            "prop": true,
            "propName": "height",
            "readonly": false,
            "value": "string"
          },
          "name": {
            "attr": true,
            "attrName": "name",
            "keyInterfaceName": "HTMLEmbedElement",
            "name": "name",
            "prop": true,
            "propName": "name",
            "readonly": false,
            "value": "string"
          },
          "src": {
            "attr": true,
            "attrName": "src",
            "keyInterfaceName": "HTMLEmbedElement",
            "name": "src",
            "prop": true,
            "propName": "src",
            "readonly": false,
            "value": "string"
          },
          "type": {
            "attr": true,
            "attrName": "type",
            "keyInterfaceName": "HTMLEmbedElement",
            "name": "type",
            "prop": true,
            "propName": "type",
            "readonly": false,
            "value": "string"
          },
          "width": {
            "attr": true,
            "attrName": "width",
            "keyInterfaceName": "HTMLEmbedElement",
            "name": "width",
            "prop": true,
            "propName": "width",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLEmbedElement"
      },
      "fieldset": {
        "booleans": [
          "HTMLFieldSetElement.disabled"
        ],
        "events": [],
        "keys": {
          "disabled": {
            "attr": true,
            "attrName": "disabled",
            "keyInterfaceName": "HTMLFieldSetElement",
            "name": "disabled",
            "prop": true,
            "propName": "disabled",
            "readonly": false,
            "value": "boolean"
          },
          "name": {
            "attr": true,
            "attrName": "name",
            "keyInterfaceName": "HTMLFieldSetElement",
            "name": "name",
            "prop": true,
            "propName": "name",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [
          "HTMLFieldSetElement.elements",
          "HTMLFieldSetElement.form",
          "HTMLFieldSetElement.type",
          "HTMLFieldSetElement.validationMessage",
          "HTMLFieldSetElement.validity",
          "HTMLFieldSetElement.willValidate"
        ],
        "tagInterfaceName": "HTMLFieldSetElement"
      },
      "figcaption": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "figure": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "font": {
        "booleans": [],
        "events": [],
        "keys": {
          "color": {
            "attr": true,
            "attrName": "color",
            "keyInterfaceName": "HTMLFontElement",
            "name": "color",
            "prop": true,
            "propName": "color",
            "readonly": false,
            "value": "string"
          },
          "face": {
            "attr": true,
            "attrName": "face",
            "keyInterfaceName": "HTMLFontElement",
            "name": "face",
            "prop": true,
            "propName": "face",
            "readonly": false,
            "value": "string"
          },
          "size": {
            "attr": true,
            "attrName": "size",
            "keyInterfaceName": "HTMLFontElement",
            "name": "size",
            "prop": true,
            "propName": "size",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLFontElement"
      },
      "footer": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "form": {
        "booleans": [
          "HTMLFormElement.noValidate",
          "HTMLFormElement.novalidate"
        ],
        "events": [],
        "keys": {
          "acceptCharset": {
            "attr": false,
            "attrName": "accept-charset",
            "keyInterfaceName": "HTMLFormElement",
            "name": "acceptCharset",
            "prop": true,
            "propName": "acceptCharset",
            "readonly": false,
            "value": "string"
          },
          "accept-charset": {
            "attr": true,
            "attrName": "accept-charset",
            "keyInterfaceName": "HTMLFormElement",
            "name": "accept-charset",
            "prop": false,
            "propName": "acceptCharset",
            "readonly": false,
            "value": "string"
          },
          "action": {
            "attr": true,
            "attrName": "action",
            "keyInterfaceName": "HTMLFormElement",
            "name": "action",
            "prop": true,
            "propName": "action",
            "readonly": false,
            "value": "string"
          },
          "autocomplete": {
            "attr": true,
            "attrName": "autocomplete",
            "keyInterfaceName": "HTMLFormElement",
            "name": "autocomplete",
            "prop": true,
            "propName": "autocomplete",
            "readonly": false,
            "value": "string"
          },
          "encoding": {
            "attr": false,
            "attrName": "enctype",
            "keyInterfaceName": "HTMLFormElement",
            "name": "encoding",
            "prop": true,
            "propName": "encoding",
            "readonly": false,
            "value": "string"
          },
          "enctype": {
            "attr": true,
            "attrName": "enctype",
            "keyInterfaceName": "HTMLFormElement",
            "name": "enctype",
            "prop": true,
            "propName": "encoding",
            "readonly": false,
            "value": "string"
          },
          "method": {
            "attr": true,
            "attrName": "method",
            "keyInterfaceName": "HTMLFormElement",
            "name": "method",
            "prop": true,
            "propName": "method",
            "readonly": false,
            "value": "string"
          },
          "name": {
            "attr": true,
            "attrName": "name",
            "keyInterfaceName": "HTMLFormElement",
            "name": "name",
            "prop": true,
            "propName": "name",
            "readonly": false,
            "value": "string"
          },
          "noValidate": {
            "attr": false,
            "attrName": "novalidate",
            "keyInterfaceName": "HTMLFormElement",
            "name": "noValidate",
            "prop": true,
            "propName": "noValidate",
            "readonly": false,
            "value": "boolean"
          },
          "novalidate": {
            "attr": true,
            "attrName": "novalidate",
            "keyInterfaceName": "HTMLFormElement",
            "name": "novalidate",
            "prop": false,
            "propName": "noValidate",
            "readonly": false,
            "value": "boolean"
          },
          "rel": {
            "attr": true,
            "attrName": "rel",
            "keyInterfaceName": "HTMLFormElement",
            "name": "rel",
            "prop": true,
            "propName": "relList",
            "readonly": false,
            "value": "string"
          },
          "relList": {
            "attr": false,
            "attrName": "rel",
            "keyInterfaceName": "HTMLFormElement",
            "name": "relList",
            "prop": true,
            "propName": "relList",
            "readonly": false,
            "value": "string"
          },
          "target": {
            "attr": true,
            "attrName": "target",
            "keyInterfaceName": "HTMLFormElement",
            "name": "target",
            "prop": true,
            "propName": "target",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [
          "HTMLFormElement.elements",
          "HTMLFormElement.length"
        ],
        "tagInterfaceName": "HTMLFormElement"
      },
      "frame": {
        "booleans": [
          "HTMLFrameElement.noResize",
          "HTMLFrameElement.noresize"
        ],
        "events": [],
        "keys": {
          "frameBorder": {
            "attr": false,
            "attrName": "frameborder",
            "keyInterfaceName": "HTMLFrameElement",
            "name": "frameBorder",
            "prop": true,
            "propName": "frameBorder",
            "readonly": false,
            "value": "string"
          },
          "frameborder": {
            "attr": true,
            "attrName": "frameborder",
            "keyInterfaceName": "HTMLFrameElement",
            "name": "frameborder",
            "prop": false,
            "propName": "frameBorder",
            "readonly": false,
            "value": "string"
          },
          "longDesc": {
            "attr": false,
            "attrName": "longdesc",
            "keyInterfaceName": "HTMLFrameElement",
            "name": "longDesc",
            "prop": true,
            "propName": "longDesc",
            "readonly": false,
            "value": "string"
          },
          "longdesc": {
            "attr": true,
            "attrName": "longdesc",
            "keyInterfaceName": "HTMLFrameElement",
            "name": "longdesc",
            "prop": false,
            "propName": "longDesc",
            "readonly": false,
            "value": "string"
          },
          "marginHeight": {
            "attr": false,
            "attrName": "marginheight",
            "keyInterfaceName": "HTMLFrameElement",
            "name": "marginHeight",
            "prop": true,
            "propName": "marginHeight",
            "readonly": false,
            "value": "string"
          },
          "marginheight": {
            "attr": true,
            "attrName": "marginheight",
            "keyInterfaceName": "HTMLFrameElement",
            "name": "marginheight",
            "prop": false,
            "propName": "marginHeight",
            "readonly": false,
            "value": "string"
          },
          "marginWidth": {
            "attr": false,
            "attrName": "marginwidth",
            "keyInterfaceName": "HTMLFrameElement",
            "name": "marginWidth",
            "prop": true,
            "propName": "marginWidth",
            "readonly": false,
            "value": "string"
          },
          "marginwidth": {
            "attr": true,
            "attrName": "marginwidth",
            "keyInterfaceName": "HTMLFrameElement",
            "name": "marginwidth",
            "prop": false,
            "propName": "marginWidth",
            "readonly": false,
            "value": "string"
          },
          "name": {
            "attr": true,
            "attrName": "name",
            "keyInterfaceName": "HTMLFrameElement",
            "name": "name",
            "prop": true,
            "propName": "name",
            "readonly": false,
            "value": "string"
          },
          "noResize": {
            "attr": false,
            "attrName": "noresize",
            "keyInterfaceName": "HTMLFrameElement",
            "name": "noResize",
            "prop": true,
            "propName": "noResize",
            "readonly": false,
            "value": "boolean"
          },
          "noresize": {
            "attr": true,
            "attrName": "noresize",
            "keyInterfaceName": "HTMLFrameElement",
            "name": "noresize",
            "prop": false,
            "propName": "noResize",
            "readonly": false,
            "value": "boolean"
          },
          "scrolling": {
            "attr": true,
            "attrName": "scrolling",
            "keyInterfaceName": "HTMLFrameElement",
            "name": "scrolling",
            "prop": true,
            "propName": "scrolling",
            "readonly": false,
            "value": "string"
          },
          "src": {
            "attr": true,
            "attrName": "src",
            "keyInterfaceName": "HTMLFrameElement",
            "name": "src",
            "prop": true,
            "propName": "src",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [
          "HTMLFrameElement.contentDocument",
          "HTMLFrameElement.contentWindow"
        ],
        "tagInterfaceName": "HTMLFrameElement"
      },
      "frameset": {
        "booleans": [],
        "events": [
          "HTMLFrameSetElement.onafterprint",
          "HTMLFrameSetElement.onbeforeprint",
          "HTMLFrameSetElement.onbeforeunload",
          "HTMLFrameSetElement.ongamepadconnected",
          "HTMLFrameSetElement.ongamepaddisconnected",
          "HTMLFrameSetElement.onhashchange",
          "HTMLFrameSetElement.onlanguagechange",
          "HTMLFrameSetElement.onmessage",
          "HTMLFrameSetElement.onmessageerror",
          "HTMLFrameSetElement.onoffline",
          "HTMLFrameSetElement.ononline",
          "HTMLFrameSetElement.onpagehide",
          "HTMLFrameSetElement.onpageshow",
          "HTMLFrameSetElement.onpopstate",
          "HTMLFrameSetElement.onrejectionhandled",
          "HTMLFrameSetElement.onstorage",
          "HTMLFrameSetElement.onunhandledrejection",
          "HTMLFrameSetElement.onunload"
        ],
        "keys": {
          "cols": {
            "attr": true,
            "attrName": "cols",
            "keyInterfaceName": "HTMLFrameSetElement",
            "name": "cols",
            "prop": true,
            "propName": "cols",
            "readonly": false,
            "value": "string"
          },
          "onafterprint": {
            "attr": true,
            "attrName": "onafterprint",
            "keyInterfaceName": "HTMLFrameSetElement",
            "name": "onafterprint",
            "prop": true,
            "propName": "onafterprint",
            "readonly": false,
            "value": "event"
          },
          "onbeforeprint": {
            "attr": true,
            "attrName": "onbeforeprint",
            "keyInterfaceName": "HTMLFrameSetElement",
            "name": "onbeforeprint",
            "prop": true,
            "propName": "onbeforeprint",
            "readonly": false,
            "value": "event"
          },
          "onbeforeunload": {
            "attr": true,
            "attrName": "onbeforeunload",
            "keyInterfaceName": "HTMLFrameSetElement",
            "name": "onbeforeunload",
            "prop": true,
            "propName": "onbeforeunload",
            "readonly": false,
            "value": "event"
          },
          "ongamepadconnected": {
            "attr": true,
            "attrName": "ongamepadconnected",
            "keyInterfaceName": "HTMLFrameSetElement",
            "name": "ongamepadconnected",
            "prop": true,
            "propName": "ongamepadconnected",
            "readonly": false,
            "value": "event"
          },
          "ongamepaddisconnected": {
            "attr": true,
            "attrName": "ongamepaddisconnected",
            "keyInterfaceName": "HTMLFrameSetElement",
            "name": "ongamepaddisconnected",
            "prop": true,
            "propName": "ongamepaddisconnected",
            "readonly": false,
            "value": "event"
          },
          "onhashchange": {
            "attr": true,
            "attrName": "onhashchange",
            "keyInterfaceName": "HTMLFrameSetElement",
            "name": "onhashchange",
            "prop": true,
            "propName": "onhashchange",
            "readonly": false,
            "value": "event"
          },
          "onlanguagechange": {
            "attr": true,
            "attrName": "onlanguagechange",
            "keyInterfaceName": "HTMLFrameSetElement",
            "name": "onlanguagechange",
            "prop": true,
            "propName": "onlanguagechange",
            "readonly": false,
            "value": "event"
          },
          "onmessage": {
            "attr": true,
            "attrName": "onmessage",
            "keyInterfaceName": "HTMLFrameSetElement",
            "name": "onmessage",
            "prop": true,
            "propName": "onmessage",
            "readonly": false,
            "value": "event"
          },
          "onmessageerror": {
            "attr": true,
            "attrName": "onmessageerror",
            "keyInterfaceName": "HTMLFrameSetElement",
            "name": "onmessageerror",
            "prop": true,
            "propName": "onmessageerror",
            "readonly": false,
            "value": "event"
          },
          "onoffline": {
            "attr": true,
            "attrName": "onoffline",
            "keyInterfaceName": "HTMLFrameSetElement",
            "name": "onoffline",
            "prop": true,
            "propName": "onoffline",
            "readonly": false,
            "value": "event"
          },
          "ononline": {
            "attr": true,
            "attrName": "ononline",
            "keyInterfaceName": "HTMLFrameSetElement",
            "name": "ononline",
            "prop": true,
            "propName": "ononline",
            "readonly": false,
            "value": "event"
          },
          "onpagehide": {
            "attr": true,
            "attrName": "onpagehide",
            "keyInterfaceName": "HTMLFrameSetElement",
            "name": "onpagehide",
            "prop": true,
            "propName": "onpagehide",
            "readonly": false,
            "value": "event"
          },
          "onpageshow": {
            "attr": true,
            "attrName": "onpageshow",
            "keyInterfaceName": "HTMLFrameSetElement",
            "name": "onpageshow",
            "prop": true,
            "propName": "onpageshow",
            "readonly": false,
            "value": "event"
          },
          "onpopstate": {
            "attr": true,
            "attrName": "onpopstate",
            "keyInterfaceName": "HTMLFrameSetElement",
            "name": "onpopstate",
            "prop": true,
            "propName": "onpopstate",
            "readonly": false,
            "value": "event"
          },
          "onrejectionhandled": {
            "attr": true,
            "attrName": "onrejectionhandled",
            "keyInterfaceName": "HTMLFrameSetElement",
            "name": "onrejectionhandled",
            "prop": true,
            "propName": "onrejectionhandled",
            "readonly": false,
            "value": "event"
          },
          "onstorage": {
            "attr": true,
            "attrName": "onstorage",
            "keyInterfaceName": "HTMLFrameSetElement",
            "name": "onstorage",
            "prop": true,
            "propName": "onstorage",
            "readonly": false,
            "value": "event"
          },
          "onunhandledrejection": {
            "attr": true,
            "attrName": "onunhandledrejection",
            "keyInterfaceName": "HTMLFrameSetElement",
            "name": "onunhandledrejection",
            "prop": true,
            "propName": "onunhandledrejection",
            "readonly": false,
            "value": "event"
          },
          "onunload": {
            "attr": true,
            "attrName": "onunload",
            "keyInterfaceName": "HTMLFrameSetElement",
            "name": "onunload",
            "prop": true,
            "propName": "onunload",
            "readonly": false,
            "value": "event"
          },
          "rows": {
            "attr": true,
            "attrName": "rows",
            "keyInterfaceName": "HTMLFrameSetElement",
            "name": "rows",
            "prop": true,
            "propName": "rows",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLFrameSetElement"
      },
      "h1": {
        "booleans": [],
        "events": [],
        "keys": {
          "align": {
            "attr": true,
            "attrName": "align",
            "keyInterfaceName": "HTMLHeadingElement",
            "name": "align",
            "prop": true,
            "propName": "align",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLHeadingElement"
      },
      "h2": {
        "booleans": [],
        "events": [],
        "keys": {
          "align": {
            "attr": true,
            "attrName": "align",
            "keyInterfaceName": "HTMLHeadingElement",
            "name": "align",
            "prop": true,
            "propName": "align",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLHeadingElement"
      },
      "h3": {
        "booleans": [],
        "events": [],
        "keys": {
          "align": {
            "attr": true,
            "attrName": "align",
            "keyInterfaceName": "HTMLHeadingElement",
            "name": "align",
            "prop": true,
            "propName": "align",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLHeadingElement"
      },
      "h4": {
        "booleans": [],
        "events": [],
        "keys": {
          "align": {
            "attr": true,
            "attrName": "align",
            "keyInterfaceName": "HTMLHeadingElement",
            "name": "align",
            "prop": true,
            "propName": "align",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLHeadingElement"
      },
      "h5": {
        "booleans": [],
        "events": [],
        "keys": {
          "align": {
            "attr": true,
            "attrName": "align",
            "keyInterfaceName": "HTMLHeadingElement",
            "name": "align",
            "prop": true,
            "propName": "align",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLHeadingElement"
      },
      "h6": {
        "booleans": [],
        "events": [],
        "keys": {
          "align": {
            "attr": true,
            "attrName": "align",
            "keyInterfaceName": "HTMLHeadingElement",
            "name": "align",
            "prop": true,
            "propName": "align",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLHeadingElement"
      },
      "head": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLHeadElement"
      },
      "header": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "hgroup": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "hr": {
        "booleans": [
          "HTMLHRElement.noShade",
          "HTMLHRElement.noshade"
        ],
        "events": [],
        "keys": {
          "align": {
            "attr": true,
            "attrName": "align",
            "keyInterfaceName": "HTMLHRElement",
            "name": "align",
            "prop": true,
            "propName": "align",
            "readonly": false,
            "value": "string"
          },
          "color": {
            "attr": true,
            "attrName": "color",
            "keyInterfaceName": "HTMLHRElement",
            "name": "color",
            "prop": true,
            "propName": "color",
            "readonly": false,
            "value": "string"
          },
          "noShade": {
            "attr": false,
            "attrName": "noshade",
            "keyInterfaceName": "HTMLHRElement",
            "name": "noShade",
            "prop": true,
            "propName": "noShade",
            "readonly": false,
            "value": "boolean"
          },
          "noshade": {
            "attr": true,
            "attrName": "noshade",
            "keyInterfaceName": "HTMLHRElement",
            "name": "noshade",
            "prop": false,
            "propName": "noShade",
            "readonly": false,
            "value": "boolean"
          },
          "size": {
            "attr": true,
            "attrName": "size",
            "keyInterfaceName": "HTMLHRElement",
            "name": "size",
            "prop": true,
            "propName": "size",
            "readonly": false,
            "value": "string"
          },
          "width": {
            "attr": true,
            "attrName": "width",
            "keyInterfaceName": "HTMLHRElement",
            "name": "width",
            "prop": true,
            "propName": "width",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLHRElement"
      },
      "html": {
        "booleans": [],
        "events": [],
        "keys": {
          "version": {
            "attr": true,
            "attrName": "version",
            "keyInterfaceName": "HTMLHtmlElement",
            "name": "version",
            "prop": true,
            "propName": "version",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLHtmlElement"
      },
      "i": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "iframe": {
        "booleans": [
          "HTMLIFrameElement.allowFullscreen",
          "HTMLIFrameElement.allowfullscreen"
        ],
        "events": [],
        "keys": {
          "align": {
            "attr": true,
            "attrName": "align",
            "keyInterfaceName": "HTMLIFrameElement",
            "name": "align",
            "prop": true,
            "propName": "align",
            "readonly": false,
            "value": "string"
          },
          "allow": {
            "attr": true,
            "attrName": "allow",
            "keyInterfaceName": "HTMLIFrameElement",
            "name": "allow",
            "prop": true,
            "propName": "allow",
            "readonly": false,
            "value": "string"
          },
          "allowFullscreen": {
            "attr": false,
            "attrName": "allowfullscreen",
            "keyInterfaceName": "HTMLIFrameElement",
            "name": "allowFullscreen",
            "prop": true,
            "propName": "allowFullscreen",
            "readonly": false,
            "value": "boolean"
          },
          "allowfullscreen": {
            "attr": true,
            "attrName": "allowfullscreen",
            "keyInterfaceName": "HTMLIFrameElement",
            "name": "allowfullscreen",
            "prop": false,
            "propName": "allowFullscreen",
            "readonly": false,
            "value": "boolean"
          },
          "frameBorder": {
            "attr": false,
            "attrName": "frameborder",
            "keyInterfaceName": "HTMLIFrameElement",
            "name": "frameBorder",
            "prop": true,
            "propName": "frameBorder",
            "readonly": false,
            "value": "string"
          },
          "frameborder": {
            "attr": true,
            "attrName": "frameborder",
            "keyInterfaceName": "HTMLIFrameElement",
            "name": "frameborder",
            "prop": false,
            "propName": "frameBorder",
            "readonly": false,
            "value": "string"
          },
          "height": {
            "attr": true,
            "attrName": "height",
            "keyInterfaceName": "HTMLIFrameElement",
            "name": "height",
            "prop": true,
            "propName": "height",
            "readonly": false,
            "value": "string"
          },
          "loading": {
            "attr": true,
            "attrName": "loading",
            "keyInterfaceName": "HTMLIFrameElement",
            "name": "loading",
            "prop": true,
            "propName": "loading",
            "readonly": false,
            "value": "string"
          },
          "longDesc": {
            "attr": false,
            "attrName": "longdesc",
            "keyInterfaceName": "HTMLIFrameElement",
            "name": "longDesc",
            "prop": true,
            "propName": "longDesc",
            "readonly": false,
            "value": "string"
          },
          "longdesc": {
            "attr": true,
            "attrName": "longdesc",
            "keyInterfaceName": "HTMLIFrameElement",
            "name": "longdesc",
            "prop": false,
            "propName": "longDesc",
            "readonly": false,
            "value": "string"
          },
          "marginHeight": {
            "attr": false,
            "attrName": "marginheight",
            "keyInterfaceName": "HTMLIFrameElement",
            "name": "marginHeight",
            "prop": true,
            "propName": "marginHeight",
            "readonly": false,
            "value": "string"
          },
          "marginheight": {
            "attr": true,
            "attrName": "marginheight",
            "keyInterfaceName": "HTMLIFrameElement",
            "name": "marginheight",
            "prop": false,
            "propName": "marginHeight",
            "readonly": false,
            "value": "string"
          },
          "marginWidth": {
            "attr": false,
            "attrName": "marginwidth",
            "keyInterfaceName": "HTMLIFrameElement",
            "name": "marginWidth",
            "prop": true,
            "propName": "marginWidth",
            "readonly": false,
            "value": "string"
          },
          "marginwidth": {
            "attr": true,
            "attrName": "marginwidth",
            "keyInterfaceName": "HTMLIFrameElement",
            "name": "marginwidth",
            "prop": false,
            "propName": "marginWidth",
            "readonly": false,
            "value": "string"
          },
          "name": {
            "attr": true,
            "attrName": "name",
            "keyInterfaceName": "HTMLIFrameElement",
            "name": "name",
            "prop": true,
            "propName": "name",
            "readonly": false,
            "value": "string"
          },
          "referrerPolicy": {
            "attr": false,
            "attrName": "referrerpolicy",
            "keyInterfaceName": "HTMLIFrameElement",
            "name": "referrerPolicy",
            "prop": true,
            "propName": "referrerPolicy",
            "readonly": false,
            "value": "string"
          },
          "referrerpolicy": {
            "attr": true,
            "attrName": "referrerpolicy",
            "keyInterfaceName": "HTMLIFrameElement",
            "name": "referrerpolicy",
            "prop": false,
            "propName": "referrerPolicy",
            "readonly": false,
            "value": "string"
          },
          "sandbox": {
            "attr": true,
            "attrName": "sandbox",
            "keyInterfaceName": "HTMLIFrameElement",
            "name": "sandbox",
            "prop": true,
            "propName": "sandbox",
            "readonly": false,
            "value": "string"
          },
          "scrolling": {
            "attr": true,
            "attrName": "scrolling",
            "keyInterfaceName": "HTMLIFrameElement",
            "name": "scrolling",
            "prop": true,
            "propName": "scrolling",
            "readonly": false,
            "value": "string"
          },
          "src": {
            "attr": true,
            "attrName": "src",
            "keyInterfaceName": "HTMLIFrameElement",
            "name": "src",
            "prop": true,
            "propName": "src",
            "readonly": false,
            "value": "string"
          },
          "srcdoc": {
            "attr": true,
            "attrName": "srcdoc",
            "keyInterfaceName": "HTMLIFrameElement",
            "name": "srcdoc",
            "prop": true,
            "propName": "srcdoc",
            "readonly": false,
            "value": "string"
          },
          "width": {
            "attr": true,
            "attrName": "width",
            "keyInterfaceName": "HTMLIFrameElement",
            "name": "width",
            "prop": true,
            "propName": "width",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [
          "HTMLIFrameElement.contentDocument",
          "HTMLIFrameElement.contentWindow"
        ],
        "tagInterfaceName": "HTMLIFrameElement"
      },
      "image": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "img": {
        "booleans": [
          "HTMLImageElement.isMap",
          "HTMLImageElement.ismap"
        ],
        "events": [],
        "keys": {
          "align": {
            "attr": true,
            "attrName": "align",
            "keyInterfaceName": "HTMLImageElement",
            "name": "align",
            "prop": true,
            "propName": "align",
            "readonly": false,
            "value": "string"
          },
          "alt": {
            "attr": true,
            "attrName": "alt",
            "keyInterfaceName": "HTMLImageElement",
            "name": "alt",
            "prop": true,
            "propName": "alt",
            "readonly": false,
            "value": "string"
          },
          "border": {
            "attr": true,
            "attrName": "border",
            "keyInterfaceName": "HTMLImageElement",
            "name": "border",
            "prop": true,
            "propName": "border",
            "readonly": false,
            "value": "string"
          },
          "crossOrigin": {
            "attr": false,
            "attrName": "crossorigin",
            "keyInterfaceName": "HTMLImageElement",
            "name": "crossOrigin",
            "prop": true,
            "propName": "crossOrigin",
            "readonly": false,
            "value": "string"
          },
          "crossorigin": {
            "attr": true,
            "attrName": "crossorigin",
            "keyInterfaceName": "HTMLImageElement",
            "name": "crossorigin",
            "prop": false,
            "propName": "crossOrigin",
            "readonly": false,
            "value": "string"
          },
          "decoding": {
            "attr": true,
            "attrName": "decoding",
            "keyInterfaceName": "HTMLImageElement",
            "name": "decoding",
            "prop": true,
            "propName": "decoding",
            "readonly": false,
            "value": "string"
          },
          "fetchPriority": {
            "attr": false,
            "attrName": "fetchpriority",
            "keyInterfaceName": "HTMLImageElement",
            "name": "fetchPriority",
            "prop": true,
            "propName": "fetchPriority",
            "readonly": false,
            "value": "string"
          },
          "fetchpriority": {
            "attr": true,
            "attrName": "fetchpriority",
            "keyInterfaceName": "HTMLImageElement",
            "name": "fetchpriority",
            "prop": false,
            "propName": "fetchPriority",
            "readonly": false,
            "value": "string"
          },
          "height": {
            "attr": true,
            "attrName": "height",
            "keyInterfaceName": "HTMLImageElement",
            "name": "height",
            "prop": true,
            "propName": "height",
            "readonly": false,
            "value": "number"
          },
          "hspace": {
            "attr": true,
            "attrName": "hspace",
            "keyInterfaceName": "HTMLImageElement",
            "name": "hspace",
            "prop": true,
            "propName": "hspace",
            "readonly": false,
            "value": "number"
          },
          "isMap": {
            "attr": false,
            "attrName": "ismap",
            "keyInterfaceName": "HTMLImageElement",
            "name": "isMap",
            "prop": true,
            "propName": "isMap",
            "readonly": false,
            "value": "boolean"
          },
          "ismap": {
            "attr": true,
            "attrName": "ismap",
            "keyInterfaceName": "HTMLImageElement",
            "name": "ismap",
            "prop": false,
            "propName": "isMap",
            "readonly": false,
            "value": "boolean"
          },
          "loading": {
            "attr": true,
            "attrName": "loading",
            "keyInterfaceName": "HTMLImageElement",
            "name": "loading",
            "prop": true,
            "propName": "loading",
            "readonly": false,
            "value": "string"
          },
          "longDesc": {
            "attr": false,
            "attrName": "longdesc",
            "keyInterfaceName": "HTMLImageElement",
            "name": "longDesc",
            "prop": true,
            "propName": "longDesc",
            "readonly": false,
            "value": "string"
          },
          "longdesc": {
            "attr": true,
            "attrName": "longdesc",
            "keyInterfaceName": "HTMLImageElement",
            "name": "longdesc",
            "prop": false,
            "propName": "longDesc",
            "readonly": false,
            "value": "string"
          },
          "lowsrc": {
            "attr": true,
            "attrName": "lowsrc",
            "keyInterfaceName": "HTMLImageElement",
            "name": "lowsrc",
            "prop": true,
            "propName": "lowsrc",
            "readonly": false,
            "value": "string"
          },
          "name": {
            "attr": true,
            "attrName": "name",
            "keyInterfaceName": "HTMLImageElement",
            "name": "name",
            "prop": true,
            "propName": "name",
            "readonly": false,
            "value": "string"
          },
          "referrerPolicy": {
            "attr": false,
            "attrName": "referrerpolicy",
            "keyInterfaceName": "HTMLImageElement",
            "name": "referrerPolicy",
            "prop": true,
            "propName": "referrerPolicy",
            "readonly": false,
            "value": "string"
          },
          "referrerpolicy": {
            "attr": true,
            "attrName": "referrerpolicy",
            "keyInterfaceName": "HTMLImageElement",
            "name": "referrerpolicy",
            "prop": false,
            "propName": "referrerPolicy",
            "readonly": false,
            "value": "string"
          },
          "sizes": {
            "attr": true,
            "attrName": "sizes",
            "keyInterfaceName": "HTMLImageElement",
            "name": "sizes",
            "prop": true,
            "propName": "sizes",
            "readonly": false,
            "value": "string"
          },
          "src": {
            "attr": true,
            "attrName": "src",
            "keyInterfaceName": "HTMLImageElement",
            "name": "src",
            "prop": true,
            "propName": "src",
            "readonly": false,
            "value": "string"
          },
          "srcset": {
            "attr": true,
            "attrName": "srcset",
            "keyInterfaceName": "HTMLImageElement",
            "name": "srcset",
            "prop": true,
            "propName": "srcset",
            "readonly": false,
            "value": "string"
          },
          "useMap": {
            "attr": false,
            "attrName": "usemap",
            "keyInterfaceName": "HTMLImageElement",
            "name": "useMap",
            "prop": true,
            "propName": "useMap",
            "readonly": false,
            "value": "string"
          },
          "usemap": {
            "attr": true,
            "attrName": "usemap",
            "keyInterfaceName": "HTMLImageElement",
            "name": "usemap",
            "prop": false,
            "propName": "useMap",
            "readonly": false,
            "value": "string"
          },
          "vspace": {
            "attr": true,
            "attrName": "vspace",
            "keyInterfaceName": "HTMLImageElement",
            "name": "vspace",
            "prop": true,
            "propName": "vspace",
            "readonly": false,
            "value": "number"
          },
          "width": {
            "attr": true,
            "attrName": "width",
            "keyInterfaceName": "HTMLImageElement",
            "name": "width",
            "prop": true,
            "propName": "width",
            "readonly": false,
            "value": "number"
          }
        },
        "readonly": [
          "HTMLImageElement.complete",
          "HTMLImageElement.currentSrc",
          "HTMLImageElement.naturalHeight",
          "HTMLImageElement.naturalWidth",
          "HTMLImageElement.x",
          "HTMLImageElement.y"
        ],
        "tagInterfaceName": "HTMLImageElement"
      },
      "input": {
        "booleans": [
          "HTMLInputElement.checked",
          "HTMLInputElement.checked",
          "HTMLInputElement.defaultChecked",
          "HTMLInputElement.disabled",
          "HTMLInputElement.formNoValidate",
          "HTMLInputElement.formnovalidate",
          "HTMLInputElement.indeterminate",
          "HTMLInputElement.multiple",
          "HTMLInputElement.readOnly",
          "HTMLInputElement.readonly",
          "HTMLInputElement.required",
          "HTMLInputElement.webkitdirectory"
        ],
        "events": [],
        "keys": {
          "accept": {
            "attr": true,
            "attrName": "accept",
            "keyInterfaceName": "HTMLInputElement",
            "name": "accept",
            "prop": true,
            "propName": "accept",
            "readonly": false,
            "value": "string"
          },
          "align": {
            "attr": true,
            "attrName": "align",
            "keyInterfaceName": "HTMLInputElement",
            "name": "align",
            "prop": true,
            "propName": "align",
            "readonly": false,
            "value": "string"
          },
          "alt": {
            "attr": true,
            "attrName": "alt",
            "keyInterfaceName": "HTMLInputElement",
            "name": "alt",
            "prop": true,
            "propName": "alt",
            "readonly": false,
            "value": "string"
          },
          "autocomplete": {
            "attr": true,
            "attrName": "autocomplete",
            "keyInterfaceName": "HTMLInputElement",
            "name": "autocomplete",
            "prop": true,
            "propName": "autocomplete",
            "readonly": false,
            "value": "string"
          },
          "checked": {
            "attr": true,
            "attrName": "checked",
            "keyInterfaceName": "HTMLInputElement",
            "name": "checked",
            "prop": true,
            "propName": "defaultChecked",
            "readonly": false,
            "value": "boolean"
          },
          "defaultChecked": {
            "attr": false,
            "attrName": "checked",
            "keyInterfaceName": "HTMLInputElement",
            "name": "defaultChecked",
            "prop": true,
            "propName": "defaultChecked",
            "readonly": false,
            "value": "boolean"
          },
          "defaultValue": {
            "attr": false,
            "attrName": "value",
            "keyInterfaceName": "HTMLInputElement",
            "name": "defaultValue",
            "prop": true,
            "propName": "defaultValue",
            "readonly": false,
            "value": "string"
          },
          "dirName": {
            "attr": false,
            "attrName": "dirname",
            "keyInterfaceName": "HTMLInputElement",
            "name": "dirName",
            "prop": true,
            "propName": "dirName",
            "readonly": false,
            "value": "string"
          },
          "dirname": {
            "attr": true,
            "attrName": "dirname",
            "keyInterfaceName": "HTMLInputElement",
            "name": "dirname",
            "prop": false,
            "propName": "dirName",
            "readonly": false,
            "value": "string"
          },
          "disabled": {
            "attr": true,
            "attrName": "disabled",
            "keyInterfaceName": "HTMLInputElement",
            "name": "disabled",
            "prop": true,
            "propName": "disabled",
            "readonly": false,
            "value": "boolean"
          },
          "files": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLInputElement",
            "name": "files",
            "prop": true,
            "propName": "files",
            "readonly": false,
            "value": "FileList"
          },
          "formAction": {
            "attr": false,
            "attrName": "formaction",
            "keyInterfaceName": "HTMLInputElement",
            "name": "formAction",
            "prop": true,
            "propName": "formAction",
            "readonly": false,
            "value": "string"
          },
          "formaction": {
            "attr": true,
            "attrName": "formaction",
            "keyInterfaceName": "HTMLInputElement",
            "name": "formaction",
            "prop": false,
            "propName": "formAction",
            "readonly": false,
            "value": "string"
          },
          "formEnctype": {
            "attr": false,
            "attrName": "formenctype",
            "keyInterfaceName": "HTMLInputElement",
            "name": "formEnctype",
            "prop": true,
            "propName": "formEnctype",
            "readonly": false,
            "value": "string"
          },
          "formenctype": {
            "attr": true,
            "attrName": "formenctype",
            "keyInterfaceName": "HTMLInputElement",
            "name": "formenctype",
            "prop": false,
            "propName": "formEnctype",
            "readonly": false,
            "value": "string"
          },
          "formMethod": {
            "attr": false,
            "attrName": "formmethod",
            "keyInterfaceName": "HTMLInputElement",
            "name": "formMethod",
            "prop": true,
            "propName": "formMethod",
            "readonly": false,
            "value": "string"
          },
          "formmethod": {
            "attr": true,
            "attrName": "formmethod",
            "keyInterfaceName": "HTMLInputElement",
            "name": "formmethod",
            "prop": false,
            "propName": "formMethod",
            "readonly": false,
            "value": "string"
          },
          "formNoValidate": {
            "attr": false,
            "attrName": "formnovalidate",
            "keyInterfaceName": "HTMLInputElement",
            "name": "formNoValidate",
            "prop": true,
            "propName": "formNoValidate",
            "readonly": false,
            "value": "boolean"
          },
          "formnovalidate": {
            "attr": true,
            "attrName": "formnovalidate",
            "keyInterfaceName": "HTMLInputElement",
            "name": "formnovalidate",
            "prop": false,
            "propName": "formNoValidate",
            "readonly": false,
            "value": "boolean"
          },
          "formTarget": {
            "attr": false,
            "attrName": "formtarget",
            "keyInterfaceName": "HTMLInputElement",
            "name": "formTarget",
            "prop": true,
            "propName": "formTarget",
            "readonly": false,
            "value": "string"
          },
          "formtarget": {
            "attr": true,
            "attrName": "formtarget",
            "keyInterfaceName": "HTMLInputElement",
            "name": "formtarget",
            "prop": false,
            "propName": "formTarget",
            "readonly": false,
            "value": "string"
          },
          "height": {
            "attr": true,
            "attrName": "height",
            "keyInterfaceName": "HTMLInputElement",
            "name": "height",
            "prop": true,
            "propName": "height",
            "readonly": false,
            "value": "number"
          },
          "indeterminate": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLInputElement",
            "name": "indeterminate",
            "prop": true,
            "propName": "indeterminate",
            "readonly": false,
            "value": "boolean"
          },
          "max": {
            "attr": true,
            "attrName": "max",
            "keyInterfaceName": "HTMLInputElement",
            "name": "max",
            "prop": true,
            "propName": "max",
            "readonly": false,
            "value": "string"
          },
          "maxLength": {
            "attr": false,
            "attrName": "maxlength",
            "keyInterfaceName": "HTMLInputElement",
            "name": "maxLength",
            "prop": true,
            "propName": "maxLength",
            "readonly": false,
            "value": "number"
          },
          "maxlength": {
            "attr": true,
            "attrName": "maxlength",
            "keyInterfaceName": "HTMLInputElement",
            "name": "maxlength",
            "prop": false,
            "propName": "maxLength",
            "readonly": false,
            "value": "number"
          },
          "min": {
            "attr": true,
            "attrName": "min",
            "keyInterfaceName": "HTMLInputElement",
            "name": "min",
            "prop": true,
            "propName": "min",
            "readonly": false,
            "value": "string"
          },
          "minLength": {
            "attr": false,
            "attrName": "minlength",
            "keyInterfaceName": "HTMLInputElement",
            "name": "minLength",
            "prop": true,
            "propName": "minLength",
            "readonly": false,
            "value": "number"
          },
          "minlength": {
            "attr": true,
            "attrName": "minlength",
            "keyInterfaceName": "HTMLInputElement",
            "name": "minlength",
            "prop": false,
            "propName": "minLength",
            "readonly": false,
            "value": "number"
          },
          "multiple": {
            "attr": true,
            "attrName": "multiple",
            "keyInterfaceName": "HTMLInputElement",
            "name": "multiple",
            "prop": true,
            "propName": "multiple",
            "readonly": false,
            "value": "boolean"
          },
          "name": {
            "attr": true,
            "attrName": "name",
            "keyInterfaceName": "HTMLInputElement",
            "name": "name",
            "prop": true,
            "propName": "name",
            "readonly": false,
            "value": "string"
          },
          "pattern": {
            "attr": true,
            "attrName": "pattern",
            "keyInterfaceName": "HTMLInputElement",
            "name": "pattern",
            "prop": true,
            "propName": "pattern",
            "readonly": false,
            "value": "string"
          },
          "placeholder": {
            "attr": true,
            "attrName": "placeholder",
            "keyInterfaceName": "HTMLInputElement",
            "name": "placeholder",
            "prop": true,
            "propName": "placeholder",
            "readonly": false,
            "value": "string"
          },
          "popoverTargetAction": {
            "attr": false,
            "attrName": "popovertargetaction",
            "keyInterfaceName": "HTMLInputElement",
            "name": "popoverTargetAction",
            "prop": true,
            "propName": "popoverTargetAction",
            "readonly": false,
            "value": "string"
          },
          "popovertargetaction": {
            "attr": true,
            "attrName": "popovertargetaction",
            "keyInterfaceName": "HTMLInputElement",
            "name": "popovertargetaction",
            "prop": false,
            "propName": "popoverTargetAction",
            "readonly": false,
            "value": "string"
          },
          "popoverTargetElement": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLInputElement",
            "name": "popoverTargetElement",
            "prop": true,
            "propName": "popoverTargetElement",
            "readonly": false,
            "value": "Element"
          },
          "readOnly": {
            "attr": false,
            "attrName": "readonly",
            "keyInterfaceName": "HTMLInputElement",
            "name": "readOnly",
            "prop": true,
            "propName": "readOnly",
            "readonly": false,
            "value": "boolean"
          },
          "readonly": {
            "attr": true,
            "attrName": "readonly",
            "keyInterfaceName": "HTMLInputElement",
            "name": "readonly",
            "prop": false,
            "propName": "readOnly",
            "readonly": false,
            "value": "boolean"
          },
          "required": {
            "attr": true,
            "attrName": "required",
            "keyInterfaceName": "HTMLInputElement",
            "name": "required",
            "prop": true,
            "propName": "required",
            "readonly": false,
            "value": "boolean"
          },
          "selectionDirection": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLInputElement",
            "name": "selectionDirection",
            "prop": true,
            "propName": "selectionDirection",
            "readonly": false,
            "value": "string"
          },
          "selectionEnd": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLInputElement",
            "name": "selectionEnd",
            "prop": true,
            "propName": "selectionEnd",
            "readonly": false,
            "value": "number"
          },
          "selectionStart": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLInputElement",
            "name": "selectionStart",
            "prop": true,
            "propName": "selectionStart",
            "readonly": false,
            "value": "number"
          },
          "size": {
            "attr": true,
            "attrName": "size",
            "keyInterfaceName": "HTMLInputElement",
            "name": "size",
            "prop": true,
            "propName": "size",
            "readonly": false,
            "value": "number"
          },
          "src": {
            "attr": true,
            "attrName": "src",
            "keyInterfaceName": "HTMLInputElement",
            "name": "src",
            "prop": true,
            "propName": "src",
            "readonly": false,
            "value": "string"
          },
          "step": {
            "attr": true,
            "attrName": "step",
            "keyInterfaceName": "HTMLInputElement",
            "name": "step",
            "prop": true,
            "propName": "step",
            "readonly": false,
            "value": "string"
          },
          "type": {
            "attr": true,
            "attrName": "type",
            "keyInterfaceName": "HTMLInputElement",
            "name": "type",
            "prop": true,
            "propName": "type",
            "readonly": false,
            "value": "string"
          },
          "useMap": {
            "attr": false,
            "attrName": "usemap",
            "keyInterfaceName": "HTMLInputElement",
            "name": "useMap",
            "prop": true,
            "propName": "useMap",
            "readonly": false,
            "value": "string"
          },
          "usemap": {
            "attr": true,
            "attrName": "usemap",
            "keyInterfaceName": "HTMLInputElement",
            "name": "usemap",
            "prop": false,
            "propName": "useMap",
            "readonly": false,
            "value": "string"
          },
          "value": {
            "attr": true,
            "attrName": "value",
            "keyInterfaceName": "HTMLInputElement",
            "name": "value",
            "prop": true,
            "propName": "defaultValue",
            "readonly": false,
            "value": "string"
          },
          "valueAsDate": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLInputElement",
            "name": "valueAsDate",
            "prop": true,
            "propName": "valueAsDate",
            "readonly": false,
            "value": "Date"
          },
          "valueAsNumber": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLInputElement",
            "name": "valueAsNumber",
            "prop": true,
            "propName": "valueAsNumber",
            "readonly": false,
            "value": "number"
          },
          "webkitdirectory": {
            "attr": true,
            "attrName": "webkitdirectory",
            "keyInterfaceName": "HTMLInputElement",
            "name": "webkitdirectory",
            "prop": true,
            "propName": "webkitdirectory",
            "readonly": false,
            "value": "boolean"
          },
          "width": {
            "attr": true,
            "attrName": "width",
            "keyInterfaceName": "HTMLInputElement",
            "name": "width",
            "prop": true,
            "propName": "width",
            "readonly": false,
            "value": "number"
          }
        },
        "readonly": [
          "HTMLInputElement.form",
          "HTMLInputElement.labels",
          "HTMLInputElement.list",
          "HTMLInputElement.textLength",
          "HTMLInputElement.validationMessage",
          "HTMLInputElement.validity",
          "HTMLInputElement.webkitEntries",
          "HTMLInputElement.willValidate"
        ],
        "tagInterfaceName": "HTMLInputElement"
      },
      "ins": {
        "booleans": [],
        "events": [],
        "keys": {
          "cite": {
            "attr": true,
            "attrName": "cite",
            "keyInterfaceName": "HTMLModElement",
            "name": "cite",
            "prop": true,
            "propName": "cite",
            "readonly": false,
            "value": "string"
          },
          "dateTime": {
            "attr": false,
            "attrName": "datetime",
            "keyInterfaceName": "HTMLModElement",
            "name": "dateTime",
            "prop": true,
            "propName": "dateTime",
            "readonly": false,
            "value": "string"
          },
          "datetime": {
            "attr": true,
            "attrName": "datetime",
            "keyInterfaceName": "HTMLModElement",
            "name": "datetime",
            "prop": false,
            "propName": "dateTime",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLModElement"
      },
      "isindex": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLUnknownElement"
      },
      "kbd": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "keygen": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLUnknownElement"
      },
      "label": {
        "booleans": [],
        "events": [],
        "keys": {
          "for": {
            "attr": true,
            "attrName": "for",
            "keyInterfaceName": "HTMLLabelElement",
            "name": "for",
            "prop": false,
            "propName": "htmlFor",
            "readonly": false,
            "value": "string"
          },
          "htmlFor": {
            "attr": false,
            "attrName": "for",
            "keyInterfaceName": "HTMLLabelElement",
            "name": "htmlFor",
            "prop": true,
            "propName": "htmlFor",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [
          "HTMLLabelElement.control",
          "HTMLLabelElement.form"
        ],
        "tagInterfaceName": "HTMLLabelElement"
      },
      "legend": {
        "booleans": [],
        "events": [],
        "keys": {
          "align": {
            "attr": true,
            "attrName": "align",
            "keyInterfaceName": "HTMLLegendElement",
            "name": "align",
            "prop": true,
            "propName": "align",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [
          "HTMLLegendElement.form"
        ],
        "tagInterfaceName": "HTMLLegendElement"
      },
      "li": {
        "booleans": [],
        "events": [],
        "keys": {
          "type": {
            "attr": true,
            "attrName": "type",
            "keyInterfaceName": "HTMLLIElement",
            "name": "type",
            "prop": true,
            "propName": "type",
            "readonly": false,
            "value": "string"
          },
          "value": {
            "attr": true,
            "attrName": "value",
            "keyInterfaceName": "HTMLLIElement",
            "name": "value",
            "prop": true,
            "propName": "value",
            "readonly": false,
            "value": "number"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLLIElement"
      },
      "link": {
        "booleans": [
          "HTMLLinkElement.disabled"
        ],
        "events": [],
        "keys": {
          "as": {
            "attr": true,
            "attrName": "as",
            "keyInterfaceName": "HTMLLinkElement",
            "name": "as",
            "prop": true,
            "propName": "as",
            "readonly": false,
            "value": "string"
          },
          "charset": {
            "attr": true,
            "attrName": "charset",
            "keyInterfaceName": "HTMLLinkElement",
            "name": "charset",
            "prop": true,
            "propName": "charset",
            "readonly": false,
            "value": "string"
          },
          "crossOrigin": {
            "attr": false,
            "attrName": "crossorigin",
            "keyInterfaceName": "HTMLLinkElement",
            "name": "crossOrigin",
            "prop": true,
            "propName": "crossOrigin",
            "readonly": false,
            "value": "string"
          },
          "crossorigin": {
            "attr": true,
            "attrName": "crossorigin",
            "keyInterfaceName": "HTMLLinkElement",
            "name": "crossorigin",
            "prop": false,
            "propName": "crossOrigin",
            "readonly": false,
            "value": "string"
          },
          "disabled": {
            "attr": true,
            "attrName": "disabled",
            "keyInterfaceName": "HTMLLinkElement",
            "name": "disabled",
            "prop": true,
            "propName": "disabled",
            "readonly": false,
            "value": "boolean"
          },
          "fetchPriority": {
            "attr": false,
            "attrName": "fetchpriority",
            "keyInterfaceName": "HTMLLinkElement",
            "name": "fetchPriority",
            "prop": true,
            "propName": "fetchPriority",
            "readonly": false,
            "value": "string"
          },
          "fetchpriority": {
            "attr": true,
            "attrName": "fetchpriority",
            "keyInterfaceName": "HTMLLinkElement",
            "name": "fetchpriority",
            "prop": false,
            "propName": "fetchPriority",
            "readonly": false,
            "value": "string"
          },
          "href": {
            "attr": true,
            "attrName": "href",
            "keyInterfaceName": "HTMLLinkElement",
            "name": "href",
            "prop": true,
            "propName": "href",
            "readonly": false,
            "value": "string"
          },
          "hreflang": {
            "attr": true,
            "attrName": "hreflang",
            "keyInterfaceName": "HTMLLinkElement",
            "name": "hreflang",
            "prop": true,
            "propName": "hreflang",
            "readonly": false,
            "value": "string"
          },
          "imageSizes": {
            "attr": false,
            "attrName": "imagesizes",
            "keyInterfaceName": "HTMLLinkElement",
            "name": "imageSizes",
            "prop": true,
            "propName": "imageSizes",
            "readonly": false,
            "value": "string"
          },
          "imagesizes": {
            "attr": true,
            "attrName": "imagesizes",
            "keyInterfaceName": "HTMLLinkElement",
            "name": "imagesizes",
            "prop": false,
            "propName": "imageSizes",
            "readonly": false,
            "value": "string"
          },
          "imageSrcset": {
            "attr": false,
            "attrName": "imagesrcset",
            "keyInterfaceName": "HTMLLinkElement",
            "name": "imageSrcset",
            "prop": true,
            "propName": "imageSrcset",
            "readonly": false,
            "value": "string"
          },
          "imagesrcset": {
            "attr": true,
            "attrName": "imagesrcset",
            "keyInterfaceName": "HTMLLinkElement",
            "name": "imagesrcset",
            "prop": false,
            "propName": "imageSrcset",
            "readonly": false,
            "value": "string"
          },
          "integrity": {
            "attr": true,
            "attrName": "integrity",
            "keyInterfaceName": "HTMLLinkElement",
            "name": "integrity",
            "prop": true,
            "propName": "integrity",
            "readonly": false,
            "value": "string"
          },
          "media": {
            "attr": true,
            "attrName": "media",
            "keyInterfaceName": "HTMLLinkElement",
            "name": "media",
            "prop": true,
            "propName": "media",
            "readonly": false,
            "value": "string"
          },
          "referrerPolicy": {
            "attr": false,
            "attrName": "referrerpolicy",
            "keyInterfaceName": "HTMLLinkElement",
            "name": "referrerPolicy",
            "prop": true,
            "propName": "referrerPolicy",
            "readonly": false,
            "value": "string"
          },
          "referrerpolicy": {
            "attr": true,
            "attrName": "referrerpolicy",
            "keyInterfaceName": "HTMLLinkElement",
            "name": "referrerpolicy",
            "prop": false,
            "propName": "referrerPolicy",
            "readonly": false,
            "value": "string"
          },
          "rel": {
            "attr": true,
            "attrName": "rel",
            "keyInterfaceName": "HTMLLinkElement",
            "name": "rel",
            "prop": true,
            "propName": "relList",
            "readonly": false,
            "value": "string"
          },
          "relList": {
            "attr": false,
            "attrName": "rel",
            "keyInterfaceName": "HTMLLinkElement",
            "name": "relList",
            "prop": true,
            "propName": "relList",
            "readonly": false,
            "value": "string"
          },
          "rev": {
            "attr": true,
            "attrName": "rev",
            "keyInterfaceName": "HTMLLinkElement",
            "name": "rev",
            "prop": true,
            "propName": "rev",
            "readonly": false,
            "value": "string"
          },
          "sizes": {
            "attr": true,
            "attrName": "sizes",
            "keyInterfaceName": "HTMLLinkElement",
            "name": "sizes",
            "prop": true,
            "propName": "sizes",
            "readonly": false,
            "value": "string"
          },
          "target": {
            "attr": true,
            "attrName": "target",
            "keyInterfaceName": "HTMLLinkElement",
            "name": "target",
            "prop": true,
            "propName": "target",
            "readonly": false,
            "value": "string"
          },
          "type": {
            "attr": true,
            "attrName": "type",
            "keyInterfaceName": "HTMLLinkElement",
            "name": "type",
            "prop": true,
            "propName": "type",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [
          "HTMLLinkElement.sheet"
        ],
        "tagInterfaceName": "HTMLLinkElement"
      },
      "listing": {
        "booleans": [],
        "events": [],
        "keys": {
          "width": {
            "attr": true,
            "attrName": "width",
            "keyInterfaceName": "HTMLPreElement",
            "name": "width",
            "prop": true,
            "propName": "width",
            "readonly": false,
            "value": "number"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLPreElement"
      },
      "main": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "map": {
        "booleans": [],
        "events": [],
        "keys": {
          "name": {
            "attr": true,
            "attrName": "name",
            "keyInterfaceName": "HTMLMapElement",
            "name": "name",
            "prop": true,
            "propName": "name",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [
          "HTMLMapElement.areas"
        ],
        "tagInterfaceName": "HTMLMapElement"
      },
      "mark": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "marquee": {
        "booleans": [
          "HTMLMarqueeElement.trueSpeed",
          "HTMLMarqueeElement.truespeed"
        ],
        "events": [],
        "keys": {
          "behavior": {
            "attr": true,
            "attrName": "behavior",
            "keyInterfaceName": "HTMLMarqueeElement",
            "name": "behavior",
            "prop": true,
            "propName": "behavior",
            "readonly": false,
            "value": "string"
          },
          "bgColor": {
            "attr": false,
            "attrName": "bgcolor",
            "keyInterfaceName": "HTMLMarqueeElement",
            "name": "bgColor",
            "prop": true,
            "propName": "bgColor",
            "readonly": false,
            "value": "string"
          },
          "bgcolor": {
            "attr": true,
            "attrName": "bgcolor",
            "keyInterfaceName": "HTMLMarqueeElement",
            "name": "bgcolor",
            "prop": false,
            "propName": "bgColor",
            "readonly": false,
            "value": "string"
          },
          "direction": {
            "attr": true,
            "attrName": "direction",
            "keyInterfaceName": "HTMLMarqueeElement",
            "name": "direction",
            "prop": true,
            "propName": "direction",
            "readonly": false,
            "value": "string"
          },
          "height": {
            "attr": true,
            "attrName": "height",
            "keyInterfaceName": "HTMLMarqueeElement",
            "name": "height",
            "prop": true,
            "propName": "height",
            "readonly": false,
            "value": "string"
          },
          "hspace": {
            "attr": true,
            "attrName": "hspace",
            "keyInterfaceName": "HTMLMarqueeElement",
            "name": "hspace",
            "prop": true,
            "propName": "hspace",
            "readonly": false,
            "value": "number"
          },
          "loop": {
            "attr": true,
            "attrName": "loop",
            "keyInterfaceName": "HTMLMarqueeElement",
            "name": "loop",
            "prop": true,
            "propName": "loop",
            "readonly": false,
            "value": "number"
          },
          "scrollAmount": {
            "attr": false,
            "attrName": "scrollamount",
            "keyInterfaceName": "HTMLMarqueeElement",
            "name": "scrollAmount",
            "prop": true,
            "propName": "scrollAmount",
            "readonly": false,
            "value": "number"
          },
          "scrollamount": {
            "attr": true,
            "attrName": "scrollamount",
            "keyInterfaceName": "HTMLMarqueeElement",
            "name": "scrollamount",
            "prop": false,
            "propName": "scrollAmount",
            "readonly": false,
            "value": "number"
          },
          "scrollDelay": {
            "attr": false,
            "attrName": "scrolldelay",
            "keyInterfaceName": "HTMLMarqueeElement",
            "name": "scrollDelay",
            "prop": true,
            "propName": "scrollDelay",
            "readonly": false,
            "value": "number"
          },
          "scrolldelay": {
            "attr": true,
            "attrName": "scrolldelay",
            "keyInterfaceName": "HTMLMarqueeElement",
            "name": "scrolldelay",
            "prop": false,
            "propName": "scrollDelay",
            "readonly": false,
            "value": "number"
          },
          "trueSpeed": {
            "attr": false,
            "attrName": "truespeed",
            "keyInterfaceName": "HTMLMarqueeElement",
            "name": "trueSpeed",
            "prop": true,
            "propName": "trueSpeed",
            "readonly": false,
            "value": "boolean"
          },
          "truespeed": {
            "attr": true,
            "attrName": "truespeed",
            "keyInterfaceName": "HTMLMarqueeElement",
            "name": "truespeed",
            "prop": false,
            "propName": "trueSpeed",
            "readonly": false,
            "value": "boolean"
          },
          "vspace": {
            "attr": true,
            "attrName": "vspace",
            "keyInterfaceName": "HTMLMarqueeElement",
            "name": "vspace",
            "prop": true,
            "propName": "vspace",
            "readonly": false,
            "value": "number"
          },
          "width": {
            "attr": true,
            "attrName": "width",
            "keyInterfaceName": "HTMLMarqueeElement",
            "name": "width",
            "prop": true,
            "propName": "width",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLMarqueeElement"
      },
      "menu": {
        "booleans": [
          "HTMLMenuElement.compact"
        ],
        "events": [],
        "keys": {
          "compact": {
            "attr": true,
            "attrName": "compact",
            "keyInterfaceName": "HTMLMenuElement",
            "name": "compact",
            "prop": true,
            "propName": "compact",
            "readonly": false,
            "value": "boolean"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLMenuElement"
      },
      "menuitem": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLUnknownElement"
      },
      "meta": {
        "booleans": [],
        "events": [],
        "keys": {
          "content": {
            "attr": true,
            "attrName": "content",
            "keyInterfaceName": "HTMLMetaElement",
            "name": "content",
            "prop": true,
            "propName": "content",
            "readonly": false,
            "value": "string"
          },
          "httpEquiv": {
            "attr": false,
            "attrName": "http-equiv",
            "keyInterfaceName": "HTMLMetaElement",
            "name": "httpEquiv",
            "prop": true,
            "propName": "httpEquiv",
            "readonly": false,
            "value": "string"
          },
          "http-equiv": {
            "attr": true,
            "attrName": "http-equiv",
            "keyInterfaceName": "HTMLMetaElement",
            "name": "http-equiv",
            "prop": false,
            "propName": "httpEquiv",
            "readonly": false,
            "value": "string"
          },
          "media": {
            "attr": true,
            "attrName": "media",
            "keyInterfaceName": "HTMLMetaElement",
            "name": "media",
            "prop": true,
            "propName": "media",
            "readonly": false,
            "value": "string"
          },
          "name": {
            "attr": true,
            "attrName": "name",
            "keyInterfaceName": "HTMLMetaElement",
            "name": "name",
            "prop": true,
            "propName": "name",
            "readonly": false,
            "value": "string"
          },
          "scheme": {
            "attr": true,
            "attrName": "scheme",
            "keyInterfaceName": "HTMLMetaElement",
            "name": "scheme",
            "prop": true,
            "propName": "scheme",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLMetaElement"
      },
      "meter": {
        "booleans": [],
        "events": [],
        "keys": {
          "high": {
            "attr": true,
            "attrName": "high",
            "keyInterfaceName": "HTMLMeterElement",
            "name": "high",
            "prop": true,
            "propName": "high",
            "readonly": false,
            "value": "number"
          },
          "low": {
            "attr": true,
            "attrName": "low",
            "keyInterfaceName": "HTMLMeterElement",
            "name": "low",
            "prop": true,
            "propName": "low",
            "readonly": false,
            "value": "number"
          },
          "max": {
            "attr": true,
            "attrName": "max",
            "keyInterfaceName": "HTMLMeterElement",
            "name": "max",
            "prop": true,
            "propName": "max",
            "readonly": false,
            "value": "number"
          },
          "min": {
            "attr": true,
            "attrName": "min",
            "keyInterfaceName": "HTMLMeterElement",
            "name": "min",
            "prop": true,
            "propName": "min",
            "readonly": false,
            "value": "number"
          },
          "optimum": {
            "attr": true,
            "attrName": "optimum",
            "keyInterfaceName": "HTMLMeterElement",
            "name": "optimum",
            "prop": true,
            "propName": "optimum",
            "readonly": false,
            "value": "number"
          },
          "value": {
            "attr": true,
            "attrName": "value",
            "keyInterfaceName": "HTMLMeterElement",
            "name": "value",
            "prop": true,
            "propName": "value",
            "readonly": false,
            "value": "number"
          }
        },
        "readonly": [
          "HTMLMeterElement.labels"
        ],
        "tagInterfaceName": "HTMLMeterElement"
      },
      "multicol": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLUnknownElement"
      },
      "nav": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "nextid": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLUnknownElement"
      },
      "nobr": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "noembed": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "noframes": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "noindex": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLUnknownElement"
      },
      "noscript": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "object": {
        "booleans": [
          "HTMLObjectElement.declare"
        ],
        "events": [],
        "keys": {
          "align": {
            "attr": true,
            "attrName": "align",
            "keyInterfaceName": "HTMLObjectElement",
            "name": "align",
            "prop": true,
            "propName": "align",
            "readonly": false,
            "value": "string"
          },
          "archive": {
            "attr": true,
            "attrName": "archive",
            "keyInterfaceName": "HTMLObjectElement",
            "name": "archive",
            "prop": true,
            "propName": "archive",
            "readonly": false,
            "value": "string"
          },
          "border": {
            "attr": true,
            "attrName": "border",
            "keyInterfaceName": "HTMLObjectElement",
            "name": "border",
            "prop": true,
            "propName": "border",
            "readonly": false,
            "value": "string"
          },
          "code": {
            "attr": true,
            "attrName": "code",
            "keyInterfaceName": "HTMLObjectElement",
            "name": "code",
            "prop": true,
            "propName": "code",
            "readonly": false,
            "value": "string"
          },
          "codeBase": {
            "attr": false,
            "attrName": "codebase",
            "keyInterfaceName": "HTMLObjectElement",
            "name": "codeBase",
            "prop": true,
            "propName": "codeBase",
            "readonly": false,
            "value": "string"
          },
          "codebase": {
            "attr": true,
            "attrName": "codebase",
            "keyInterfaceName": "HTMLObjectElement",
            "name": "codebase",
            "prop": false,
            "propName": "codeBase",
            "readonly": false,
            "value": "string"
          },
          "codeType": {
            "attr": false,
            "attrName": "codetype",
            "keyInterfaceName": "HTMLObjectElement",
            "name": "codeType",
            "prop": true,
            "propName": "codeType",
            "readonly": false,
            "value": "string"
          },
          "codetype": {
            "attr": true,
            "attrName": "codetype",
            "keyInterfaceName": "HTMLObjectElement",
            "name": "codetype",
            "prop": false,
            "propName": "codeType",
            "readonly": false,
            "value": "string"
          },
          "data": {
            "attr": true,
            "attrName": "data",
            "keyInterfaceName": "HTMLObjectElement",
            "name": "data",
            "prop": true,
            "propName": "data",
            "readonly": false,
            "value": "string"
          },
          "declare": {
            "attr": true,
            "attrName": "declare",
            "keyInterfaceName": "HTMLObjectElement",
            "name": "declare",
            "prop": true,
            "propName": "declare",
            "readonly": false,
            "value": "boolean"
          },
          "height": {
            "attr": true,
            "attrName": "height",
            "keyInterfaceName": "HTMLObjectElement",
            "name": "height",
            "prop": true,
            "propName": "height",
            "readonly": false,
            "value": "string"
          },
          "hspace": {
            "attr": true,
            "attrName": "hspace",
            "keyInterfaceName": "HTMLObjectElement",
            "name": "hspace",
            "prop": true,
            "propName": "hspace",
            "readonly": false,
            "value": "number"
          },
          "name": {
            "attr": true,
            "attrName": "name",
            "keyInterfaceName": "HTMLObjectElement",
            "name": "name",
            "prop": true,
            "propName": "name",
            "readonly": false,
            "value": "string"
          },
          "standby": {
            "attr": true,
            "attrName": "standby",
            "keyInterfaceName": "HTMLObjectElement",
            "name": "standby",
            "prop": true,
            "propName": "standby",
            "readonly": false,
            "value": "string"
          },
          "type": {
            "attr": true,
            "attrName": "type",
            "keyInterfaceName": "HTMLObjectElement",
            "name": "type",
            "prop": true,
            "propName": "type",
            "readonly": false,
            "value": "string"
          },
          "useMap": {
            "attr": false,
            "attrName": "usemap",
            "keyInterfaceName": "HTMLObjectElement",
            "name": "useMap",
            "prop": true,
            "propName": "useMap",
            "readonly": false,
            "value": "string"
          },
          "usemap": {
            "attr": true,
            "attrName": "usemap",
            "keyInterfaceName": "HTMLObjectElement",
            "name": "usemap",
            "prop": false,
            "propName": "useMap",
            "readonly": false,
            "value": "string"
          },
          "vspace": {
            "attr": true,
            "attrName": "vspace",
            "keyInterfaceName": "HTMLObjectElement",
            "name": "vspace",
            "prop": true,
            "propName": "vspace",
            "readonly": false,
            "value": "number"
          },
          "width": {
            "attr": true,
            "attrName": "width",
            "keyInterfaceName": "HTMLObjectElement",
            "name": "width",
            "prop": true,
            "propName": "width",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [
          "HTMLObjectElement.contentDocument",
          "HTMLObjectElement.contentWindow",
          "HTMLObjectElement.form",
          "HTMLObjectElement.validationMessage",
          "HTMLObjectElement.validity",
          "HTMLObjectElement.willValidate"
        ],
        "tagInterfaceName": "HTMLObjectElement"
      },
      "ol": {
        "booleans": [
          "HTMLOListElement.compact",
          "HTMLOListElement.reversed"
        ],
        "events": [],
        "keys": {
          "compact": {
            "attr": true,
            "attrName": "compact",
            "keyInterfaceName": "HTMLOListElement",
            "name": "compact",
            "prop": true,
            "propName": "compact",
            "readonly": false,
            "value": "boolean"
          },
          "reversed": {
            "attr": true,
            "attrName": "reversed",
            "keyInterfaceName": "HTMLOListElement",
            "name": "reversed",
            "prop": true,
            "propName": "reversed",
            "readonly": false,
            "value": "boolean"
          },
          "start": {
            "attr": true,
            "attrName": "start",
            "keyInterfaceName": "HTMLOListElement",
            "name": "start",
            "prop": true,
            "propName": "start",
            "readonly": false,
            "value": "number"
          },
          "type": {
            "attr": true,
            "attrName": "type",
            "keyInterfaceName": "HTMLOListElement",
            "name": "type",
            "prop": true,
            "propName": "type",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLOListElement"
      },
      "optgroup": {
        "booleans": [
          "HTMLOptGroupElement.disabled"
        ],
        "events": [],
        "keys": {
          "disabled": {
            "attr": true,
            "attrName": "disabled",
            "keyInterfaceName": "HTMLOptGroupElement",
            "name": "disabled",
            "prop": true,
            "propName": "disabled",
            "readonly": false,
            "value": "boolean"
          },
          "label": {
            "attr": true,
            "attrName": "label",
            "keyInterfaceName": "HTMLOptGroupElement",
            "name": "label",
            "prop": true,
            "propName": "label",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLOptGroupElement"
      },
      "option": {
        "booleans": [
          "HTMLOptionElement.defaultSelected",
          "HTMLOptionElement.disabled",
          "HTMLOptionElement.selected",
          "HTMLOptionElement.selected"
        ],
        "events": [],
        "keys": {
          "defaultSelected": {
            "attr": false,
            "attrName": "selected",
            "keyInterfaceName": "HTMLOptionElement",
            "name": "defaultSelected",
            "prop": true,
            "propName": "defaultSelected",
            "readonly": false,
            "value": "boolean"
          },
          "disabled": {
            "attr": true,
            "attrName": "disabled",
            "keyInterfaceName": "HTMLOptionElement",
            "name": "disabled",
            "prop": true,
            "propName": "disabled",
            "readonly": false,
            "value": "boolean"
          },
          "label": {
            "attr": true,
            "attrName": "label",
            "keyInterfaceName": "HTMLOptionElement",
            "name": "label",
            "prop": true,
            "propName": "label",
            "readonly": false,
            "value": "string"
          },
          "selected": {
            "attr": true,
            "attrName": "selected",
            "keyInterfaceName": "HTMLOptionElement",
            "name": "selected",
            "prop": true,
            "propName": "defaultSelected",
            "readonly": false,
            "value": "boolean"
          },
          "text": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLOptionElement",
            "name": "text",
            "prop": true,
            "propName": "text",
            "readonly": false,
            "value": "string"
          },
          "value": {
            "attr": true,
            "attrName": "value",
            "keyInterfaceName": "HTMLOptionElement",
            "name": "value",
            "prop": true,
            "propName": "value",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [
          "HTMLOptionElement.form",
          "HTMLOptionElement.index"
        ],
        "tagInterfaceName": "HTMLOptionElement"
      },
      "output": {
        "booleans": [],
        "events": [],
        "keys": {
          "defaultValue": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLOutputElement",
            "name": "defaultValue",
            "prop": true,
            "propName": "defaultValue",
            "readonly": false,
            "value": "string"
          },
          "for": {
            "attr": true,
            "attrName": "for",
            "keyInterfaceName": "HTMLOutputElement",
            "name": "for",
            "prop": false,
            "propName": "htmlFor",
            "readonly": false,
            "value": "string"
          },
          "htmlFor": {
            "attr": false,
            "attrName": "for",
            "keyInterfaceName": "HTMLOutputElement",
            "name": "htmlFor",
            "prop": true,
            "propName": "htmlFor",
            "readonly": false,
            "value": "string"
          },
          "name": {
            "attr": true,
            "attrName": "name",
            "keyInterfaceName": "HTMLOutputElement",
            "name": "name",
            "prop": true,
            "propName": "name",
            "readonly": false,
            "value": "string"
          },
          "value": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLOutputElement",
            "name": "value",
            "prop": true,
            "propName": "value",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [
          "HTMLOutputElement.form",
          "HTMLOutputElement.labels",
          "HTMLOutputElement.type",
          "HTMLOutputElement.validationMessage",
          "HTMLOutputElement.validity",
          "HTMLOutputElement.willValidate"
        ],
        "tagInterfaceName": "HTMLOutputElement"
      },
      "p": {
        "booleans": [],
        "events": [],
        "keys": {
          "align": {
            "attr": true,
            "attrName": "align",
            "keyInterfaceName": "HTMLParagraphElement",
            "name": "align",
            "prop": true,
            "propName": "align",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLParagraphElement"
      },
      "param": {
        "booleans": [],
        "events": [],
        "keys": {
          "name": {
            "attr": true,
            "attrName": "name",
            "keyInterfaceName": "HTMLParamElement",
            "name": "name",
            "prop": true,
            "propName": "name",
            "readonly": false,
            "value": "string"
          },
          "type": {
            "attr": true,
            "attrName": "type",
            "keyInterfaceName": "HTMLParamElement",
            "name": "type",
            "prop": true,
            "propName": "type",
            "readonly": false,
            "value": "string"
          },
          "value": {
            "attr": true,
            "attrName": "value",
            "keyInterfaceName": "HTMLParamElement",
            "name": "value",
            "prop": true,
            "propName": "value",
            "readonly": false,
            "value": "string"
          },
          "valueType": {
            "attr": false,
            "attrName": "valuetype",
            "keyInterfaceName": "HTMLParamElement",
            "name": "valueType",
            "prop": true,
            "propName": "valueType",
            "readonly": false,
            "value": "string"
          },
          "valuetype": {
            "attr": true,
            "attrName": "valuetype",
            "keyInterfaceName": "HTMLParamElement",
            "name": "valuetype",
            "prop": false,
            "propName": "valueType",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLParamElement"
      },
      "picture": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLPictureElement"
      },
      "plaintext": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "portal": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLUnknownElement"
      },
      "pre": {
        "booleans": [],
        "events": [],
        "keys": {
          "width": {
            "attr": true,
            "attrName": "width",
            "keyInterfaceName": "HTMLPreElement",
            "name": "width",
            "prop": true,
            "propName": "width",
            "readonly": false,
            "value": "number"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLPreElement"
      },
      "progress": {
        "booleans": [],
        "events": [],
        "keys": {
          "max": {
            "attr": true,
            "attrName": "max",
            "keyInterfaceName": "HTMLProgressElement",
            "name": "max",
            "prop": true,
            "propName": "max",
            "readonly": false,
            "value": "number"
          },
          "value": {
            "attr": true,
            "attrName": "value",
            "keyInterfaceName": "HTMLProgressElement",
            "name": "value",
            "prop": true,
            "propName": "value",
            "readonly": false,
            "value": "number"
          }
        },
        "readonly": [
          "HTMLProgressElement.labels",
          "HTMLProgressElement.position"
        ],
        "tagInterfaceName": "HTMLProgressElement"
      },
      "q": {
        "booleans": [],
        "events": [],
        "keys": {
          "cite": {
            "attr": true,
            "attrName": "cite",
            "keyInterfaceName": "HTMLQuoteElement",
            "name": "cite",
            "prop": true,
            "propName": "cite",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLQuoteElement"
      },
      "rb": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "rp": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "rt": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "rtc": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "ruby": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "s": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "samp": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "script": {
        "booleans": [
          "HTMLScriptElement.async",
          "HTMLScriptElement.defer",
          "HTMLScriptElement.noModule",
          "HTMLScriptElement.nomodule"
        ],
        "events": [],
        "keys": {
          "async": {
            "attr": true,
            "attrName": "async",
            "keyInterfaceName": "HTMLScriptElement",
            "name": "async",
            "prop": true,
            "propName": "async",
            "readonly": false,
            "value": "boolean"
          },
          "charset": {
            "attr": true,
            "attrName": "charset",
            "keyInterfaceName": "HTMLScriptElement",
            "name": "charset",
            "prop": true,
            "propName": "charset",
            "readonly": false,
            "value": "string"
          },
          "crossOrigin": {
            "attr": false,
            "attrName": "crossorigin",
            "keyInterfaceName": "HTMLScriptElement",
            "name": "crossOrigin",
            "prop": true,
            "propName": "crossOrigin",
            "readonly": false,
            "value": "string"
          },
          "crossorigin": {
            "attr": true,
            "attrName": "crossorigin",
            "keyInterfaceName": "HTMLScriptElement",
            "name": "crossorigin",
            "prop": false,
            "propName": "crossOrigin",
            "readonly": false,
            "value": "string"
          },
          "defer": {
            "attr": true,
            "attrName": "defer",
            "keyInterfaceName": "HTMLScriptElement",
            "name": "defer",
            "prop": true,
            "propName": "defer",
            "readonly": false,
            "value": "boolean"
          },
          "event": {
            "attr": true,
            "attrName": "event",
            "keyInterfaceName": "HTMLScriptElement",
            "name": "event",
            "prop": true,
            "propName": "event",
            "readonly": false,
            "value": "string"
          },
          "fetchPriority": {
            "attr": false,
            "attrName": "fetchpriority",
            "keyInterfaceName": "HTMLScriptElement",
            "name": "fetchPriority",
            "prop": true,
            "propName": "fetchPriority",
            "readonly": false,
            "value": "string"
          },
          "fetchpriority": {
            "attr": true,
            "attrName": "fetchpriority",
            "keyInterfaceName": "HTMLScriptElement",
            "name": "fetchpriority",
            "prop": false,
            "propName": "fetchPriority",
            "readonly": false,
            "value": "string"
          },
          "for": {
            "attr": true,
            "attrName": "for",
            "keyInterfaceName": "HTMLScriptElement",
            "name": "for",
            "prop": false,
            "propName": "htmlFor",
            "readonly": false,
            "value": "string"
          },
          "htmlFor": {
            "attr": false,
            "attrName": "for",
            "keyInterfaceName": "HTMLScriptElement",
            "name": "htmlFor",
            "prop": true,
            "propName": "htmlFor",
            "readonly": false,
            "value": "string"
          },
          "innerText": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLScriptElement",
            "name": "innerText",
            "prop": true,
            "propName": "innerText",
            "readonly": false,
            "value": "string"
          },
          "integrity": {
            "attr": true,
            "attrName": "integrity",
            "keyInterfaceName": "HTMLScriptElement",
            "name": "integrity",
            "prop": true,
            "propName": "integrity",
            "readonly": false,
            "value": "string"
          },
          "noModule": {
            "attr": false,
            "attrName": "nomodule",
            "keyInterfaceName": "HTMLScriptElement",
            "name": "noModule",
            "prop": true,
            "propName": "noModule",
            "readonly": false,
            "value": "boolean"
          },
          "nomodule": {
            "attr": true,
            "attrName": "nomodule",
            "keyInterfaceName": "HTMLScriptElement",
            "name": "nomodule",
            "prop": false,
            "propName": "noModule",
            "readonly": false,
            "value": "boolean"
          },
          "referrerPolicy": {
            "attr": false,
            "attrName": "referrerpolicy",
            "keyInterfaceName": "HTMLScriptElement",
            "name": "referrerPolicy",
            "prop": true,
            "propName": "referrerPolicy",
            "readonly": false,
            "value": "string"
          },
          "referrerpolicy": {
            "attr": true,
            "attrName": "referrerpolicy",
            "keyInterfaceName": "HTMLScriptElement",
            "name": "referrerpolicy",
            "prop": false,
            "propName": "referrerPolicy",
            "readonly": false,
            "value": "string"
          },
          "src": {
            "attr": true,
            "attrName": "src",
            "keyInterfaceName": "HTMLScriptElement",
            "name": "src",
            "prop": true,
            "propName": "src",
            "readonly": false,
            "value": "string"
          },
          "text": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLScriptElement",
            "name": "text",
            "prop": true,
            "propName": "text",
            "readonly": false,
            "value": "string"
          },
          "textContent": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLScriptElement",
            "name": "textContent",
            "prop": true,
            "propName": "textContent",
            "readonly": false,
            "value": "string"
          },
          "type": {
            "attr": true,
            "attrName": "type",
            "keyInterfaceName": "HTMLScriptElement",
            "name": "type",
            "prop": true,
            "propName": "type",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLScriptElement"
      },
      "search": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "section": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "select": {
        "booleans": [
          "HTMLSelectElement.disabled",
          "HTMLSelectElement.multiple",
          "HTMLSelectElement.required"
        ],
        "events": [],
        "keys": {
          "autocomplete": {
            "attr": true,
            "attrName": "autocomplete",
            "keyInterfaceName": "HTMLSelectElement",
            "name": "autocomplete",
            "prop": true,
            "propName": "autocomplete",
            "readonly": false,
            "value": "string"
          },
          "disabled": {
            "attr": true,
            "attrName": "disabled",
            "keyInterfaceName": "HTMLSelectElement",
            "name": "disabled",
            "prop": true,
            "propName": "disabled",
            "readonly": false,
            "value": "boolean"
          },
          "length": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLSelectElement",
            "name": "length",
            "prop": true,
            "propName": "length",
            "readonly": false,
            "value": "number"
          },
          "multiple": {
            "attr": true,
            "attrName": "multiple",
            "keyInterfaceName": "HTMLSelectElement",
            "name": "multiple",
            "prop": true,
            "propName": "multiple",
            "readonly": false,
            "value": "boolean"
          },
          "name": {
            "attr": true,
            "attrName": "name",
            "keyInterfaceName": "HTMLSelectElement",
            "name": "name",
            "prop": true,
            "propName": "name",
            "readonly": false,
            "value": "string"
          },
          "required": {
            "attr": true,
            "attrName": "required",
            "keyInterfaceName": "HTMLSelectElement",
            "name": "required",
            "prop": true,
            "propName": "required",
            "readonly": false,
            "value": "boolean"
          },
          "selectedIndex": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLSelectElement",
            "name": "selectedIndex",
            "prop": true,
            "propName": "selectedIndex",
            "readonly": false,
            "value": "number"
          },
          "size": {
            "attr": true,
            "attrName": "size",
            "keyInterfaceName": "HTMLSelectElement",
            "name": "size",
            "prop": true,
            "propName": "size",
            "readonly": false,
            "value": "number"
          },
          "value": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLSelectElement",
            "name": "value",
            "prop": true,
            "propName": "value",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [
          "HTMLSelectElement.form",
          "HTMLSelectElement.labels",
          "HTMLSelectElement.options",
          "HTMLSelectElement.selectedOptions",
          "HTMLSelectElement.type",
          "HTMLSelectElement.validationMessage",
          "HTMLSelectElement.validity",
          "HTMLSelectElement.willValidate"
        ],
        "tagInterfaceName": "HTMLSelectElement"
      },
      "shadow": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLUnknownElement"
      },
      "slot": {
        "booleans": [],
        "events": [],
        "keys": {
          "name": {
            "attr": true,
            "attrName": "name",
            "keyInterfaceName": "HTMLSlotElement",
            "name": "name",
            "prop": true,
            "propName": "name",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLSlotElement"
      },
      "small": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "source": {
        "booleans": [],
        "events": [],
        "keys": {
          "height": {
            "attr": true,
            "attrName": "height",
            "keyInterfaceName": "HTMLSourceElement",
            "name": "height",
            "prop": true,
            "propName": "height",
            "readonly": false,
            "value": "number"
          },
          "media": {
            "attr": true,
            "attrName": "media",
            "keyInterfaceName": "HTMLSourceElement",
            "name": "media",
            "prop": true,
            "propName": "media",
            "readonly": false,
            "value": "string"
          },
          "sizes": {
            "attr": true,
            "attrName": "sizes",
            "keyInterfaceName": "HTMLSourceElement",
            "name": "sizes",
            "prop": true,
            "propName": "sizes",
            "readonly": false,
            "value": "string"
          },
          "src": {
            "attr": true,
            "attrName": "src",
            "keyInterfaceName": "HTMLSourceElement",
            "name": "src",
            "prop": true,
            "propName": "src",
            "readonly": false,
            "value": "string"
          },
          "srcset": {
            "attr": true,
            "attrName": "srcset",
            "keyInterfaceName": "HTMLSourceElement",
            "name": "srcset",
            "prop": true,
            "propName": "srcset",
            "readonly": false,
            "value": "string"
          },
          "type": {
            "attr": true,
            "attrName": "type",
            "keyInterfaceName": "HTMLSourceElement",
            "name": "type",
            "prop": true,
            "propName": "type",
            "readonly": false,
            "value": "string"
          },
          "width": {
            "attr": true,
            "attrName": "width",
            "keyInterfaceName": "HTMLSourceElement",
            "name": "width",
            "prop": true,
            "propName": "width",
            "readonly": false,
            "value": "number"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLSourceElement"
      },
      "spacer": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLUnknownElement"
      },
      "span": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLSpanElement"
      },
      "strike": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "strong": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "style": {
        "booleans": [
          "HTMLStyleElement.disabled"
        ],
        "events": [],
        "keys": {
          "disabled": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLStyleElement",
            "name": "disabled",
            "prop": true,
            "propName": "disabled",
            "readonly": false,
            "value": "boolean"
          },
          "media": {
            "attr": true,
            "attrName": "media",
            "keyInterfaceName": "HTMLStyleElement",
            "name": "media",
            "prop": true,
            "propName": "media",
            "readonly": false,
            "value": "string"
          },
          "type": {
            "attr": true,
            "attrName": "type",
            "keyInterfaceName": "HTMLStyleElement",
            "name": "type",
            "prop": true,
            "propName": "type",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [
          "HTMLStyleElement.sheet"
        ],
        "tagInterfaceName": "HTMLStyleElement"
      },
      "sub": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "summary": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "sup": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "table": {
        "booleans": [],
        "events": [],
        "keys": {
          "align": {
            "attr": true,
            "attrName": "align",
            "keyInterfaceName": "HTMLTableElement",
            "name": "align",
            "prop": true,
            "propName": "align",
            "readonly": false,
            "value": "string"
          },
          "bgColor": {
            "attr": false,
            "attrName": "bgcolor",
            "keyInterfaceName": "HTMLTableElement",
            "name": "bgColor",
            "prop": true,
            "propName": "bgColor",
            "readonly": false,
            "value": "string"
          },
          "bgcolor": {
            "attr": true,
            "attrName": "bgcolor",
            "keyInterfaceName": "HTMLTableElement",
            "name": "bgcolor",
            "prop": false,
            "propName": "bgColor",
            "readonly": false,
            "value": "string"
          },
          "border": {
            "attr": true,
            "attrName": "border",
            "keyInterfaceName": "HTMLTableElement",
            "name": "border",
            "prop": true,
            "propName": "border",
            "readonly": false,
            "value": "string"
          },
          "caption": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLTableElement",
            "name": "caption",
            "prop": true,
            "propName": "caption",
            "readonly": false,
            "value": "HTMLTableCaptionElement"
          },
          "cellPadding": {
            "attr": false,
            "attrName": "cellpadding",
            "keyInterfaceName": "HTMLTableElement",
            "name": "cellPadding",
            "prop": true,
            "propName": "cellPadding",
            "readonly": false,
            "value": "string"
          },
          "cellpadding": {
            "attr": true,
            "attrName": "cellpadding",
            "keyInterfaceName": "HTMLTableElement",
            "name": "cellpadding",
            "prop": false,
            "propName": "cellPadding",
            "readonly": false,
            "value": "string"
          },
          "cellSpacing": {
            "attr": false,
            "attrName": "cellspacing",
            "keyInterfaceName": "HTMLTableElement",
            "name": "cellSpacing",
            "prop": true,
            "propName": "cellSpacing",
            "readonly": false,
            "value": "string"
          },
          "cellspacing": {
            "attr": true,
            "attrName": "cellspacing",
            "keyInterfaceName": "HTMLTableElement",
            "name": "cellspacing",
            "prop": false,
            "propName": "cellSpacing",
            "readonly": false,
            "value": "string"
          },
          "frame": {
            "attr": true,
            "attrName": "frame",
            "keyInterfaceName": "HTMLTableElement",
            "name": "frame",
            "prop": true,
            "propName": "frame",
            "readonly": false,
            "value": "string"
          },
          "rules": {
            "attr": true,
            "attrName": "rules",
            "keyInterfaceName": "HTMLTableElement",
            "name": "rules",
            "prop": true,
            "propName": "rules",
            "readonly": false,
            "value": "string"
          },
          "summary": {
            "attr": true,
            "attrName": "summary",
            "keyInterfaceName": "HTMLTableElement",
            "name": "summary",
            "prop": true,
            "propName": "summary",
            "readonly": false,
            "value": "string"
          },
          "tFoot": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLTableElement",
            "name": "tFoot",
            "prop": true,
            "propName": "tFoot",
            "readonly": false,
            "value": "HTMLTableSectionElement"
          },
          "tHead": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLTableElement",
            "name": "tHead",
            "prop": true,
            "propName": "tHead",
            "readonly": false,
            "value": "HTMLTableSectionElement"
          },
          "width": {
            "attr": true,
            "attrName": "width",
            "keyInterfaceName": "HTMLTableElement",
            "name": "width",
            "prop": true,
            "propName": "width",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [
          "HTMLTableElement.rows",
          "HTMLTableElement.tBodies"
        ],
        "tagInterfaceName": "HTMLTableElement"
      },
      "tbody": {
        "booleans": [],
        "events": [],
        "keys": {
          "align": {
            "attr": true,
            "attrName": "align",
            "keyInterfaceName": "HTMLTableSectionElement",
            "name": "align",
            "prop": true,
            "propName": "align",
            "readonly": false,
            "value": "string"
          },
          "ch": {
            "attr": false,
            "attrName": "char",
            "keyInterfaceName": "HTMLTableSectionElement",
            "name": "ch",
            "prop": true,
            "propName": "ch",
            "readonly": false,
            "value": "string"
          },
          "char": {
            "attr": true,
            "attrName": "char",
            "keyInterfaceName": "HTMLTableSectionElement",
            "name": "char",
            "prop": false,
            "propName": "ch",
            "readonly": false,
            "value": "string"
          },
          "charoff": {
            "attr": true,
            "attrName": "charoff",
            "keyInterfaceName": "HTMLTableSectionElement",
            "name": "charoff",
            "prop": false,
            "propName": "chOff",
            "readonly": false,
            "value": "string"
          },
          "chOff": {
            "attr": false,
            "attrName": "charoff",
            "keyInterfaceName": "HTMLTableSectionElement",
            "name": "chOff",
            "prop": true,
            "propName": "chOff",
            "readonly": false,
            "value": "string"
          },
          "vAlign": {
            "attr": false,
            "attrName": "valign",
            "keyInterfaceName": "HTMLTableSectionElement",
            "name": "vAlign",
            "prop": true,
            "propName": "vAlign",
            "readonly": false,
            "value": "string"
          },
          "valign": {
            "attr": true,
            "attrName": "valign",
            "keyInterfaceName": "HTMLTableSectionElement",
            "name": "valign",
            "prop": false,
            "propName": "vAlign",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [
          "HTMLTableSectionElement.rows"
        ],
        "tagInterfaceName": "HTMLTableSectionElement"
      },
      "td": {
        "booleans": [
          "HTMLTableCellElement.noWrap",
          "HTMLTableCellElement.nowrap"
        ],
        "events": [],
        "keys": {
          "abbr": {
            "attr": true,
            "attrName": "abbr",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "abbr",
            "prop": true,
            "propName": "abbr",
            "readonly": false,
            "value": "string"
          },
          "align": {
            "attr": true,
            "attrName": "align",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "align",
            "prop": true,
            "propName": "align",
            "readonly": false,
            "value": "string"
          },
          "axis": {
            "attr": true,
            "attrName": "axis",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "axis",
            "prop": true,
            "propName": "axis",
            "readonly": false,
            "value": "string"
          },
          "bgColor": {
            "attr": false,
            "attrName": "bgcolor",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "bgColor",
            "prop": true,
            "propName": "bgColor",
            "readonly": false,
            "value": "string"
          },
          "bgcolor": {
            "attr": true,
            "attrName": "bgcolor",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "bgcolor",
            "prop": false,
            "propName": "bgColor",
            "readonly": false,
            "value": "string"
          },
          "ch": {
            "attr": false,
            "attrName": "char",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "ch",
            "prop": true,
            "propName": "ch",
            "readonly": false,
            "value": "string"
          },
          "char": {
            "attr": true,
            "attrName": "char",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "char",
            "prop": false,
            "propName": "ch",
            "readonly": false,
            "value": "string"
          },
          "charoff": {
            "attr": true,
            "attrName": "charoff",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "charoff",
            "prop": false,
            "propName": "chOff",
            "readonly": false,
            "value": "string"
          },
          "chOff": {
            "attr": false,
            "attrName": "charoff",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "chOff",
            "prop": true,
            "propName": "chOff",
            "readonly": false,
            "value": "string"
          },
          "colSpan": {
            "attr": false,
            "attrName": "colspan",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "colSpan",
            "prop": true,
            "propName": "colSpan",
            "readonly": false,
            "value": "number"
          },
          "colspan": {
            "attr": true,
            "attrName": "colspan",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "colspan",
            "prop": false,
            "propName": "colSpan",
            "readonly": false,
            "value": "number"
          },
          "headers": {
            "attr": true,
            "attrName": "headers",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "headers",
            "prop": true,
            "propName": "headers",
            "readonly": false,
            "value": "string"
          },
          "height": {
            "attr": true,
            "attrName": "height",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "height",
            "prop": true,
            "propName": "height",
            "readonly": false,
            "value": "string"
          },
          "noWrap": {
            "attr": false,
            "attrName": "nowrap",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "noWrap",
            "prop": true,
            "propName": "noWrap",
            "readonly": false,
            "value": "boolean"
          },
          "nowrap": {
            "attr": true,
            "attrName": "nowrap",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "nowrap",
            "prop": false,
            "propName": "noWrap",
            "readonly": false,
            "value": "boolean"
          },
          "rowSpan": {
            "attr": false,
            "attrName": "rowspan",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "rowSpan",
            "prop": true,
            "propName": "rowSpan",
            "readonly": false,
            "value": "number"
          },
          "rowspan": {
            "attr": true,
            "attrName": "rowspan",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "rowspan",
            "prop": false,
            "propName": "rowSpan",
            "readonly": false,
            "value": "number"
          },
          "scope": {
            "attr": true,
            "attrName": "scope",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "scope",
            "prop": true,
            "propName": "scope",
            "readonly": false,
            "value": "string"
          },
          "vAlign": {
            "attr": false,
            "attrName": "valign",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "vAlign",
            "prop": true,
            "propName": "vAlign",
            "readonly": false,
            "value": "string"
          },
          "valign": {
            "attr": true,
            "attrName": "valign",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "valign",
            "prop": false,
            "propName": "vAlign",
            "readonly": false,
            "value": "string"
          },
          "width": {
            "attr": true,
            "attrName": "width",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "width",
            "prop": true,
            "propName": "width",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [
          "HTMLTableCellElement.cellIndex"
        ],
        "tagInterfaceName": "HTMLTableCellElement"
      },
      "template": {
        "booleans": [
          "HTMLTemplateElement.shadowRootClonable",
          "HTMLTemplateElement.shadowrootclonable",
          "HTMLTemplateElement.shadowRootDelegatesFocus",
          "HTMLTemplateElement.shadowrootdelegatesfocus",
          "HTMLTemplateElement.shadowRootSerializable",
          "HTMLTemplateElement.shadowrootserializable"
        ],
        "events": [],
        "keys": {
          "shadowRootClonable": {
            "attr": false,
            "attrName": "shadowrootclonable",
            "keyInterfaceName": "HTMLTemplateElement",
            "name": "shadowRootClonable",
            "prop": true,
            "propName": "shadowRootClonable",
            "readonly": false,
            "value": "boolean"
          },
          "shadowrootclonable": {
            "attr": true,
            "attrName": "shadowrootclonable",
            "keyInterfaceName": "HTMLTemplateElement",
            "name": "shadowrootclonable",
            "prop": false,
            "propName": "shadowRootClonable",
            "readonly": false,
            "value": "boolean"
          },
          "shadowRootDelegatesFocus": {
            "attr": false,
            "attrName": "shadowrootdelegatesfocus",
            "keyInterfaceName": "HTMLTemplateElement",
            "name": "shadowRootDelegatesFocus",
            "prop": true,
            "propName": "shadowRootDelegatesFocus",
            "readonly": false,
            "value": "boolean"
          },
          "shadowrootdelegatesfocus": {
            "attr": true,
            "attrName": "shadowrootdelegatesfocus",
            "keyInterfaceName": "HTMLTemplateElement",
            "name": "shadowrootdelegatesfocus",
            "prop": false,
            "propName": "shadowRootDelegatesFocus",
            "readonly": false,
            "value": "boolean"
          },
          "shadowRootMode": {
            "attr": false,
            "attrName": "shadowrootmode",
            "keyInterfaceName": "HTMLTemplateElement",
            "name": "shadowRootMode",
            "prop": true,
            "propName": "shadowRootMode",
            "readonly": false,
            "value": "string"
          },
          "shadowrootmode": {
            "attr": true,
            "attrName": "shadowrootmode",
            "keyInterfaceName": "HTMLTemplateElement",
            "name": "shadowrootmode",
            "prop": false,
            "propName": "shadowRootMode",
            "readonly": false,
            "value": "string"
          },
          "shadowRootSerializable": {
            "attr": false,
            "attrName": "shadowrootserializable",
            "keyInterfaceName": "HTMLTemplateElement",
            "name": "shadowRootSerializable",
            "prop": true,
            "propName": "shadowRootSerializable",
            "readonly": false,
            "value": "boolean"
          },
          "shadowrootserializable": {
            "attr": true,
            "attrName": "shadowrootserializable",
            "keyInterfaceName": "HTMLTemplateElement",
            "name": "shadowrootserializable",
            "prop": false,
            "propName": "shadowRootSerializable",
            "readonly": false,
            "value": "boolean"
          }
        },
        "readonly": [
          "HTMLTemplateElement.content"
        ],
        "tagInterfaceName": "HTMLTemplateElement"
      },
      "textarea": {
        "booleans": [
          "HTMLTextAreaElement.disabled",
          "HTMLTextAreaElement.readOnly",
          "HTMLTextAreaElement.readonly",
          "HTMLTextAreaElement.required"
        ],
        "events": [],
        "keys": {
          "autocomplete": {
            "attr": true,
            "attrName": "autocomplete",
            "keyInterfaceName": "HTMLTextAreaElement",
            "name": "autocomplete",
            "prop": true,
            "propName": "autocomplete",
            "readonly": false,
            "value": "string"
          },
          "cols": {
            "attr": true,
            "attrName": "cols",
            "keyInterfaceName": "HTMLTextAreaElement",
            "name": "cols",
            "prop": true,
            "propName": "cols",
            "readonly": false,
            "value": "number"
          },
          "defaultValue": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLTextAreaElement",
            "name": "defaultValue",
            "prop": true,
            "propName": "defaultValue",
            "readonly": false,
            "value": "string"
          },
          "dirName": {
            "attr": false,
            "attrName": "dirname",
            "keyInterfaceName": "HTMLTextAreaElement",
            "name": "dirName",
            "prop": true,
            "propName": "dirName",
            "readonly": false,
            "value": "string"
          },
          "dirname": {
            "attr": true,
            "attrName": "dirname",
            "keyInterfaceName": "HTMLTextAreaElement",
            "name": "dirname",
            "prop": false,
            "propName": "dirName",
            "readonly": false,
            "value": "string"
          },
          "disabled": {
            "attr": true,
            "attrName": "disabled",
            "keyInterfaceName": "HTMLTextAreaElement",
            "name": "disabled",
            "prop": true,
            "propName": "disabled",
            "readonly": false,
            "value": "boolean"
          },
          "maxLength": {
            "attr": false,
            "attrName": "maxlength",
            "keyInterfaceName": "HTMLTextAreaElement",
            "name": "maxLength",
            "prop": true,
            "propName": "maxLength",
            "readonly": false,
            "value": "number"
          },
          "maxlength": {
            "attr": true,
            "attrName": "maxlength",
            "keyInterfaceName": "HTMLTextAreaElement",
            "name": "maxlength",
            "prop": false,
            "propName": "maxLength",
            "readonly": false,
            "value": "number"
          },
          "minLength": {
            "attr": false,
            "attrName": "minlength",
            "keyInterfaceName": "HTMLTextAreaElement",
            "name": "minLength",
            "prop": true,
            "propName": "minLength",
            "readonly": false,
            "value": "number"
          },
          "minlength": {
            "attr": true,
            "attrName": "minlength",
            "keyInterfaceName": "HTMLTextAreaElement",
            "name": "minlength",
            "prop": false,
            "propName": "minLength",
            "readonly": false,
            "value": "number"
          },
          "name": {
            "attr": true,
            "attrName": "name",
            "keyInterfaceName": "HTMLTextAreaElement",
            "name": "name",
            "prop": true,
            "propName": "name",
            "readonly": false,
            "value": "string"
          },
          "placeholder": {
            "attr": true,
            "attrName": "placeholder",
            "keyInterfaceName": "HTMLTextAreaElement",
            "name": "placeholder",
            "prop": true,
            "propName": "placeholder",
            "readonly": false,
            "value": "string"
          },
          "readOnly": {
            "attr": false,
            "attrName": "readonly",
            "keyInterfaceName": "HTMLTextAreaElement",
            "name": "readOnly",
            "prop": true,
            "propName": "readOnly",
            "readonly": false,
            "value": "boolean"
          },
          "readonly": {
            "attr": true,
            "attrName": "readonly",
            "keyInterfaceName": "HTMLTextAreaElement",
            "name": "readonly",
            "prop": false,
            "propName": "readOnly",
            "readonly": false,
            "value": "boolean"
          },
          "required": {
            "attr": true,
            "attrName": "required",
            "keyInterfaceName": "HTMLTextAreaElement",
            "name": "required",
            "prop": true,
            "propName": "required",
            "readonly": false,
            "value": "boolean"
          },
          "rows": {
            "attr": true,
            "attrName": "rows",
            "keyInterfaceName": "HTMLTextAreaElement",
            "name": "rows",
            "prop": true,
            "propName": "rows",
            "readonly": false,
            "value": "number"
          },
          "selectionDirection": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLTextAreaElement",
            "name": "selectionDirection",
            "prop": true,
            "propName": "selectionDirection",
            "readonly": false,
            "value": "string"
          },
          "selectionEnd": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLTextAreaElement",
            "name": "selectionEnd",
            "prop": true,
            "propName": "selectionEnd",
            "readonly": false,
            "value": "number"
          },
          "selectionStart": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLTextAreaElement",
            "name": "selectionStart",
            "prop": true,
            "propName": "selectionStart",
            "readonly": false,
            "value": "number"
          },
          "value": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLTextAreaElement",
            "name": "value",
            "prop": true,
            "propName": "value",
            "readonly": false,
            "value": "string"
          },
          "wrap": {
            "attr": true,
            "attrName": "wrap",
            "keyInterfaceName": "HTMLTextAreaElement",
            "name": "wrap",
            "prop": true,
            "propName": "wrap",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [
          "HTMLTextAreaElement.form",
          "HTMLTextAreaElement.labels",
          "HTMLTextAreaElement.textLength",
          "HTMLTextAreaElement.type",
          "HTMLTextAreaElement.validationMessage",
          "HTMLTextAreaElement.validity",
          "HTMLTextAreaElement.willValidate"
        ],
        "tagInterfaceName": "HTMLTextAreaElement"
      },
      "tfoot": {
        "booleans": [],
        "events": [],
        "keys": {
          "align": {
            "attr": true,
            "attrName": "align",
            "keyInterfaceName": "HTMLTableSectionElement",
            "name": "align",
            "prop": true,
            "propName": "align",
            "readonly": false,
            "value": "string"
          },
          "ch": {
            "attr": false,
            "attrName": "char",
            "keyInterfaceName": "HTMLTableSectionElement",
            "name": "ch",
            "prop": true,
            "propName": "ch",
            "readonly": false,
            "value": "string"
          },
          "char": {
            "attr": true,
            "attrName": "char",
            "keyInterfaceName": "HTMLTableSectionElement",
            "name": "char",
            "prop": false,
            "propName": "ch",
            "readonly": false,
            "value": "string"
          },
          "charoff": {
            "attr": true,
            "attrName": "charoff",
            "keyInterfaceName": "HTMLTableSectionElement",
            "name": "charoff",
            "prop": false,
            "propName": "chOff",
            "readonly": false,
            "value": "string"
          },
          "chOff": {
            "attr": false,
            "attrName": "charoff",
            "keyInterfaceName": "HTMLTableSectionElement",
            "name": "chOff",
            "prop": true,
            "propName": "chOff",
            "readonly": false,
            "value": "string"
          },
          "vAlign": {
            "attr": false,
            "attrName": "valign",
            "keyInterfaceName": "HTMLTableSectionElement",
            "name": "vAlign",
            "prop": true,
            "propName": "vAlign",
            "readonly": false,
            "value": "string"
          },
          "valign": {
            "attr": true,
            "attrName": "valign",
            "keyInterfaceName": "HTMLTableSectionElement",
            "name": "valign",
            "prop": false,
            "propName": "vAlign",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [
          "HTMLTableSectionElement.rows"
        ],
        "tagInterfaceName": "HTMLTableSectionElement"
      },
      "th": {
        "booleans": [
          "HTMLTableCellElement.noWrap",
          "HTMLTableCellElement.nowrap"
        ],
        "events": [],
        "keys": {
          "abbr": {
            "attr": true,
            "attrName": "abbr",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "abbr",
            "prop": true,
            "propName": "abbr",
            "readonly": false,
            "value": "string"
          },
          "align": {
            "attr": true,
            "attrName": "align",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "align",
            "prop": true,
            "propName": "align",
            "readonly": false,
            "value": "string"
          },
          "axis": {
            "attr": true,
            "attrName": "axis",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "axis",
            "prop": true,
            "propName": "axis",
            "readonly": false,
            "value": "string"
          },
          "bgColor": {
            "attr": false,
            "attrName": "bgcolor",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "bgColor",
            "prop": true,
            "propName": "bgColor",
            "readonly": false,
            "value": "string"
          },
          "bgcolor": {
            "attr": true,
            "attrName": "bgcolor",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "bgcolor",
            "prop": false,
            "propName": "bgColor",
            "readonly": false,
            "value": "string"
          },
          "ch": {
            "attr": false,
            "attrName": "char",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "ch",
            "prop": true,
            "propName": "ch",
            "readonly": false,
            "value": "string"
          },
          "char": {
            "attr": true,
            "attrName": "char",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "char",
            "prop": false,
            "propName": "ch",
            "readonly": false,
            "value": "string"
          },
          "charoff": {
            "attr": true,
            "attrName": "charoff",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "charoff",
            "prop": false,
            "propName": "chOff",
            "readonly": false,
            "value": "string"
          },
          "chOff": {
            "attr": false,
            "attrName": "charoff",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "chOff",
            "prop": true,
            "propName": "chOff",
            "readonly": false,
            "value": "string"
          },
          "colSpan": {
            "attr": false,
            "attrName": "colspan",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "colSpan",
            "prop": true,
            "propName": "colSpan",
            "readonly": false,
            "value": "number"
          },
          "colspan": {
            "attr": true,
            "attrName": "colspan",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "colspan",
            "prop": false,
            "propName": "colSpan",
            "readonly": false,
            "value": "number"
          },
          "headers": {
            "attr": true,
            "attrName": "headers",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "headers",
            "prop": true,
            "propName": "headers",
            "readonly": false,
            "value": "string"
          },
          "height": {
            "attr": true,
            "attrName": "height",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "height",
            "prop": true,
            "propName": "height",
            "readonly": false,
            "value": "string"
          },
          "noWrap": {
            "attr": false,
            "attrName": "nowrap",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "noWrap",
            "prop": true,
            "propName": "noWrap",
            "readonly": false,
            "value": "boolean"
          },
          "nowrap": {
            "attr": true,
            "attrName": "nowrap",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "nowrap",
            "prop": false,
            "propName": "noWrap",
            "readonly": false,
            "value": "boolean"
          },
          "rowSpan": {
            "attr": false,
            "attrName": "rowspan",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "rowSpan",
            "prop": true,
            "propName": "rowSpan",
            "readonly": false,
            "value": "number"
          },
          "rowspan": {
            "attr": true,
            "attrName": "rowspan",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "rowspan",
            "prop": false,
            "propName": "rowSpan",
            "readonly": false,
            "value": "number"
          },
          "scope": {
            "attr": true,
            "attrName": "scope",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "scope",
            "prop": true,
            "propName": "scope",
            "readonly": false,
            "value": "string"
          },
          "vAlign": {
            "attr": false,
            "attrName": "valign",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "vAlign",
            "prop": true,
            "propName": "vAlign",
            "readonly": false,
            "value": "string"
          },
          "valign": {
            "attr": true,
            "attrName": "valign",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "valign",
            "prop": false,
            "propName": "vAlign",
            "readonly": false,
            "value": "string"
          },
          "width": {
            "attr": true,
            "attrName": "width",
            "keyInterfaceName": "HTMLTableCellElement",
            "name": "width",
            "prop": true,
            "propName": "width",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [
          "HTMLTableCellElement.cellIndex"
        ],
        "tagInterfaceName": "HTMLTableCellElement"
      },
      "thead": {
        "booleans": [],
        "events": [],
        "keys": {
          "align": {
            "attr": true,
            "attrName": "align",
            "keyInterfaceName": "HTMLTableSectionElement",
            "name": "align",
            "prop": true,
            "propName": "align",
            "readonly": false,
            "value": "string"
          },
          "ch": {
            "attr": false,
            "attrName": "char",
            "keyInterfaceName": "HTMLTableSectionElement",
            "name": "ch",
            "prop": true,
            "propName": "ch",
            "readonly": false,
            "value": "string"
          },
          "char": {
            "attr": true,
            "attrName": "char",
            "keyInterfaceName": "HTMLTableSectionElement",
            "name": "char",
            "prop": false,
            "propName": "ch",
            "readonly": false,
            "value": "string"
          },
          "charoff": {
            "attr": true,
            "attrName": "charoff",
            "keyInterfaceName": "HTMLTableSectionElement",
            "name": "charoff",
            "prop": false,
            "propName": "chOff",
            "readonly": false,
            "value": "string"
          },
          "chOff": {
            "attr": false,
            "attrName": "charoff",
            "keyInterfaceName": "HTMLTableSectionElement",
            "name": "chOff",
            "prop": true,
            "propName": "chOff",
            "readonly": false,
            "value": "string"
          },
          "vAlign": {
            "attr": false,
            "attrName": "valign",
            "keyInterfaceName": "HTMLTableSectionElement",
            "name": "vAlign",
            "prop": true,
            "propName": "vAlign",
            "readonly": false,
            "value": "string"
          },
          "valign": {
            "attr": true,
            "attrName": "valign",
            "keyInterfaceName": "HTMLTableSectionElement",
            "name": "valign",
            "prop": false,
            "propName": "vAlign",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [
          "HTMLTableSectionElement.rows"
        ],
        "tagInterfaceName": "HTMLTableSectionElement"
      },
      "time": {
        "booleans": [],
        "events": [],
        "keys": {
          "dateTime": {
            "attr": false,
            "attrName": "datetime",
            "keyInterfaceName": "HTMLTimeElement",
            "name": "dateTime",
            "prop": true,
            "propName": "dateTime",
            "readonly": false,
            "value": "string"
          },
          "datetime": {
            "attr": true,
            "attrName": "datetime",
            "keyInterfaceName": "HTMLTimeElement",
            "name": "datetime",
            "prop": false,
            "propName": "dateTime",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLTimeElement"
      },
      "title": {
        "booleans": [],
        "events": [],
        "keys": {
          "text": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLTitleElement",
            "name": "text",
            "prop": true,
            "propName": "text",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLTitleElement"
      },
      "tr": {
        "booleans": [],
        "events": [],
        "keys": {
          "align": {
            "attr": true,
            "attrName": "align",
            "keyInterfaceName": "HTMLTableRowElement",
            "name": "align",
            "prop": true,
            "propName": "align",
            "readonly": false,
            "value": "string"
          },
          "bgColor": {
            "attr": false,
            "attrName": "bgcolor",
            "keyInterfaceName": "HTMLTableRowElement",
            "name": "bgColor",
            "prop": true,
            "propName": "bgColor",
            "readonly": false,
            "value": "string"
          },
          "bgcolor": {
            "attr": true,
            "attrName": "bgcolor",
            "keyInterfaceName": "HTMLTableRowElement",
            "name": "bgcolor",
            "prop": false,
            "propName": "bgColor",
            "readonly": false,
            "value": "string"
          },
          "ch": {
            "attr": false,
            "attrName": "char",
            "keyInterfaceName": "HTMLTableRowElement",
            "name": "ch",
            "prop": true,
            "propName": "ch",
            "readonly": false,
            "value": "string"
          },
          "char": {
            "attr": true,
            "attrName": "char",
            "keyInterfaceName": "HTMLTableRowElement",
            "name": "char",
            "prop": false,
            "propName": "ch",
            "readonly": false,
            "value": "string"
          },
          "charoff": {
            "attr": true,
            "attrName": "charoff",
            "keyInterfaceName": "HTMLTableRowElement",
            "name": "charoff",
            "prop": false,
            "propName": "chOff",
            "readonly": false,
            "value": "string"
          },
          "chOff": {
            "attr": false,
            "attrName": "charoff",
            "keyInterfaceName": "HTMLTableRowElement",
            "name": "chOff",
            "prop": true,
            "propName": "chOff",
            "readonly": false,
            "value": "string"
          },
          "vAlign": {
            "attr": false,
            "attrName": "valign",
            "keyInterfaceName": "HTMLTableRowElement",
            "name": "vAlign",
            "prop": true,
            "propName": "vAlign",
            "readonly": false,
            "value": "string"
          },
          "valign": {
            "attr": true,
            "attrName": "valign",
            "keyInterfaceName": "HTMLTableRowElement",
            "name": "valign",
            "prop": false,
            "propName": "vAlign",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [
          "HTMLTableRowElement.cells",
          "HTMLTableRowElement.rowIndex",
          "HTMLTableRowElement.sectionRowIndex"
        ],
        "tagInterfaceName": "HTMLTableRowElement"
      },
      "track": {
        "booleans": [
          "HTMLTrackElement.default"
        ],
        "events": [],
        "keys": {
          "default": {
            "attr": true,
            "attrName": "default",
            "keyInterfaceName": "HTMLTrackElement",
            "name": "default",
            "prop": true,
            "propName": "default",
            "readonly": false,
            "value": "boolean"
          },
          "kind": {
            "attr": true,
            "attrName": "kind",
            "keyInterfaceName": "HTMLTrackElement",
            "name": "kind",
            "prop": true,
            "propName": "kind",
            "readonly": false,
            "value": "string"
          },
          "label": {
            "attr": true,
            "attrName": "label",
            "keyInterfaceName": "HTMLTrackElement",
            "name": "label",
            "prop": true,
            "propName": "label",
            "readonly": false,
            "value": "string"
          },
          "src": {
            "attr": true,
            "attrName": "src",
            "keyInterfaceName": "HTMLTrackElement",
            "name": "src",
            "prop": true,
            "propName": "src",
            "readonly": false,
            "value": "string"
          },
          "srclang": {
            "attr": true,
            "attrName": "srclang",
            "keyInterfaceName": "HTMLTrackElement",
            "name": "srclang",
            "prop": true,
            "propName": "srclang",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [
          "HTMLTrackElement.readyState",
          "HTMLTrackElement.track"
        ],
        "tagInterfaceName": "HTMLTrackElement"
      },
      "tt": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "u": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "ul": {
        "booleans": [
          "HTMLUListElement.compact"
        ],
        "events": [],
        "keys": {
          "compact": {
            "attr": true,
            "attrName": "compact",
            "keyInterfaceName": "HTMLUListElement",
            "name": "compact",
            "prop": true,
            "propName": "compact",
            "readonly": false,
            "value": "boolean"
          },
          "type": {
            "attr": true,
            "attrName": "type",
            "keyInterfaceName": "HTMLUListElement",
            "name": "type",
            "prop": true,
            "propName": "type",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLUListElement"
      },
      "var": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "video": {
        "booleans": [
          "HTMLMediaElement.autoplay",
          "HTMLMediaElement.controls",
          "HTMLMediaElement.defaultMuted",
          "HTMLMediaElement.loop",
          "HTMLMediaElement.muted",
          "HTMLMediaElement.muted",
          "HTMLMediaElement.preservesPitch",
          "HTMLVideoElement.disablePictureInPicture",
          "HTMLVideoElement.disablepictureinpicture"
        ],
        "events": [
          "HTMLMediaElement.onencrypted",
          "HTMLMediaElement.onwaitingforkey"
        ],
        "keys": {
          "autoplay": {
            "attr": true,
            "attrName": "autoplay",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "autoplay",
            "prop": true,
            "propName": "autoplay",
            "readonly": false,
            "value": "boolean"
          },
          "controls": {
            "attr": true,
            "attrName": "controls",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "controls",
            "prop": true,
            "propName": "controls",
            "readonly": false,
            "value": "boolean"
          },
          "crossOrigin": {
            "attr": false,
            "attrName": "crossorigin",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "crossOrigin",
            "prop": true,
            "propName": "crossOrigin",
            "readonly": false,
            "value": "string"
          },
          "crossorigin": {
            "attr": true,
            "attrName": "crossorigin",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "crossorigin",
            "prop": false,
            "propName": "crossOrigin",
            "readonly": false,
            "value": "string"
          },
          "currentTime": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "currentTime",
            "prop": true,
            "propName": "currentTime",
            "readonly": false,
            "value": "number"
          },
          "defaultMuted": {
            "attr": false,
            "attrName": "muted",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "defaultMuted",
            "prop": true,
            "propName": "defaultMuted",
            "readonly": false,
            "value": "boolean"
          },
          "defaultPlaybackRate": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "defaultPlaybackRate",
            "prop": true,
            "propName": "defaultPlaybackRate",
            "readonly": false,
            "value": "number"
          },
          "disablePictureInPicture": {
            "attr": false,
            "attrName": "disablepictureinpicture",
            "keyInterfaceName": "HTMLVideoElement",
            "name": "disablePictureInPicture",
            "prop": true,
            "propName": "disablePictureInPicture",
            "readonly": false,
            "value": "boolean"
          },
          "disablepictureinpicture": {
            "attr": true,
            "attrName": "disablepictureinpicture",
            "keyInterfaceName": "HTMLVideoElement",
            "name": "disablepictureinpicture",
            "prop": false,
            "propName": "disablePictureInPicture",
            "readonly": false,
            "value": "boolean"
          },
          "height": {
            "attr": true,
            "attrName": "height",
            "keyInterfaceName": "HTMLVideoElement",
            "name": "height",
            "prop": true,
            "propName": "height",
            "readonly": false,
            "value": "number"
          },
          "loop": {
            "attr": true,
            "attrName": "loop",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "loop",
            "prop": true,
            "propName": "loop",
            "readonly": false,
            "value": "boolean"
          },
          "muted": {
            "attr": true,
            "attrName": "muted",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "muted",
            "prop": true,
            "propName": "defaultMuted",
            "readonly": false,
            "value": "boolean"
          },
          "onencrypted": {
            "attr": true,
            "attrName": "onencrypted",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "onencrypted",
            "prop": true,
            "propName": "onencrypted",
            "readonly": false,
            "value": "event"
          },
          "onwaitingforkey": {
            "attr": true,
            "attrName": "onwaitingforkey",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "onwaitingforkey",
            "prop": true,
            "propName": "onwaitingforkey",
            "readonly": false,
            "value": "event"
          },
          "playbackRate": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "playbackRate",
            "prop": true,
            "propName": "playbackRate",
            "readonly": false,
            "value": "number"
          },
          "poster": {
            "attr": true,
            "attrName": "poster",
            "keyInterfaceName": "HTMLVideoElement",
            "name": "poster",
            "prop": true,
            "propName": "poster",
            "readonly": false,
            "value": "string"
          },
          "preload": {
            "attr": true,
            "attrName": "preload",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "preload",
            "prop": true,
            "propName": "preload",
            "readonly": false,
            "value": "string"
          },
          "preservesPitch": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "preservesPitch",
            "prop": true,
            "propName": "preservesPitch",
            "readonly": false,
            "value": "boolean"
          },
          "src": {
            "attr": true,
            "attrName": "src",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "src",
            "prop": true,
            "propName": "src",
            "readonly": false,
            "value": "string"
          },
          "srcObject": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "srcObject",
            "prop": true,
            "propName": "srcObject",
            "readonly": false,
            "value": "MediaStream | MediaSource | Blob | File"
          },
          "volume": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLMediaElement",
            "name": "volume",
            "prop": true,
            "propName": "volume",
            "readonly": false,
            "value": "number"
          },
          "width": {
            "attr": true,
            "attrName": "width",
            "keyInterfaceName": "HTMLVideoElement",
            "name": "width",
            "prop": true,
            "propName": "width",
            "readonly": false,
            "value": "number"
          }
        },
        "readonly": [
          "HTMLMediaElement.buffered",
          "HTMLMediaElement.currentSrc",
          "HTMLMediaElement.duration",
          "HTMLMediaElement.ended",
          "HTMLMediaElement.error",
          "HTMLMediaElement.mediaKeys",
          "HTMLMediaElement.mozAudioCaptured",
          "HTMLMediaElement.mozFragmentEnd",
          "HTMLMediaElement.networkState",
          "HTMLMediaElement.paused",
          "HTMLMediaElement.played",
          "HTMLMediaElement.readyState",
          "HTMLMediaElement.seekable",
          "HTMLMediaElement.seeking",
          "HTMLMediaElement.sinkId",
          "HTMLMediaElement.textTracks",
          "HTMLVideoElement.mozDecodedFrames",
          "HTMLVideoElement.mozFrameDelay",
          "HTMLVideoElement.mozHasAudio",
          "HTMLVideoElement.mozPaintedFrames",
          "HTMLVideoElement.mozParsedFrames",
          "HTMLVideoElement.mozPresentedFrames",
          "HTMLVideoElement.videoHeight",
          "HTMLVideoElement.videoWidth"
        ],
        "tagInterfaceName": "HTMLVideoElement"
      },
      "wbr": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLElement"
      },
      "webview": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "HTMLUnknownElement"
      },
      "xmp": {
        "booleans": [],
        "events": [],
        "keys": {
          "width": {
            "attr": true,
            "attrName": "width",
            "keyInterfaceName": "HTMLPreElement",
            "name": "width",
            "prop": true,
            "propName": "width",
            "readonly": false,
            "value": "number"
          }
        },
        "readonly": [],
        "tagInterfaceName": "HTMLPreElement"
      }
    },
    "keys": {
      "element": {
        "booleans": [],
        "events": [
          "Element.onfullscreenchange",
          "Element.onfullscreenerror"
        ],
        "keys": {
          "ariaActiveDescendantElement": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "Element",
            "name": "ariaActiveDescendantElement",
            "prop": true,
            "propName": "ariaActiveDescendantElement",
            "readonly": false,
            "value": "Element"
          },
          "ariaAtomic": {
            "attr": false,
            "attrName": "aria-atomic",
            "keyInterfaceName": "Element",
            "name": "ariaAtomic",
            "prop": true,
            "propName": "ariaAtomic",
            "readonly": false,
            "value": "unknown"
          },
          "aria-atomic": {
            "attr": true,
            "attrName": "aria-atomic",
            "keyInterfaceName": "Element",
            "name": "aria-atomic",
            "prop": false,
            "propName": "ariaAtomic",
            "readonly": false,
            "value": "unknown"
          },
          "ariaAutoComplete": {
            "attr": false,
            "attrName": "aria-autocomplete",
            "keyInterfaceName": "Element",
            "name": "ariaAutoComplete",
            "prop": true,
            "propName": "ariaAutoComplete",
            "readonly": false,
            "value": "unknown"
          },
          "aria-autocomplete": {
            "attr": true,
            "attrName": "aria-autocomplete",
            "keyInterfaceName": "Element",
            "name": "aria-autocomplete",
            "prop": false,
            "propName": "ariaAutoComplete",
            "readonly": false,
            "value": "unknown"
          },
          "ariaBrailleLabel": {
            "attr": false,
            "attrName": "aria-braillelabel",
            "keyInterfaceName": "Element",
            "name": "ariaBrailleLabel",
            "prop": true,
            "propName": "ariaBrailleLabel",
            "readonly": false,
            "value": "unknown"
          },
          "aria-braillelabel": {
            "attr": true,
            "attrName": "aria-braillelabel",
            "keyInterfaceName": "Element",
            "name": "aria-braillelabel",
            "prop": false,
            "propName": "ariaBrailleLabel",
            "readonly": false,
            "value": "unknown"
          },
          "ariaBrailleRoleDescription": {
            "attr": false,
            "attrName": "aria-brailleroledescription",
            "keyInterfaceName": "Element",
            "name": "ariaBrailleRoleDescription",
            "prop": true,
            "propName": "ariaBrailleRoleDescription",
            "readonly": false,
            "value": "unknown"
          },
          "aria-brailleroledescription": {
            "attr": true,
            "attrName": "aria-brailleroledescription",
            "keyInterfaceName": "Element",
            "name": "aria-brailleroledescription",
            "prop": false,
            "propName": "ariaBrailleRoleDescription",
            "readonly": false,
            "value": "unknown"
          },
          "ariaBusy": {
            "attr": false,
            "attrName": "aria-busy",
            "keyInterfaceName": "Element",
            "name": "ariaBusy",
            "prop": true,
            "propName": "ariaBusy",
            "readonly": false,
            "value": "unknown"
          },
          "aria-busy": {
            "attr": true,
            "attrName": "aria-busy",
            "keyInterfaceName": "Element",
            "name": "aria-busy",
            "prop": false,
            "propName": "ariaBusy",
            "readonly": false,
            "value": "unknown"
          },
          "ariaChecked": {
            "attr": false,
            "attrName": "aria-checked",
            "keyInterfaceName": "Element",
            "name": "ariaChecked",
            "prop": true,
            "propName": "ariaChecked",
            "readonly": false,
            "value": "unknown"
          },
          "aria-checked": {
            "attr": true,
            "attrName": "aria-checked",
            "keyInterfaceName": "Element",
            "name": "aria-checked",
            "prop": false,
            "propName": "ariaChecked",
            "readonly": false,
            "value": "unknown"
          },
          "ariaColCount": {
            "attr": false,
            "attrName": "aria-colcount",
            "keyInterfaceName": "Element",
            "name": "ariaColCount",
            "prop": true,
            "propName": "ariaColCount",
            "readonly": false,
            "value": "unknown"
          },
          "aria-colcount": {
            "attr": true,
            "attrName": "aria-colcount",
            "keyInterfaceName": "Element",
            "name": "aria-colcount",
            "prop": false,
            "propName": "ariaColCount",
            "readonly": false,
            "value": "unknown"
          },
          "ariaColIndex": {
            "attr": false,
            "attrName": "aria-colindex",
            "keyInterfaceName": "Element",
            "name": "ariaColIndex",
            "prop": true,
            "propName": "ariaColIndex",
            "readonly": false,
            "value": "unknown"
          },
          "aria-colindex": {
            "attr": true,
            "attrName": "aria-colindex",
            "keyInterfaceName": "Element",
            "name": "aria-colindex",
            "prop": false,
            "propName": "ariaColIndex",
            "readonly": false,
            "value": "unknown"
          },
          "ariaColIndexText": {
            "attr": false,
            "attrName": "aria-colindextext",
            "keyInterfaceName": "Element",
            "name": "ariaColIndexText",
            "prop": true,
            "propName": "ariaColIndexText",
            "readonly": false,
            "value": "unknown"
          },
          "aria-colindextext": {
            "attr": true,
            "attrName": "aria-colindextext",
            "keyInterfaceName": "Element",
            "name": "aria-colindextext",
            "prop": false,
            "propName": "ariaColIndexText",
            "readonly": false,
            "value": "unknown"
          },
          "ariaColSpan": {
            "attr": false,
            "attrName": "aria-colspan",
            "keyInterfaceName": "Element",
            "name": "ariaColSpan",
            "prop": true,
            "propName": "ariaColSpan",
            "readonly": false,
            "value": "unknown"
          },
          "aria-colspan": {
            "attr": true,
            "attrName": "aria-colspan",
            "keyInterfaceName": "Element",
            "name": "aria-colspan",
            "prop": false,
            "propName": "ariaColSpan",
            "readonly": false,
            "value": "unknown"
          },
          "ariaCurrent": {
            "attr": false,
            "attrName": "aria-current",
            "keyInterfaceName": "Element",
            "name": "ariaCurrent",
            "prop": true,
            "propName": "ariaCurrent",
            "readonly": false,
            "value": "unknown"
          },
          "aria-current": {
            "attr": true,
            "attrName": "aria-current",
            "keyInterfaceName": "Element",
            "name": "aria-current",
            "prop": false,
            "propName": "ariaCurrent",
            "readonly": false,
            "value": "unknown"
          },
          "ariaDescription": {
            "attr": false,
            "attrName": "aria-description",
            "keyInterfaceName": "Element",
            "name": "ariaDescription",
            "prop": true,
            "propName": "ariaDescription",
            "readonly": false,
            "value": "unknown"
          },
          "aria-description": {
            "attr": true,
            "attrName": "aria-description",
            "keyInterfaceName": "Element",
            "name": "aria-description",
            "prop": false,
            "propName": "ariaDescription",
            "readonly": false,
            "value": "unknown"
          },
          "ariaDisabled": {
            "attr": false,
            "attrName": "aria-disabled",
            "keyInterfaceName": "Element",
            "name": "ariaDisabled",
            "prop": true,
            "propName": "ariaDisabled",
            "readonly": false,
            "value": "unknown"
          },
          "aria-disabled": {
            "attr": true,
            "attrName": "aria-disabled",
            "keyInterfaceName": "Element",
            "name": "aria-disabled",
            "prop": false,
            "propName": "ariaDisabled",
            "readonly": false,
            "value": "unknown"
          },
          "ariaExpanded": {
            "attr": false,
            "attrName": "aria-expanded",
            "keyInterfaceName": "Element",
            "name": "ariaExpanded",
            "prop": true,
            "propName": "ariaExpanded",
            "readonly": false,
            "value": "unknown"
          },
          "aria-expanded": {
            "attr": true,
            "attrName": "aria-expanded",
            "keyInterfaceName": "Element",
            "name": "aria-expanded",
            "prop": false,
            "propName": "ariaExpanded",
            "readonly": false,
            "value": "unknown"
          },
          "ariaHasPopup": {
            "attr": false,
            "attrName": "aria-haspopup",
            "keyInterfaceName": "Element",
            "name": "ariaHasPopup",
            "prop": true,
            "propName": "ariaHasPopup",
            "readonly": false,
            "value": "unknown"
          },
          "aria-haspopup": {
            "attr": true,
            "attrName": "aria-haspopup",
            "keyInterfaceName": "Element",
            "name": "aria-haspopup",
            "prop": false,
            "propName": "ariaHasPopup",
            "readonly": false,
            "value": "unknown"
          },
          "ariaHidden": {
            "attr": false,
            "attrName": "aria-hidden",
            "keyInterfaceName": "Element",
            "name": "ariaHidden",
            "prop": true,
            "propName": "ariaHidden",
            "readonly": false,
            "value": "unknown"
          },
          "aria-hidden": {
            "attr": true,
            "attrName": "aria-hidden",
            "keyInterfaceName": "Element",
            "name": "aria-hidden",
            "prop": false,
            "propName": "ariaHidden",
            "readonly": false,
            "value": "unknown"
          },
          "ariaInvalid": {
            "attr": false,
            "attrName": "aria-invalid",
            "keyInterfaceName": "Element",
            "name": "ariaInvalid",
            "prop": true,
            "propName": "ariaInvalid",
            "readonly": false,
            "value": "unknown"
          },
          "aria-invalid": {
            "attr": true,
            "attrName": "aria-invalid",
            "keyInterfaceName": "Element",
            "name": "aria-invalid",
            "prop": false,
            "propName": "ariaInvalid",
            "readonly": false,
            "value": "unknown"
          },
          "ariaKeyShortcuts": {
            "attr": false,
            "attrName": "aria-keyshortcuts",
            "keyInterfaceName": "Element",
            "name": "ariaKeyShortcuts",
            "prop": true,
            "propName": "ariaKeyShortcuts",
            "readonly": false,
            "value": "unknown"
          },
          "aria-keyshortcuts": {
            "attr": true,
            "attrName": "aria-keyshortcuts",
            "keyInterfaceName": "Element",
            "name": "aria-keyshortcuts",
            "prop": false,
            "propName": "ariaKeyShortcuts",
            "readonly": false,
            "value": "unknown"
          },
          "ariaLabel": {
            "attr": false,
            "attrName": "aria-label",
            "keyInterfaceName": "Element",
            "name": "ariaLabel",
            "prop": true,
            "propName": "ariaLabel",
            "readonly": false,
            "value": "unknown"
          },
          "aria-label": {
            "attr": true,
            "attrName": "aria-label",
            "keyInterfaceName": "Element",
            "name": "aria-label",
            "prop": false,
            "propName": "ariaLabel",
            "readonly": false,
            "value": "unknown"
          },
          "ariaLevel": {
            "attr": false,
            "attrName": "aria-level",
            "keyInterfaceName": "Element",
            "name": "ariaLevel",
            "prop": true,
            "propName": "ariaLevel",
            "readonly": false,
            "value": "unknown"
          },
          "aria-level": {
            "attr": true,
            "attrName": "aria-level",
            "keyInterfaceName": "Element",
            "name": "aria-level",
            "prop": false,
            "propName": "ariaLevel",
            "readonly": false,
            "value": "unknown"
          },
          "ariaLive": {
            "attr": false,
            "attrName": "aria-live",
            "keyInterfaceName": "Element",
            "name": "ariaLive",
            "prop": true,
            "propName": "ariaLive",
            "readonly": false,
            "value": "unknown"
          },
          "aria-live": {
            "attr": true,
            "attrName": "aria-live",
            "keyInterfaceName": "Element",
            "name": "aria-live",
            "prop": false,
            "propName": "ariaLive",
            "readonly": false,
            "value": "unknown"
          },
          "ariaModal": {
            "attr": false,
            "attrName": "aria-modal",
            "keyInterfaceName": "Element",
            "name": "ariaModal",
            "prop": true,
            "propName": "ariaModal",
            "readonly": false,
            "value": "unknown"
          },
          "aria-modal": {
            "attr": true,
            "attrName": "aria-modal",
            "keyInterfaceName": "Element",
            "name": "aria-modal",
            "prop": false,
            "propName": "ariaModal",
            "readonly": false,
            "value": "unknown"
          },
          "ariaMultiLine": {
            "attr": false,
            "attrName": "aria-multiline",
            "keyInterfaceName": "Element",
            "name": "ariaMultiLine",
            "prop": true,
            "propName": "ariaMultiLine",
            "readonly": false,
            "value": "unknown"
          },
          "aria-multiline": {
            "attr": true,
            "attrName": "aria-multiline",
            "keyInterfaceName": "Element",
            "name": "aria-multiline",
            "prop": false,
            "propName": "ariaMultiLine",
            "readonly": false,
            "value": "unknown"
          },
          "ariaMultiSelectable": {
            "attr": false,
            "attrName": "aria-multiselectable",
            "keyInterfaceName": "Element",
            "name": "ariaMultiSelectable",
            "prop": true,
            "propName": "ariaMultiSelectable",
            "readonly": false,
            "value": "unknown"
          },
          "aria-multiselectable": {
            "attr": true,
            "attrName": "aria-multiselectable",
            "keyInterfaceName": "Element",
            "name": "aria-multiselectable",
            "prop": false,
            "propName": "ariaMultiSelectable",
            "readonly": false,
            "value": "unknown"
          },
          "ariaOrientation": {
            "attr": false,
            "attrName": "aria-orientation",
            "keyInterfaceName": "Element",
            "name": "ariaOrientation",
            "prop": true,
            "propName": "ariaOrientation",
            "readonly": false,
            "value": "unknown"
          },
          "aria-orientation": {
            "attr": true,
            "attrName": "aria-orientation",
            "keyInterfaceName": "Element",
            "name": "aria-orientation",
            "prop": false,
            "propName": "ariaOrientation",
            "readonly": false,
            "value": "unknown"
          },
          "ariaPlaceholder": {
            "attr": false,
            "attrName": "aria-placeholder",
            "keyInterfaceName": "Element",
            "name": "ariaPlaceholder",
            "prop": true,
            "propName": "ariaPlaceholder",
            "readonly": false,
            "value": "unknown"
          },
          "aria-placeholder": {
            "attr": true,
            "attrName": "aria-placeholder",
            "keyInterfaceName": "Element",
            "name": "aria-placeholder",
            "prop": false,
            "propName": "ariaPlaceholder",
            "readonly": false,
            "value": "unknown"
          },
          "ariaPosInSet": {
            "attr": false,
            "attrName": "aria-posinset",
            "keyInterfaceName": "Element",
            "name": "ariaPosInSet",
            "prop": true,
            "propName": "ariaPosInSet",
            "readonly": false,
            "value": "unknown"
          },
          "aria-posinset": {
            "attr": true,
            "attrName": "aria-posinset",
            "keyInterfaceName": "Element",
            "name": "aria-posinset",
            "prop": false,
            "propName": "ariaPosInSet",
            "readonly": false,
            "value": "unknown"
          },
          "ariaPressed": {
            "attr": false,
            "attrName": "aria-pressed",
            "keyInterfaceName": "Element",
            "name": "ariaPressed",
            "prop": true,
            "propName": "ariaPressed",
            "readonly": false,
            "value": "unknown"
          },
          "aria-pressed": {
            "attr": true,
            "attrName": "aria-pressed",
            "keyInterfaceName": "Element",
            "name": "aria-pressed",
            "prop": false,
            "propName": "ariaPressed",
            "readonly": false,
            "value": "unknown"
          },
          "ariaReadOnly": {
            "attr": false,
            "attrName": "aria-readonly",
            "keyInterfaceName": "Element",
            "name": "ariaReadOnly",
            "prop": true,
            "propName": "ariaReadOnly",
            "readonly": false,
            "value": "unknown"
          },
          "aria-readonly": {
            "attr": true,
            "attrName": "aria-readonly",
            "keyInterfaceName": "Element",
            "name": "aria-readonly",
            "prop": false,
            "propName": "ariaReadOnly",
            "readonly": false,
            "value": "unknown"
          },
          "ariaRelevant": {
            "attr": false,
            "attrName": "aria-relevant",
            "keyInterfaceName": "Element",
            "name": "ariaRelevant",
            "prop": true,
            "propName": "ariaRelevant",
            "readonly": false,
            "value": "unknown"
          },
          "aria-relevant": {
            "attr": true,
            "attrName": "aria-relevant",
            "keyInterfaceName": "Element",
            "name": "aria-relevant",
            "prop": false,
            "propName": "ariaRelevant",
            "readonly": false,
            "value": "unknown"
          },
          "ariaRequired": {
            "attr": false,
            "attrName": "aria-required",
            "keyInterfaceName": "Element",
            "name": "ariaRequired",
            "prop": true,
            "propName": "ariaRequired",
            "readonly": false,
            "value": "unknown"
          },
          "aria-required": {
            "attr": true,
            "attrName": "aria-required",
            "keyInterfaceName": "Element",
            "name": "aria-required",
            "prop": false,
            "propName": "ariaRequired",
            "readonly": false,
            "value": "unknown"
          },
          "ariaRoleDescription": {
            "attr": false,
            "attrName": "aria-roledescription",
            "keyInterfaceName": "Element",
            "name": "ariaRoleDescription",
            "prop": true,
            "propName": "ariaRoleDescription",
            "readonly": false,
            "value": "unknown"
          },
          "aria-roledescription": {
            "attr": true,
            "attrName": "aria-roledescription",
            "keyInterfaceName": "Element",
            "name": "aria-roledescription",
            "prop": false,
            "propName": "ariaRoleDescription",
            "readonly": false,
            "value": "unknown"
          },
          "ariaRowCount": {
            "attr": false,
            "attrName": "aria-rowcount",
            "keyInterfaceName": "Element",
            "name": "ariaRowCount",
            "prop": true,
            "propName": "ariaRowCount",
            "readonly": false,
            "value": "unknown"
          },
          "aria-rowcount": {
            "attr": true,
            "attrName": "aria-rowcount",
            "keyInterfaceName": "Element",
            "name": "aria-rowcount",
            "prop": false,
            "propName": "ariaRowCount",
            "readonly": false,
            "value": "unknown"
          },
          "ariaRowIndex": {
            "attr": false,
            "attrName": "aria-rowindex",
            "keyInterfaceName": "Element",
            "name": "ariaRowIndex",
            "prop": true,
            "propName": "ariaRowIndex",
            "readonly": false,
            "value": "unknown"
          },
          "aria-rowindex": {
            "attr": true,
            "attrName": "aria-rowindex",
            "keyInterfaceName": "Element",
            "name": "aria-rowindex",
            "prop": false,
            "propName": "ariaRowIndex",
            "readonly": false,
            "value": "unknown"
          },
          "ariaRowIndexText": {
            "attr": false,
            "attrName": "aria-rowindextext",
            "keyInterfaceName": "Element",
            "name": "ariaRowIndexText",
            "prop": true,
            "propName": "ariaRowIndexText",
            "readonly": false,
            "value": "unknown"
          },
          "aria-rowindextext": {
            "attr": true,
            "attrName": "aria-rowindextext",
            "keyInterfaceName": "Element",
            "name": "aria-rowindextext",
            "prop": false,
            "propName": "ariaRowIndexText",
            "readonly": false,
            "value": "unknown"
          },
          "ariaRowSpan": {
            "attr": false,
            "attrName": "aria-rowspan",
            "keyInterfaceName": "Element",
            "name": "ariaRowSpan",
            "prop": true,
            "propName": "ariaRowSpan",
            "readonly": false,
            "value": "unknown"
          },
          "aria-rowspan": {
            "attr": true,
            "attrName": "aria-rowspan",
            "keyInterfaceName": "Element",
            "name": "aria-rowspan",
            "prop": false,
            "propName": "ariaRowSpan",
            "readonly": false,
            "value": "unknown"
          },
          "ariaSelected": {
            "attr": false,
            "attrName": "aria-selected",
            "keyInterfaceName": "Element",
            "name": "ariaSelected",
            "prop": true,
            "propName": "ariaSelected",
            "readonly": false,
            "value": "unknown"
          },
          "aria-selected": {
            "attr": true,
            "attrName": "aria-selected",
            "keyInterfaceName": "Element",
            "name": "aria-selected",
            "prop": false,
            "propName": "ariaSelected",
            "readonly": false,
            "value": "unknown"
          },
          "ariaSetSize": {
            "attr": false,
            "attrName": "aria-setsize",
            "keyInterfaceName": "Element",
            "name": "ariaSetSize",
            "prop": true,
            "propName": "ariaSetSize",
            "readonly": false,
            "value": "unknown"
          },
          "aria-setsize": {
            "attr": true,
            "attrName": "aria-setsize",
            "keyInterfaceName": "Element",
            "name": "aria-setsize",
            "prop": false,
            "propName": "ariaSetSize",
            "readonly": false,
            "value": "unknown"
          },
          "ariaSort": {
            "attr": false,
            "attrName": "aria-sort",
            "keyInterfaceName": "Element",
            "name": "ariaSort",
            "prop": true,
            "propName": "ariaSort",
            "readonly": false,
            "value": "unknown"
          },
          "aria-sort": {
            "attr": true,
            "attrName": "aria-sort",
            "keyInterfaceName": "Element",
            "name": "aria-sort",
            "prop": false,
            "propName": "ariaSort",
            "readonly": false,
            "value": "unknown"
          },
          "ariaValueMax": {
            "attr": false,
            "attrName": "aria-valuemax",
            "keyInterfaceName": "Element",
            "name": "ariaValueMax",
            "prop": true,
            "propName": "ariaValueMax",
            "readonly": false,
            "value": "unknown"
          },
          "aria-valuemax": {
            "attr": true,
            "attrName": "aria-valuemax",
            "keyInterfaceName": "Element",
            "name": "aria-valuemax",
            "prop": false,
            "propName": "ariaValueMax",
            "readonly": false,
            "value": "unknown"
          },
          "ariaValueMin": {
            "attr": false,
            "attrName": "aria-valuemin",
            "keyInterfaceName": "Element",
            "name": "ariaValueMin",
            "prop": true,
            "propName": "ariaValueMin",
            "readonly": false,
            "value": "unknown"
          },
          "aria-valuemin": {
            "attr": true,
            "attrName": "aria-valuemin",
            "keyInterfaceName": "Element",
            "name": "aria-valuemin",
            "prop": false,
            "propName": "ariaValueMin",
            "readonly": false,
            "value": "unknown"
          },
          "ariaValueNow": {
            "attr": false,
            "attrName": "aria-valuenow",
            "keyInterfaceName": "Element",
            "name": "ariaValueNow",
            "prop": true,
            "propName": "ariaValueNow",
            "readonly": false,
            "value": "unknown"
          },
          "aria-valuenow": {
            "attr": true,
            "attrName": "aria-valuenow",
            "keyInterfaceName": "Element",
            "name": "aria-valuenow",
            "prop": false,
            "propName": "ariaValueNow",
            "readonly": false,
            "value": "unknown"
          },
          "ariaValueText": {
            "attr": false,
            "attrName": "aria-valuetext",
            "keyInterfaceName": "Element",
            "name": "ariaValueText",
            "prop": true,
            "propName": "ariaValueText",
            "readonly": false,
            "value": "unknown"
          },
          "aria-valuetext": {
            "attr": true,
            "attrName": "aria-valuetext",
            "keyInterfaceName": "Element",
            "name": "aria-valuetext",
            "prop": false,
            "propName": "ariaValueText",
            "readonly": false,
            "value": "unknown"
          },
          "class": {
            "attr": true,
            "attrName": "class",
            "keyInterfaceName": "Element",
            "name": "class",
            "prop": false,
            "propName": "classList",
            "readonly": false,
            "value": "string"
          },
          "classList": {
            "attr": false,
            "attrName": "class",
            "keyInterfaceName": "Element",
            "name": "classList",
            "prop": true,
            "propName": "classList",
            "readonly": false,
            "value": "string"
          },
          "className": {
            "attr": false,
            "attrName": "class",
            "keyInterfaceName": "Element",
            "name": "className",
            "prop": true,
            "propName": "className",
            "readonly": false,
            "value": "string"
          },
          "id": {
            "attr": true,
            "attrName": "id",
            "keyInterfaceName": "Element",
            "name": "id",
            "prop": true,
            "propName": "id",
            "readonly": false,
            "value": "string"
          },
          "innerHTML": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "Element",
            "name": "innerHTML",
            "prop": true,
            "propName": "innerHTML",
            "readonly": false,
            "value": "string"
          },
          "onfullscreenchange": {
            "attr": true,
            "attrName": "onfullscreenchange",
            "keyInterfaceName": "Element",
            "name": "onfullscreenchange",
            "prop": true,
            "propName": "onfullscreenchange",
            "readonly": false,
            "value": "event"
          },
          "onfullscreenerror": {
            "attr": true,
            "attrName": "onfullscreenerror",
            "keyInterfaceName": "Element",
            "name": "onfullscreenerror",
            "prop": true,
            "propName": "onfullscreenerror",
            "readonly": false,
            "value": "event"
          },
          "outerHTML": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "Element",
            "name": "outerHTML",
            "prop": true,
            "propName": "outerHTML",
            "readonly": false,
            "value": "string"
          },
          "part": {
            "attr": true,
            "attrName": "part",
            "keyInterfaceName": "Element",
            "name": "part",
            "prop": true,
            "propName": "part",
            "readonly": false,
            "value": "string"
          },
          "role": {
            "attr": true,
            "attrName": "role",
            "keyInterfaceName": "Element",
            "name": "role",
            "prop": true,
            "propName": "role",
            "readonly": false,
            "value": "string"
          },
          "scrollLeft": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "Element",
            "name": "scrollLeft",
            "prop": true,
            "propName": "scrollLeft",
            "readonly": false,
            "value": "number"
          },
          "scrollTop": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "Element",
            "name": "scrollTop",
            "prop": true,
            "propName": "scrollTop",
            "readonly": false,
            "value": "number"
          },
          "slot": {
            "attr": true,
            "attrName": "slot",
            "keyInterfaceName": "Element",
            "name": "slot",
            "prop": true,
            "propName": "slot",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [
          "Element.assignedSlot",
          "Element.attributes",
          "Element.childElementCount",
          "Element.children",
          "Element.clientHeight",
          "Element.clientLeft",
          "Element.clientTop",
          "Element.clientWidth",
          "Element.currentCSSZoom",
          "Element.firstElementChild",
          "Element.lastElementChild",
          "Element.localName",
          "Element.namespaceURI",
          "Element.nextElementSibling",
          "Element.prefix",
          "Element.previousElementSibling",
          "Element.scrollHeight",
          "Element.scrollLeftMax",
          "Element.scrollTopMax",
          "Element.scrollWidth",
          "Element.shadowRoot",
          "Element.tagName"
        ],
        "tagInterfaceName": "Element"
      },
      "htmlelement": {
        "booleans": [
          "HTMLElement.autocorrect",
          "HTMLElement.autofocus",
          "HTMLElement.draggable",
          "HTMLElement.hidden",
          "HTMLElement.inert",
          "HTMLElement.spellcheck",
          "HTMLElement.translate"
        ],
        "events": [
          "HTMLElement.onabort",
          "HTMLElement.onanimationcancel",
          "HTMLElement.onanimationend",
          "HTMLElement.onanimationiteration",
          "HTMLElement.onanimationstart",
          "HTMLElement.onauxclick",
          "HTMLElement.onbeforeinput",
          "HTMLElement.onbeforetoggle",
          "HTMLElement.onblur",
          "HTMLElement.oncancel",
          "HTMLElement.oncanplay",
          "HTMLElement.oncanplaythrough",
          "HTMLElement.onchange",
          "HTMLElement.onclick",
          "HTMLElement.onclose",
          "HTMLElement.oncontentvisibilityautostatechange",
          "HTMLElement.oncontextlost",
          "HTMLElement.oncontextmenu",
          "HTMLElement.oncontextrestored",
          "HTMLElement.oncopy",
          "HTMLElement.oncuechange",
          "HTMLElement.oncut",
          "HTMLElement.ondblclick",
          "HTMLElement.ondrag",
          "HTMLElement.ondragend",
          "HTMLElement.ondragenter",
          "HTMLElement.ondragexit",
          "HTMLElement.ondragleave",
          "HTMLElement.ondragover",
          "HTMLElement.ondragstart",
          "HTMLElement.ondrop",
          "HTMLElement.ondurationchange",
          "HTMLElement.onemptied",
          "HTMLElement.onended",
          "HTMLElement.onerror",
          "HTMLElement.onfocus",
          "HTMLElement.onformdata",
          "HTMLElement.ongotpointercapture",
          "HTMLElement.oninput",
          "HTMLElement.oninvalid",
          "HTMLElement.onkeydown",
          "HTMLElement.onkeypress",
          "HTMLElement.onkeyup",
          "HTMLElement.onload",
          "HTMLElement.onloadeddata",
          "HTMLElement.onloadedmetadata",
          "HTMLElement.onloadstart",
          "HTMLElement.onlostpointercapture",
          "HTMLElement.onmousedown",
          "HTMLElement.onmouseenter",
          "HTMLElement.onmouseleave",
          "HTMLElement.onmousemove",
          "HTMLElement.onmouseout",
          "HTMLElement.onmouseover",
          "HTMLElement.onmouseup",
          "HTMLElement.onmozfullscreenchange",
          "HTMLElement.onmozfullscreenerror",
          "HTMLElement.onpaste",
          "HTMLElement.onpause",
          "HTMLElement.onplay",
          "HTMLElement.onplaying",
          "HTMLElement.onpointercancel",
          "HTMLElement.onpointerdown",
          "HTMLElement.onpointerenter",
          "HTMLElement.onpointerleave",
          "HTMLElement.onpointermove",
          "HTMLElement.onpointerout",
          "HTMLElement.onpointerover",
          "HTMLElement.onpointerup",
          "HTMLElement.onprogress",
          "HTMLElement.onratechange",
          "HTMLElement.onreset",
          "HTMLElement.onresize",
          "HTMLElement.onscroll",
          "HTMLElement.onscrollend",
          "HTMLElement.onsecuritypolicyviolation",
          "HTMLElement.onseeked",
          "HTMLElement.onseeking",
          "HTMLElement.onselect",
          "HTMLElement.onselectionchange",
          "HTMLElement.onselectstart",
          "HTMLElement.onslotchange",
          "HTMLElement.onstalled",
          "HTMLElement.onsubmit",
          "HTMLElement.onsuspend",
          "HTMLElement.ontimeupdate",
          "HTMLElement.ontoggle",
          "HTMLElement.ontransitioncancel",
          "HTMLElement.ontransitionend",
          "HTMLElement.ontransitionrun",
          "HTMLElement.ontransitionstart",
          "HTMLElement.onvolumechange",
          "HTMLElement.onwaiting",
          "HTMLElement.onwebkitanimationend",
          "HTMLElement.onwebkitanimationiteration",
          "HTMLElement.onwebkitanimationstart",
          "HTMLElement.onwebkittransitionend",
          "HTMLElement.onwheel"
        ],
        "keys": {
          "accessKey": {
            "attr": false,
            "attrName": "accesskey",
            "keyInterfaceName": "HTMLElement",
            "name": "accessKey",
            "prop": true,
            "propName": "accessKey",
            "readonly": false,
            "value": "string"
          },
          "accesskey": {
            "attr": true,
            "attrName": "accesskey",
            "keyInterfaceName": "HTMLElement",
            "name": "accesskey",
            "prop": false,
            "propName": "accessKey",
            "readonly": false,
            "value": "string"
          },
          "autocapitalize": {
            "attr": true,
            "attrName": "autocapitalize",
            "keyInterfaceName": "HTMLElement",
            "name": "autocapitalize",
            "prop": true,
            "propName": "autocapitalize",
            "readonly": false,
            "value": "string"
          },
          "autocorrect": {
            "attr": true,
            "attrName": "autocorrect",
            "keyInterfaceName": "HTMLElement",
            "name": "autocorrect",
            "prop": true,
            "propName": "autocorrect",
            "readonly": false,
            "value": "boolean"
          },
          "autofocus": {
            "attr": true,
            "attrName": "autofocus",
            "keyInterfaceName": "HTMLElement",
            "name": "autofocus",
            "prop": true,
            "propName": "autofocus",
            "readonly": false,
            "value": "boolean"
          },
          "contentEditable": {
            "attr": false,
            "attrName": "contenteditable",
            "keyInterfaceName": "HTMLElement",
            "name": "contentEditable",
            "prop": true,
            "propName": "contentEditable",
            "readonly": false,
            "value": "string"
          },
          "contenteditable": {
            "attr": true,
            "attrName": "contenteditable",
            "keyInterfaceName": "HTMLElement",
            "name": "contenteditable",
            "prop": false,
            "propName": "contentEditable",
            "readonly": false,
            "value": "string"
          },
          "dir": {
            "attr": true,
            "attrName": "dir",
            "keyInterfaceName": "HTMLElement",
            "name": "dir",
            "prop": true,
            "propName": "dir",
            "readonly": false,
            "value": "string"
          },
          "draggable": {
            "attr": true,
            "attrName": "draggable",
            "keyInterfaceName": "HTMLElement",
            "name": "draggable",
            "prop": true,
            "propName": "draggable",
            "readonly": false,
            "value": "boolean"
          },
          "enterKeyHint": {
            "attr": false,
            "attrName": "enterkeyhint",
            "keyInterfaceName": "HTMLElement",
            "name": "enterKeyHint",
            "prop": true,
            "propName": "enterKeyHint",
            "readonly": false,
            "value": "string"
          },
          "enterkeyhint": {
            "attr": true,
            "attrName": "enterkeyhint",
            "keyInterfaceName": "HTMLElement",
            "name": "enterkeyhint",
            "prop": false,
            "propName": "enterKeyHint",
            "readonly": false,
            "value": "string"
          },
          "hidden": {
            "attr": true,
            "attrName": "hidden",
            "keyInterfaceName": "HTMLElement",
            "name": "hidden",
            "prop": true,
            "propName": "hidden",
            "readonly": false,
            "value": "boolean"
          },
          "inert": {
            "attr": true,
            "attrName": "inert",
            "keyInterfaceName": "HTMLElement",
            "name": "inert",
            "prop": true,
            "propName": "inert",
            "readonly": false,
            "value": "boolean"
          },
          "innerText": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLElement",
            "name": "innerText",
            "prop": true,
            "propName": "innerText",
            "readonly": false,
            "value": "string"
          },
          "inputMode": {
            "attr": false,
            "attrName": "inputmode",
            "keyInterfaceName": "HTMLElement",
            "name": "inputMode",
            "prop": true,
            "propName": "inputMode",
            "readonly": false,
            "value": "string"
          },
          "inputmode": {
            "attr": true,
            "attrName": "inputmode",
            "keyInterfaceName": "HTMLElement",
            "name": "inputmode",
            "prop": false,
            "propName": "inputMode",
            "readonly": false,
            "value": "string"
          },
          "lang": {
            "attr": true,
            "attrName": "lang",
            "keyInterfaceName": "HTMLElement",
            "name": "lang",
            "prop": true,
            "propName": "lang",
            "readonly": false,
            "value": "string"
          },
          "nonce": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLElement",
            "name": "nonce",
            "prop": true,
            "propName": "nonce",
            "readonly": false,
            "value": "string"
          },
          "onabort": {
            "attr": true,
            "attrName": "onabort",
            "keyInterfaceName": "HTMLElement",
            "name": "onabort",
            "prop": true,
            "propName": "onabort",
            "readonly": false,
            "value": "event"
          },
          "onanimationcancel": {
            "attr": true,
            "attrName": "onanimationcancel",
            "keyInterfaceName": "HTMLElement",
            "name": "onanimationcancel",
            "prop": true,
            "propName": "onanimationcancel",
            "readonly": false,
            "value": "event"
          },
          "onanimationend": {
            "attr": true,
            "attrName": "onanimationend",
            "keyInterfaceName": "HTMLElement",
            "name": "onanimationend",
            "prop": true,
            "propName": "onanimationend",
            "readonly": false,
            "value": "event"
          },
          "onanimationiteration": {
            "attr": true,
            "attrName": "onanimationiteration",
            "keyInterfaceName": "HTMLElement",
            "name": "onanimationiteration",
            "prop": true,
            "propName": "onanimationiteration",
            "readonly": false,
            "value": "event"
          },
          "onanimationstart": {
            "attr": true,
            "attrName": "onanimationstart",
            "keyInterfaceName": "HTMLElement",
            "name": "onanimationstart",
            "prop": true,
            "propName": "onanimationstart",
            "readonly": false,
            "value": "event"
          },
          "onauxclick": {
            "attr": true,
            "attrName": "onauxclick",
            "keyInterfaceName": "HTMLElement",
            "name": "onauxclick",
            "prop": true,
            "propName": "onauxclick",
            "readonly": false,
            "value": "event"
          },
          "onbeforeinput": {
            "attr": true,
            "attrName": "onbeforeinput",
            "keyInterfaceName": "HTMLElement",
            "name": "onbeforeinput",
            "prop": true,
            "propName": "onbeforeinput",
            "readonly": false,
            "value": "event"
          },
          "onbeforetoggle": {
            "attr": true,
            "attrName": "onbeforetoggle",
            "keyInterfaceName": "HTMLElement",
            "name": "onbeforetoggle",
            "prop": true,
            "propName": "onbeforetoggle",
            "readonly": false,
            "value": "event"
          },
          "onblur": {
            "attr": true,
            "attrName": "onblur",
            "keyInterfaceName": "HTMLElement",
            "name": "onblur",
            "prop": true,
            "propName": "onblur",
            "readonly": false,
            "value": "event"
          },
          "oncancel": {
            "attr": true,
            "attrName": "oncancel",
            "keyInterfaceName": "HTMLElement",
            "name": "oncancel",
            "prop": true,
            "propName": "oncancel",
            "readonly": false,
            "value": "event"
          },
          "oncanplay": {
            "attr": true,
            "attrName": "oncanplay",
            "keyInterfaceName": "HTMLElement",
            "name": "oncanplay",
            "prop": true,
            "propName": "oncanplay",
            "readonly": false,
            "value": "event"
          },
          "oncanplaythrough": {
            "attr": true,
            "attrName": "oncanplaythrough",
            "keyInterfaceName": "HTMLElement",
            "name": "oncanplaythrough",
            "prop": true,
            "propName": "oncanplaythrough",
            "readonly": false,
            "value": "event"
          },
          "onchange": {
            "attr": true,
            "attrName": "onchange",
            "keyInterfaceName": "HTMLElement",
            "name": "onchange",
            "prop": true,
            "propName": "onchange",
            "readonly": false,
            "value": "event"
          },
          "onclick": {
            "attr": true,
            "attrName": "onclick",
            "keyInterfaceName": "HTMLElement",
            "name": "onclick",
            "prop": true,
            "propName": "onclick",
            "readonly": false,
            "value": "event"
          },
          "onclose": {
            "attr": true,
            "attrName": "onclose",
            "keyInterfaceName": "HTMLElement",
            "name": "onclose",
            "prop": true,
            "propName": "onclose",
            "readonly": false,
            "value": "event"
          },
          "oncontentvisibilityautostatechange": {
            "attr": true,
            "attrName": "oncontentvisibilityautostatechange",
            "keyInterfaceName": "HTMLElement",
            "name": "oncontentvisibilityautostatechange",
            "prop": true,
            "propName": "oncontentvisibilityautostatechange",
            "readonly": false,
            "value": "event"
          },
          "oncontextlost": {
            "attr": true,
            "attrName": "oncontextlost",
            "keyInterfaceName": "HTMLElement",
            "name": "oncontextlost",
            "prop": true,
            "propName": "oncontextlost",
            "readonly": false,
            "value": "event"
          },
          "oncontextmenu": {
            "attr": true,
            "attrName": "oncontextmenu",
            "keyInterfaceName": "HTMLElement",
            "name": "oncontextmenu",
            "prop": true,
            "propName": "oncontextmenu",
            "readonly": false,
            "value": "event"
          },
          "oncontextrestored": {
            "attr": true,
            "attrName": "oncontextrestored",
            "keyInterfaceName": "HTMLElement",
            "name": "oncontextrestored",
            "prop": true,
            "propName": "oncontextrestored",
            "readonly": false,
            "value": "event"
          },
          "oncopy": {
            "attr": true,
            "attrName": "oncopy",
            "keyInterfaceName": "HTMLElement",
            "name": "oncopy",
            "prop": true,
            "propName": "oncopy",
            "readonly": false,
            "value": "event"
          },
          "oncuechange": {
            "attr": true,
            "attrName": "oncuechange",
            "keyInterfaceName": "HTMLElement",
            "name": "oncuechange",
            "prop": true,
            "propName": "oncuechange",
            "readonly": false,
            "value": "event"
          },
          "oncut": {
            "attr": true,
            "attrName": "oncut",
            "keyInterfaceName": "HTMLElement",
            "name": "oncut",
            "prop": true,
            "propName": "oncut",
            "readonly": false,
            "value": "event"
          },
          "ondblclick": {
            "attr": true,
            "attrName": "ondblclick",
            "keyInterfaceName": "HTMLElement",
            "name": "ondblclick",
            "prop": true,
            "propName": "ondblclick",
            "readonly": false,
            "value": "event"
          },
          "ondrag": {
            "attr": true,
            "attrName": "ondrag",
            "keyInterfaceName": "HTMLElement",
            "name": "ondrag",
            "prop": true,
            "propName": "ondrag",
            "readonly": false,
            "value": "event"
          },
          "ondragend": {
            "attr": true,
            "attrName": "ondragend",
            "keyInterfaceName": "HTMLElement",
            "name": "ondragend",
            "prop": true,
            "propName": "ondragend",
            "readonly": false,
            "value": "event"
          },
          "ondragenter": {
            "attr": true,
            "attrName": "ondragenter",
            "keyInterfaceName": "HTMLElement",
            "name": "ondragenter",
            "prop": true,
            "propName": "ondragenter",
            "readonly": false,
            "value": "event"
          },
          "ondragexit": {
            "attr": true,
            "attrName": "ondragexit",
            "keyInterfaceName": "HTMLElement",
            "name": "ondragexit",
            "prop": true,
            "propName": "ondragexit",
            "readonly": false,
            "value": "event"
          },
          "ondragleave": {
            "attr": true,
            "attrName": "ondragleave",
            "keyInterfaceName": "HTMLElement",
            "name": "ondragleave",
            "prop": true,
            "propName": "ondragleave",
            "readonly": false,
            "value": "event"
          },
          "ondragover": {
            "attr": true,
            "attrName": "ondragover",
            "keyInterfaceName": "HTMLElement",
            "name": "ondragover",
            "prop": true,
            "propName": "ondragover",
            "readonly": false,
            "value": "event"
          },
          "ondragstart": {
            "attr": true,
            "attrName": "ondragstart",
            "keyInterfaceName": "HTMLElement",
            "name": "ondragstart",
            "prop": true,
            "propName": "ondragstart",
            "readonly": false,
            "value": "event"
          },
          "ondrop": {
            "attr": true,
            "attrName": "ondrop",
            "keyInterfaceName": "HTMLElement",
            "name": "ondrop",
            "prop": true,
            "propName": "ondrop",
            "readonly": false,
            "value": "event"
          },
          "ondurationchange": {
            "attr": true,
            "attrName": "ondurationchange",
            "keyInterfaceName": "HTMLElement",
            "name": "ondurationchange",
            "prop": true,
            "propName": "ondurationchange",
            "readonly": false,
            "value": "event"
          },
          "onemptied": {
            "attr": true,
            "attrName": "onemptied",
            "keyInterfaceName": "HTMLElement",
            "name": "onemptied",
            "prop": true,
            "propName": "onemptied",
            "readonly": false,
            "value": "event"
          },
          "onended": {
            "attr": true,
            "attrName": "onended",
            "keyInterfaceName": "HTMLElement",
            "name": "onended",
            "prop": true,
            "propName": "onended",
            "readonly": false,
            "value": "event"
          },
          "onerror": {
            "attr": true,
            "attrName": "onerror",
            "keyInterfaceName": "HTMLElement",
            "name": "onerror",
            "prop": true,
            "propName": "onerror",
            "readonly": false,
            "value": "event"
          },
          "onfocus": {
            "attr": true,
            "attrName": "onfocus",
            "keyInterfaceName": "HTMLElement",
            "name": "onfocus",
            "prop": true,
            "propName": "onfocus",
            "readonly": false,
            "value": "event"
          },
          "onformdata": {
            "attr": true,
            "attrName": "onformdata",
            "keyInterfaceName": "HTMLElement",
            "name": "onformdata",
            "prop": true,
            "propName": "onformdata",
            "readonly": false,
            "value": "event"
          },
          "ongotpointercapture": {
            "attr": true,
            "attrName": "ongotpointercapture",
            "keyInterfaceName": "HTMLElement",
            "name": "ongotpointercapture",
            "prop": true,
            "propName": "ongotpointercapture",
            "readonly": false,
            "value": "event"
          },
          "oninput": {
            "attr": true,
            "attrName": "oninput",
            "keyInterfaceName": "HTMLElement",
            "name": "oninput",
            "prop": true,
            "propName": "oninput",
            "readonly": false,
            "value": "event"
          },
          "oninvalid": {
            "attr": true,
            "attrName": "oninvalid",
            "keyInterfaceName": "HTMLElement",
            "name": "oninvalid",
            "prop": true,
            "propName": "oninvalid",
            "readonly": false,
            "value": "event"
          },
          "onkeydown": {
            "attr": true,
            "attrName": "onkeydown",
            "keyInterfaceName": "HTMLElement",
            "name": "onkeydown",
            "prop": true,
            "propName": "onkeydown",
            "readonly": false,
            "value": "event"
          },
          "onkeypress": {
            "attr": true,
            "attrName": "onkeypress",
            "keyInterfaceName": "HTMLElement",
            "name": "onkeypress",
            "prop": true,
            "propName": "onkeypress",
            "readonly": false,
            "value": "event"
          },
          "onkeyup": {
            "attr": true,
            "attrName": "onkeyup",
            "keyInterfaceName": "HTMLElement",
            "name": "onkeyup",
            "prop": true,
            "propName": "onkeyup",
            "readonly": false,
            "value": "event"
          },
          "onload": {
            "attr": true,
            "attrName": "onload",
            "keyInterfaceName": "HTMLElement",
            "name": "onload",
            "prop": true,
            "propName": "onload",
            "readonly": false,
            "value": "event"
          },
          "onloadeddata": {
            "attr": true,
            "attrName": "onloadeddata",
            "keyInterfaceName": "HTMLElement",
            "name": "onloadeddata",
            "prop": true,
            "propName": "onloadeddata",
            "readonly": false,
            "value": "event"
          },
          "onloadedmetadata": {
            "attr": true,
            "attrName": "onloadedmetadata",
            "keyInterfaceName": "HTMLElement",
            "name": "onloadedmetadata",
            "prop": true,
            "propName": "onloadedmetadata",
            "readonly": false,
            "value": "event"
          },
          "onloadstart": {
            "attr": true,
            "attrName": "onloadstart",
            "keyInterfaceName": "HTMLElement",
            "name": "onloadstart",
            "prop": true,
            "propName": "onloadstart",
            "readonly": false,
            "value": "event"
          },
          "onlostpointercapture": {
            "attr": true,
            "attrName": "onlostpointercapture",
            "keyInterfaceName": "HTMLElement",
            "name": "onlostpointercapture",
            "prop": true,
            "propName": "onlostpointercapture",
            "readonly": false,
            "value": "event"
          },
          "onmousedown": {
            "attr": true,
            "attrName": "onmousedown",
            "keyInterfaceName": "HTMLElement",
            "name": "onmousedown",
            "prop": true,
            "propName": "onmousedown",
            "readonly": false,
            "value": "event"
          },
          "onmouseenter": {
            "attr": true,
            "attrName": "onmouseenter",
            "keyInterfaceName": "HTMLElement",
            "name": "onmouseenter",
            "prop": true,
            "propName": "onmouseenter",
            "readonly": false,
            "value": "event"
          },
          "onmouseleave": {
            "attr": true,
            "attrName": "onmouseleave",
            "keyInterfaceName": "HTMLElement",
            "name": "onmouseleave",
            "prop": true,
            "propName": "onmouseleave",
            "readonly": false,
            "value": "event"
          },
          "onmousemove": {
            "attr": true,
            "attrName": "onmousemove",
            "keyInterfaceName": "HTMLElement",
            "name": "onmousemove",
            "prop": true,
            "propName": "onmousemove",
            "readonly": false,
            "value": "event"
          },
          "onmouseout": {
            "attr": true,
            "attrName": "onmouseout",
            "keyInterfaceName": "HTMLElement",
            "name": "onmouseout",
            "prop": true,
            "propName": "onmouseout",
            "readonly": false,
            "value": "event"
          },
          "onmouseover": {
            "attr": true,
            "attrName": "onmouseover",
            "keyInterfaceName": "HTMLElement",
            "name": "onmouseover",
            "prop": true,
            "propName": "onmouseover",
            "readonly": false,
            "value": "event"
          },
          "onmouseup": {
            "attr": true,
            "attrName": "onmouseup",
            "keyInterfaceName": "HTMLElement",
            "name": "onmouseup",
            "prop": true,
            "propName": "onmouseup",
            "readonly": false,
            "value": "event"
          },
          "onmozfullscreenchange": {
            "attr": true,
            "attrName": "onmozfullscreenchange",
            "keyInterfaceName": "HTMLElement",
            "name": "onmozfullscreenchange",
            "prop": true,
            "propName": "onmozfullscreenchange",
            "readonly": false,
            "value": "event"
          },
          "onmozfullscreenerror": {
            "attr": true,
            "attrName": "onmozfullscreenerror",
            "keyInterfaceName": "HTMLElement",
            "name": "onmozfullscreenerror",
            "prop": true,
            "propName": "onmozfullscreenerror",
            "readonly": false,
            "value": "event"
          },
          "onpaste": {
            "attr": true,
            "attrName": "onpaste",
            "keyInterfaceName": "HTMLElement",
            "name": "onpaste",
            "prop": true,
            "propName": "onpaste",
            "readonly": false,
            "value": "event"
          },
          "onpause": {
            "attr": true,
            "attrName": "onpause",
            "keyInterfaceName": "HTMLElement",
            "name": "onpause",
            "prop": true,
            "propName": "onpause",
            "readonly": false,
            "value": "event"
          },
          "onplay": {
            "attr": true,
            "attrName": "onplay",
            "keyInterfaceName": "HTMLElement",
            "name": "onplay",
            "prop": true,
            "propName": "onplay",
            "readonly": false,
            "value": "event"
          },
          "onplaying": {
            "attr": true,
            "attrName": "onplaying",
            "keyInterfaceName": "HTMLElement",
            "name": "onplaying",
            "prop": true,
            "propName": "onplaying",
            "readonly": false,
            "value": "event"
          },
          "onpointercancel": {
            "attr": true,
            "attrName": "onpointercancel",
            "keyInterfaceName": "HTMLElement",
            "name": "onpointercancel",
            "prop": true,
            "propName": "onpointercancel",
            "readonly": false,
            "value": "event"
          },
          "onpointerdown": {
            "attr": true,
            "attrName": "onpointerdown",
            "keyInterfaceName": "HTMLElement",
            "name": "onpointerdown",
            "prop": true,
            "propName": "onpointerdown",
            "readonly": false,
            "value": "event"
          },
          "onpointerenter": {
            "attr": true,
            "attrName": "onpointerenter",
            "keyInterfaceName": "HTMLElement",
            "name": "onpointerenter",
            "prop": true,
            "propName": "onpointerenter",
            "readonly": false,
            "value": "event"
          },
          "onpointerleave": {
            "attr": true,
            "attrName": "onpointerleave",
            "keyInterfaceName": "HTMLElement",
            "name": "onpointerleave",
            "prop": true,
            "propName": "onpointerleave",
            "readonly": false,
            "value": "event"
          },
          "onpointermove": {
            "attr": true,
            "attrName": "onpointermove",
            "keyInterfaceName": "HTMLElement",
            "name": "onpointermove",
            "prop": true,
            "propName": "onpointermove",
            "readonly": false,
            "value": "event"
          },
          "onpointerout": {
            "attr": true,
            "attrName": "onpointerout",
            "keyInterfaceName": "HTMLElement",
            "name": "onpointerout",
            "prop": true,
            "propName": "onpointerout",
            "readonly": false,
            "value": "event"
          },
          "onpointerover": {
            "attr": true,
            "attrName": "onpointerover",
            "keyInterfaceName": "HTMLElement",
            "name": "onpointerover",
            "prop": true,
            "propName": "onpointerover",
            "readonly": false,
            "value": "event"
          },
          "onpointerup": {
            "attr": true,
            "attrName": "onpointerup",
            "keyInterfaceName": "HTMLElement",
            "name": "onpointerup",
            "prop": true,
            "propName": "onpointerup",
            "readonly": false,
            "value": "event"
          },
          "onprogress": {
            "attr": true,
            "attrName": "onprogress",
            "keyInterfaceName": "HTMLElement",
            "name": "onprogress",
            "prop": true,
            "propName": "onprogress",
            "readonly": false,
            "value": "event"
          },
          "onratechange": {
            "attr": true,
            "attrName": "onratechange",
            "keyInterfaceName": "HTMLElement",
            "name": "onratechange",
            "prop": true,
            "propName": "onratechange",
            "readonly": false,
            "value": "event"
          },
          "onreset": {
            "attr": true,
            "attrName": "onreset",
            "keyInterfaceName": "HTMLElement",
            "name": "onreset",
            "prop": true,
            "propName": "onreset",
            "readonly": false,
            "value": "event"
          },
          "onresize": {
            "attr": true,
            "attrName": "onresize",
            "keyInterfaceName": "HTMLElement",
            "name": "onresize",
            "prop": true,
            "propName": "onresize",
            "readonly": false,
            "value": "event"
          },
          "onscroll": {
            "attr": true,
            "attrName": "onscroll",
            "keyInterfaceName": "HTMLElement",
            "name": "onscroll",
            "prop": true,
            "propName": "onscroll",
            "readonly": false,
            "value": "event"
          },
          "onscrollend": {
            "attr": true,
            "attrName": "onscrollend",
            "keyInterfaceName": "HTMLElement",
            "name": "onscrollend",
            "prop": true,
            "propName": "onscrollend",
            "readonly": false,
            "value": "event"
          },
          "onsecuritypolicyviolation": {
            "attr": true,
            "attrName": "onsecuritypolicyviolation",
            "keyInterfaceName": "HTMLElement",
            "name": "onsecuritypolicyviolation",
            "prop": true,
            "propName": "onsecuritypolicyviolation",
            "readonly": false,
            "value": "event"
          },
          "onseeked": {
            "attr": true,
            "attrName": "onseeked",
            "keyInterfaceName": "HTMLElement",
            "name": "onseeked",
            "prop": true,
            "propName": "onseeked",
            "readonly": false,
            "value": "event"
          },
          "onseeking": {
            "attr": true,
            "attrName": "onseeking",
            "keyInterfaceName": "HTMLElement",
            "name": "onseeking",
            "prop": true,
            "propName": "onseeking",
            "readonly": false,
            "value": "event"
          },
          "onselect": {
            "attr": true,
            "attrName": "onselect",
            "keyInterfaceName": "HTMLElement",
            "name": "onselect",
            "prop": true,
            "propName": "onselect",
            "readonly": false,
            "value": "event"
          },
          "onselectionchange": {
            "attr": true,
            "attrName": "onselectionchange",
            "keyInterfaceName": "HTMLElement",
            "name": "onselectionchange",
            "prop": true,
            "propName": "onselectionchange",
            "readonly": false,
            "value": "event"
          },
          "onselectstart": {
            "attr": true,
            "attrName": "onselectstart",
            "keyInterfaceName": "HTMLElement",
            "name": "onselectstart",
            "prop": true,
            "propName": "onselectstart",
            "readonly": false,
            "value": "event"
          },
          "onslotchange": {
            "attr": true,
            "attrName": "onslotchange",
            "keyInterfaceName": "HTMLElement",
            "name": "onslotchange",
            "prop": true,
            "propName": "onslotchange",
            "readonly": false,
            "value": "event"
          },
          "onstalled": {
            "attr": true,
            "attrName": "onstalled",
            "keyInterfaceName": "HTMLElement",
            "name": "onstalled",
            "prop": true,
            "propName": "onstalled",
            "readonly": false,
            "value": "event"
          },
          "onsubmit": {
            "attr": true,
            "attrName": "onsubmit",
            "keyInterfaceName": "HTMLElement",
            "name": "onsubmit",
            "prop": true,
            "propName": "onsubmit",
            "readonly": false,
            "value": "event"
          },
          "onsuspend": {
            "attr": true,
            "attrName": "onsuspend",
            "keyInterfaceName": "HTMLElement",
            "name": "onsuspend",
            "prop": true,
            "propName": "onsuspend",
            "readonly": false,
            "value": "event"
          },
          "ontimeupdate": {
            "attr": true,
            "attrName": "ontimeupdate",
            "keyInterfaceName": "HTMLElement",
            "name": "ontimeupdate",
            "prop": true,
            "propName": "ontimeupdate",
            "readonly": false,
            "value": "event"
          },
          "ontoggle": {
            "attr": true,
            "attrName": "ontoggle",
            "keyInterfaceName": "HTMLElement",
            "name": "ontoggle",
            "prop": true,
            "propName": "ontoggle",
            "readonly": false,
            "value": "event"
          },
          "ontransitioncancel": {
            "attr": true,
            "attrName": "ontransitioncancel",
            "keyInterfaceName": "HTMLElement",
            "name": "ontransitioncancel",
            "prop": true,
            "propName": "ontransitioncancel",
            "readonly": false,
            "value": "event"
          },
          "ontransitionend": {
            "attr": true,
            "attrName": "ontransitionend",
            "keyInterfaceName": "HTMLElement",
            "name": "ontransitionend",
            "prop": true,
            "propName": "ontransitionend",
            "readonly": false,
            "value": "event"
          },
          "ontransitionrun": {
            "attr": true,
            "attrName": "ontransitionrun",
            "keyInterfaceName": "HTMLElement",
            "name": "ontransitionrun",
            "prop": true,
            "propName": "ontransitionrun",
            "readonly": false,
            "value": "event"
          },
          "ontransitionstart": {
            "attr": true,
            "attrName": "ontransitionstart",
            "keyInterfaceName": "HTMLElement",
            "name": "ontransitionstart",
            "prop": true,
            "propName": "ontransitionstart",
            "readonly": false,
            "value": "event"
          },
          "onvolumechange": {
            "attr": true,
            "attrName": "onvolumechange",
            "keyInterfaceName": "HTMLElement",
            "name": "onvolumechange",
            "prop": true,
            "propName": "onvolumechange",
            "readonly": false,
            "value": "event"
          },
          "onwaiting": {
            "attr": true,
            "attrName": "onwaiting",
            "keyInterfaceName": "HTMLElement",
            "name": "onwaiting",
            "prop": true,
            "propName": "onwaiting",
            "readonly": false,
            "value": "event"
          },
          "onwebkitanimationend": {
            "attr": true,
            "attrName": "onwebkitanimationend",
            "keyInterfaceName": "HTMLElement",
            "name": "onwebkitanimationend",
            "prop": true,
            "propName": "onwebkitanimationend",
            "readonly": false,
            "value": "event"
          },
          "onwebkitanimationiteration": {
            "attr": true,
            "attrName": "onwebkitanimationiteration",
            "keyInterfaceName": "HTMLElement",
            "name": "onwebkitanimationiteration",
            "prop": true,
            "propName": "onwebkitanimationiteration",
            "readonly": false,
            "value": "event"
          },
          "onwebkitanimationstart": {
            "attr": true,
            "attrName": "onwebkitanimationstart",
            "keyInterfaceName": "HTMLElement",
            "name": "onwebkitanimationstart",
            "prop": true,
            "propName": "onwebkitanimationstart",
            "readonly": false,
            "value": "event"
          },
          "onwebkittransitionend": {
            "attr": true,
            "attrName": "onwebkittransitionend",
            "keyInterfaceName": "HTMLElement",
            "name": "onwebkittransitionend",
            "prop": true,
            "propName": "onwebkittransitionend",
            "readonly": false,
            "value": "event"
          },
          "onwheel": {
            "attr": true,
            "attrName": "onwheel",
            "keyInterfaceName": "HTMLElement",
            "name": "onwheel",
            "prop": true,
            "propName": "onwheel",
            "readonly": false,
            "value": "event"
          },
          "outerText": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "HTMLElement",
            "name": "outerText",
            "prop": true,
            "propName": "outerText",
            "readonly": false,
            "value": "string"
          },
          "popover": {
            "attr": true,
            "attrName": "popover",
            "keyInterfaceName": "HTMLElement",
            "name": "popover",
            "prop": true,
            "propName": "popover",
            "readonly": false,
            "value": "string"
          },
          "spellcheck": {
            "attr": true,
            "attrName": "spellcheck",
            "keyInterfaceName": "HTMLElement",
            "name": "spellcheck",
            "prop": true,
            "propName": "spellcheck",
            "readonly": false,
            "value": "boolean"
          },
          "style": {
            "attr": true,
            "attrName": "style",
            "keyInterfaceName": "HTMLElement",
            "name": "style",
            "prop": true,
            "propName": "style",
            "readonly": false,
            "value": "string"
          },
          "tabIndex": {
            "attr": false,
            "attrName": "tabindex",
            "keyInterfaceName": "HTMLElement",
            "name": "tabIndex",
            "prop": true,
            "propName": "tabIndex",
            "readonly": false,
            "value": "number"
          },
          "tabindex": {
            "attr": true,
            "attrName": "tabindex",
            "keyInterfaceName": "HTMLElement",
            "name": "tabindex",
            "prop": false,
            "propName": "tabIndex",
            "readonly": false,
            "value": "number"
          },
          "title": {
            "attr": true,
            "attrName": "title",
            "keyInterfaceName": "HTMLElement",
            "name": "title",
            "prop": true,
            "propName": "title",
            "readonly": false,
            "value": "string"
          },
          "translate": {
            "attr": true,
            "attrName": "translate",
            "keyInterfaceName": "HTMLElement",
            "name": "translate",
            "prop": true,
            "propName": "translate",
            "readonly": false,
            "value": "boolean"
          }
        },
        "readonly": [
          "HTMLElement.accessKeyLabel",
          "HTMLElement.dataset",
          "HTMLElement.isContentEditable",
          "HTMLElement.offsetHeight",
          "HTMLElement.offsetLeft",
          "HTMLElement.offsetParent",
          "HTMLElement.offsetTop",
          "HTMLElement.offsetWidth"
        ],
        "tagInterfaceName": "HTMLElement"
      },
      "mathelement": {
        "booleans": [
          "MathMLElement.autofocus"
        ],
        "events": [
          "MathMLElement.onabort",
          "MathMLElement.onanimationcancel",
          "MathMLElement.onanimationend",
          "MathMLElement.onanimationiteration",
          "MathMLElement.onanimationstart",
          "MathMLElement.onauxclick",
          "MathMLElement.onbeforeinput",
          "MathMLElement.onbeforetoggle",
          "MathMLElement.onblur",
          "MathMLElement.oncancel",
          "MathMLElement.oncanplay",
          "MathMLElement.oncanplaythrough",
          "MathMLElement.onchange",
          "MathMLElement.onclick",
          "MathMLElement.onclose",
          "MathMLElement.oncontentvisibilityautostatechange",
          "MathMLElement.oncontextlost",
          "MathMLElement.oncontextmenu",
          "MathMLElement.oncontextrestored",
          "MathMLElement.oncopy",
          "MathMLElement.oncuechange",
          "MathMLElement.oncut",
          "MathMLElement.ondblclick",
          "MathMLElement.ondrag",
          "MathMLElement.ondragend",
          "MathMLElement.ondragenter",
          "MathMLElement.ondragexit",
          "MathMLElement.ondragleave",
          "MathMLElement.ondragover",
          "MathMLElement.ondragstart",
          "MathMLElement.ondrop",
          "MathMLElement.ondurationchange",
          "MathMLElement.onemptied",
          "MathMLElement.onended",
          "MathMLElement.onerror",
          "MathMLElement.onfocus",
          "MathMLElement.onformdata",
          "MathMLElement.ongotpointercapture",
          "MathMLElement.oninput",
          "MathMLElement.oninvalid",
          "MathMLElement.onkeydown",
          "MathMLElement.onkeypress",
          "MathMLElement.onkeyup",
          "MathMLElement.onload",
          "MathMLElement.onloadeddata",
          "MathMLElement.onloadedmetadata",
          "MathMLElement.onloadstart",
          "MathMLElement.onlostpointercapture",
          "MathMLElement.onmousedown",
          "MathMLElement.onmouseenter",
          "MathMLElement.onmouseleave",
          "MathMLElement.onmousemove",
          "MathMLElement.onmouseout",
          "MathMLElement.onmouseover",
          "MathMLElement.onmouseup",
          "MathMLElement.onmozfullscreenchange",
          "MathMLElement.onmozfullscreenerror",
          "MathMLElement.onpaste",
          "MathMLElement.onpause",
          "MathMLElement.onplay",
          "MathMLElement.onplaying",
          "MathMLElement.onpointercancel",
          "MathMLElement.onpointerdown",
          "MathMLElement.onpointerenter",
          "MathMLElement.onpointerleave",
          "MathMLElement.onpointermove",
          "MathMLElement.onpointerout",
          "MathMLElement.onpointerover",
          "MathMLElement.onpointerup",
          "MathMLElement.onprogress",
          "MathMLElement.onratechange",
          "MathMLElement.onreset",
          "MathMLElement.onresize",
          "MathMLElement.onscroll",
          "MathMLElement.onscrollend",
          "MathMLElement.onsecuritypolicyviolation",
          "MathMLElement.onseeked",
          "MathMLElement.onseeking",
          "MathMLElement.onselect",
          "MathMLElement.onselectionchange",
          "MathMLElement.onselectstart",
          "MathMLElement.onslotchange",
          "MathMLElement.onstalled",
          "MathMLElement.onsubmit",
          "MathMLElement.onsuspend",
          "MathMLElement.ontimeupdate",
          "MathMLElement.ontoggle",
          "MathMLElement.ontransitioncancel",
          "MathMLElement.ontransitionend",
          "MathMLElement.ontransitionrun",
          "MathMLElement.ontransitionstart",
          "MathMLElement.onvolumechange",
          "MathMLElement.onwaiting",
          "MathMLElement.onwebkitanimationend",
          "MathMLElement.onwebkitanimationiteration",
          "MathMLElement.onwebkitanimationstart",
          "MathMLElement.onwebkittransitionend",
          "MathMLElement.onwheel"
        ],
        "keys": {
          "autofocus": {
            "attr": true,
            "attrName": "autofocus",
            "keyInterfaceName": "MathMLElement",
            "name": "autofocus",
            "prop": true,
            "propName": "autofocus",
            "readonly": false,
            "value": "boolean"
          },
          "onabort": {
            "attr": true,
            "attrName": "onabort",
            "keyInterfaceName": "MathMLElement",
            "name": "onabort",
            "prop": true,
            "propName": "onabort",
            "readonly": false,
            "value": "event"
          },
          "onanimationcancel": {
            "attr": true,
            "attrName": "onanimationcancel",
            "keyInterfaceName": "MathMLElement",
            "name": "onanimationcancel",
            "prop": true,
            "propName": "onanimationcancel",
            "readonly": false,
            "value": "event"
          },
          "onanimationend": {
            "attr": true,
            "attrName": "onanimationend",
            "keyInterfaceName": "MathMLElement",
            "name": "onanimationend",
            "prop": true,
            "propName": "onanimationend",
            "readonly": false,
            "value": "event"
          },
          "onanimationiteration": {
            "attr": true,
            "attrName": "onanimationiteration",
            "keyInterfaceName": "MathMLElement",
            "name": "onanimationiteration",
            "prop": true,
            "propName": "onanimationiteration",
            "readonly": false,
            "value": "event"
          },
          "onanimationstart": {
            "attr": true,
            "attrName": "onanimationstart",
            "keyInterfaceName": "MathMLElement",
            "name": "onanimationstart",
            "prop": true,
            "propName": "onanimationstart",
            "readonly": false,
            "value": "event"
          },
          "onauxclick": {
            "attr": true,
            "attrName": "onauxclick",
            "keyInterfaceName": "MathMLElement",
            "name": "onauxclick",
            "prop": true,
            "propName": "onauxclick",
            "readonly": false,
            "value": "event"
          },
          "onbeforeinput": {
            "attr": true,
            "attrName": "onbeforeinput",
            "keyInterfaceName": "MathMLElement",
            "name": "onbeforeinput",
            "prop": true,
            "propName": "onbeforeinput",
            "readonly": false,
            "value": "event"
          },
          "onbeforetoggle": {
            "attr": true,
            "attrName": "onbeforetoggle",
            "keyInterfaceName": "MathMLElement",
            "name": "onbeforetoggle",
            "prop": true,
            "propName": "onbeforetoggle",
            "readonly": false,
            "value": "event"
          },
          "onblur": {
            "attr": true,
            "attrName": "onblur",
            "keyInterfaceName": "MathMLElement",
            "name": "onblur",
            "prop": true,
            "propName": "onblur",
            "readonly": false,
            "value": "event"
          },
          "oncancel": {
            "attr": true,
            "attrName": "oncancel",
            "keyInterfaceName": "MathMLElement",
            "name": "oncancel",
            "prop": true,
            "propName": "oncancel",
            "readonly": false,
            "value": "event"
          },
          "oncanplay": {
            "attr": true,
            "attrName": "oncanplay",
            "keyInterfaceName": "MathMLElement",
            "name": "oncanplay",
            "prop": true,
            "propName": "oncanplay",
            "readonly": false,
            "value": "event"
          },
          "oncanplaythrough": {
            "attr": true,
            "attrName": "oncanplaythrough",
            "keyInterfaceName": "MathMLElement",
            "name": "oncanplaythrough",
            "prop": true,
            "propName": "oncanplaythrough",
            "readonly": false,
            "value": "event"
          },
          "onchange": {
            "attr": true,
            "attrName": "onchange",
            "keyInterfaceName": "MathMLElement",
            "name": "onchange",
            "prop": true,
            "propName": "onchange",
            "readonly": false,
            "value": "event"
          },
          "onclick": {
            "attr": true,
            "attrName": "onclick",
            "keyInterfaceName": "MathMLElement",
            "name": "onclick",
            "prop": true,
            "propName": "onclick",
            "readonly": false,
            "value": "event"
          },
          "onclose": {
            "attr": true,
            "attrName": "onclose",
            "keyInterfaceName": "MathMLElement",
            "name": "onclose",
            "prop": true,
            "propName": "onclose",
            "readonly": false,
            "value": "event"
          },
          "oncontentvisibilityautostatechange": {
            "attr": true,
            "attrName": "oncontentvisibilityautostatechange",
            "keyInterfaceName": "MathMLElement",
            "name": "oncontentvisibilityautostatechange",
            "prop": true,
            "propName": "oncontentvisibilityautostatechange",
            "readonly": false,
            "value": "event"
          },
          "oncontextlost": {
            "attr": true,
            "attrName": "oncontextlost",
            "keyInterfaceName": "MathMLElement",
            "name": "oncontextlost",
            "prop": true,
            "propName": "oncontextlost",
            "readonly": false,
            "value": "event"
          },
          "oncontextmenu": {
            "attr": true,
            "attrName": "oncontextmenu",
            "keyInterfaceName": "MathMLElement",
            "name": "oncontextmenu",
            "prop": true,
            "propName": "oncontextmenu",
            "readonly": false,
            "value": "event"
          },
          "oncontextrestored": {
            "attr": true,
            "attrName": "oncontextrestored",
            "keyInterfaceName": "MathMLElement",
            "name": "oncontextrestored",
            "prop": true,
            "propName": "oncontextrestored",
            "readonly": false,
            "value": "event"
          },
          "oncopy": {
            "attr": true,
            "attrName": "oncopy",
            "keyInterfaceName": "MathMLElement",
            "name": "oncopy",
            "prop": true,
            "propName": "oncopy",
            "readonly": false,
            "value": "event"
          },
          "oncuechange": {
            "attr": true,
            "attrName": "oncuechange",
            "keyInterfaceName": "MathMLElement",
            "name": "oncuechange",
            "prop": true,
            "propName": "oncuechange",
            "readonly": false,
            "value": "event"
          },
          "oncut": {
            "attr": true,
            "attrName": "oncut",
            "keyInterfaceName": "MathMLElement",
            "name": "oncut",
            "prop": true,
            "propName": "oncut",
            "readonly": false,
            "value": "event"
          },
          "ondblclick": {
            "attr": true,
            "attrName": "ondblclick",
            "keyInterfaceName": "MathMLElement",
            "name": "ondblclick",
            "prop": true,
            "propName": "ondblclick",
            "readonly": false,
            "value": "event"
          },
          "ondrag": {
            "attr": true,
            "attrName": "ondrag",
            "keyInterfaceName": "MathMLElement",
            "name": "ondrag",
            "prop": true,
            "propName": "ondrag",
            "readonly": false,
            "value": "event"
          },
          "ondragend": {
            "attr": true,
            "attrName": "ondragend",
            "keyInterfaceName": "MathMLElement",
            "name": "ondragend",
            "prop": true,
            "propName": "ondragend",
            "readonly": false,
            "value": "event"
          },
          "ondragenter": {
            "attr": true,
            "attrName": "ondragenter",
            "keyInterfaceName": "MathMLElement",
            "name": "ondragenter",
            "prop": true,
            "propName": "ondragenter",
            "readonly": false,
            "value": "event"
          },
          "ondragexit": {
            "attr": true,
            "attrName": "ondragexit",
            "keyInterfaceName": "MathMLElement",
            "name": "ondragexit",
            "prop": true,
            "propName": "ondragexit",
            "readonly": false,
            "value": "event"
          },
          "ondragleave": {
            "attr": true,
            "attrName": "ondragleave",
            "keyInterfaceName": "MathMLElement",
            "name": "ondragleave",
            "prop": true,
            "propName": "ondragleave",
            "readonly": false,
            "value": "event"
          },
          "ondragover": {
            "attr": true,
            "attrName": "ondragover",
            "keyInterfaceName": "MathMLElement",
            "name": "ondragover",
            "prop": true,
            "propName": "ondragover",
            "readonly": false,
            "value": "event"
          },
          "ondragstart": {
            "attr": true,
            "attrName": "ondragstart",
            "keyInterfaceName": "MathMLElement",
            "name": "ondragstart",
            "prop": true,
            "propName": "ondragstart",
            "readonly": false,
            "value": "event"
          },
          "ondrop": {
            "attr": true,
            "attrName": "ondrop",
            "keyInterfaceName": "MathMLElement",
            "name": "ondrop",
            "prop": true,
            "propName": "ondrop",
            "readonly": false,
            "value": "event"
          },
          "ondurationchange": {
            "attr": true,
            "attrName": "ondurationchange",
            "keyInterfaceName": "MathMLElement",
            "name": "ondurationchange",
            "prop": true,
            "propName": "ondurationchange",
            "readonly": false,
            "value": "event"
          },
          "onemptied": {
            "attr": true,
            "attrName": "onemptied",
            "keyInterfaceName": "MathMLElement",
            "name": "onemptied",
            "prop": true,
            "propName": "onemptied",
            "readonly": false,
            "value": "event"
          },
          "onended": {
            "attr": true,
            "attrName": "onended",
            "keyInterfaceName": "MathMLElement",
            "name": "onended",
            "prop": true,
            "propName": "onended",
            "readonly": false,
            "value": "event"
          },
          "onerror": {
            "attr": true,
            "attrName": "onerror",
            "keyInterfaceName": "MathMLElement",
            "name": "onerror",
            "prop": true,
            "propName": "onerror",
            "readonly": false,
            "value": "event"
          },
          "onfocus": {
            "attr": true,
            "attrName": "onfocus",
            "keyInterfaceName": "MathMLElement",
            "name": "onfocus",
            "prop": true,
            "propName": "onfocus",
            "readonly": false,
            "value": "event"
          },
          "onformdata": {
            "attr": true,
            "attrName": "onformdata",
            "keyInterfaceName": "MathMLElement",
            "name": "onformdata",
            "prop": true,
            "propName": "onformdata",
            "readonly": false,
            "value": "event"
          },
          "ongotpointercapture": {
            "attr": true,
            "attrName": "ongotpointercapture",
            "keyInterfaceName": "MathMLElement",
            "name": "ongotpointercapture",
            "prop": true,
            "propName": "ongotpointercapture",
            "readonly": false,
            "value": "event"
          },
          "oninput": {
            "attr": true,
            "attrName": "oninput",
            "keyInterfaceName": "MathMLElement",
            "name": "oninput",
            "prop": true,
            "propName": "oninput",
            "readonly": false,
            "value": "event"
          },
          "oninvalid": {
            "attr": true,
            "attrName": "oninvalid",
            "keyInterfaceName": "MathMLElement",
            "name": "oninvalid",
            "prop": true,
            "propName": "oninvalid",
            "readonly": false,
            "value": "event"
          },
          "onkeydown": {
            "attr": true,
            "attrName": "onkeydown",
            "keyInterfaceName": "MathMLElement",
            "name": "onkeydown",
            "prop": true,
            "propName": "onkeydown",
            "readonly": false,
            "value": "event"
          },
          "onkeypress": {
            "attr": true,
            "attrName": "onkeypress",
            "keyInterfaceName": "MathMLElement",
            "name": "onkeypress",
            "prop": true,
            "propName": "onkeypress",
            "readonly": false,
            "value": "event"
          },
          "onkeyup": {
            "attr": true,
            "attrName": "onkeyup",
            "keyInterfaceName": "MathMLElement",
            "name": "onkeyup",
            "prop": true,
            "propName": "onkeyup",
            "readonly": false,
            "value": "event"
          },
          "onload": {
            "attr": true,
            "attrName": "onload",
            "keyInterfaceName": "MathMLElement",
            "name": "onload",
            "prop": true,
            "propName": "onload",
            "readonly": false,
            "value": "event"
          },
          "onloadeddata": {
            "attr": true,
            "attrName": "onloadeddata",
            "keyInterfaceName": "MathMLElement",
            "name": "onloadeddata",
            "prop": true,
            "propName": "onloadeddata",
            "readonly": false,
            "value": "event"
          },
          "onloadedmetadata": {
            "attr": true,
            "attrName": "onloadedmetadata",
            "keyInterfaceName": "MathMLElement",
            "name": "onloadedmetadata",
            "prop": true,
            "propName": "onloadedmetadata",
            "readonly": false,
            "value": "event"
          },
          "onloadstart": {
            "attr": true,
            "attrName": "onloadstart",
            "keyInterfaceName": "MathMLElement",
            "name": "onloadstart",
            "prop": true,
            "propName": "onloadstart",
            "readonly": false,
            "value": "event"
          },
          "onlostpointercapture": {
            "attr": true,
            "attrName": "onlostpointercapture",
            "keyInterfaceName": "MathMLElement",
            "name": "onlostpointercapture",
            "prop": true,
            "propName": "onlostpointercapture",
            "readonly": false,
            "value": "event"
          },
          "onmousedown": {
            "attr": true,
            "attrName": "onmousedown",
            "keyInterfaceName": "MathMLElement",
            "name": "onmousedown",
            "prop": true,
            "propName": "onmousedown",
            "readonly": false,
            "value": "event"
          },
          "onmouseenter": {
            "attr": true,
            "attrName": "onmouseenter",
            "keyInterfaceName": "MathMLElement",
            "name": "onmouseenter",
            "prop": true,
            "propName": "onmouseenter",
            "readonly": false,
            "value": "event"
          },
          "onmouseleave": {
            "attr": true,
            "attrName": "onmouseleave",
            "keyInterfaceName": "MathMLElement",
            "name": "onmouseleave",
            "prop": true,
            "propName": "onmouseleave",
            "readonly": false,
            "value": "event"
          },
          "onmousemove": {
            "attr": true,
            "attrName": "onmousemove",
            "keyInterfaceName": "MathMLElement",
            "name": "onmousemove",
            "prop": true,
            "propName": "onmousemove",
            "readonly": false,
            "value": "event"
          },
          "onmouseout": {
            "attr": true,
            "attrName": "onmouseout",
            "keyInterfaceName": "MathMLElement",
            "name": "onmouseout",
            "prop": true,
            "propName": "onmouseout",
            "readonly": false,
            "value": "event"
          },
          "onmouseover": {
            "attr": true,
            "attrName": "onmouseover",
            "keyInterfaceName": "MathMLElement",
            "name": "onmouseover",
            "prop": true,
            "propName": "onmouseover",
            "readonly": false,
            "value": "event"
          },
          "onmouseup": {
            "attr": true,
            "attrName": "onmouseup",
            "keyInterfaceName": "MathMLElement",
            "name": "onmouseup",
            "prop": true,
            "propName": "onmouseup",
            "readonly": false,
            "value": "event"
          },
          "onmozfullscreenchange": {
            "attr": true,
            "attrName": "onmozfullscreenchange",
            "keyInterfaceName": "MathMLElement",
            "name": "onmozfullscreenchange",
            "prop": true,
            "propName": "onmozfullscreenchange",
            "readonly": false,
            "value": "event"
          },
          "onmozfullscreenerror": {
            "attr": true,
            "attrName": "onmozfullscreenerror",
            "keyInterfaceName": "MathMLElement",
            "name": "onmozfullscreenerror",
            "prop": true,
            "propName": "onmozfullscreenerror",
            "readonly": false,
            "value": "event"
          },
          "onpaste": {
            "attr": true,
            "attrName": "onpaste",
            "keyInterfaceName": "MathMLElement",
            "name": "onpaste",
            "prop": true,
            "propName": "onpaste",
            "readonly": false,
            "value": "event"
          },
          "onpause": {
            "attr": true,
            "attrName": "onpause",
            "keyInterfaceName": "MathMLElement",
            "name": "onpause",
            "prop": true,
            "propName": "onpause",
            "readonly": false,
            "value": "event"
          },
          "onplay": {
            "attr": true,
            "attrName": "onplay",
            "keyInterfaceName": "MathMLElement",
            "name": "onplay",
            "prop": true,
            "propName": "onplay",
            "readonly": false,
            "value": "event"
          },
          "onplaying": {
            "attr": true,
            "attrName": "onplaying",
            "keyInterfaceName": "MathMLElement",
            "name": "onplaying",
            "prop": true,
            "propName": "onplaying",
            "readonly": false,
            "value": "event"
          },
          "onpointercancel": {
            "attr": true,
            "attrName": "onpointercancel",
            "keyInterfaceName": "MathMLElement",
            "name": "onpointercancel",
            "prop": true,
            "propName": "onpointercancel",
            "readonly": false,
            "value": "event"
          },
          "onpointerdown": {
            "attr": true,
            "attrName": "onpointerdown",
            "keyInterfaceName": "MathMLElement",
            "name": "onpointerdown",
            "prop": true,
            "propName": "onpointerdown",
            "readonly": false,
            "value": "event"
          },
          "onpointerenter": {
            "attr": true,
            "attrName": "onpointerenter",
            "keyInterfaceName": "MathMLElement",
            "name": "onpointerenter",
            "prop": true,
            "propName": "onpointerenter",
            "readonly": false,
            "value": "event"
          },
          "onpointerleave": {
            "attr": true,
            "attrName": "onpointerleave",
            "keyInterfaceName": "MathMLElement",
            "name": "onpointerleave",
            "prop": true,
            "propName": "onpointerleave",
            "readonly": false,
            "value": "event"
          },
          "onpointermove": {
            "attr": true,
            "attrName": "onpointermove",
            "keyInterfaceName": "MathMLElement",
            "name": "onpointermove",
            "prop": true,
            "propName": "onpointermove",
            "readonly": false,
            "value": "event"
          },
          "onpointerout": {
            "attr": true,
            "attrName": "onpointerout",
            "keyInterfaceName": "MathMLElement",
            "name": "onpointerout",
            "prop": true,
            "propName": "onpointerout",
            "readonly": false,
            "value": "event"
          },
          "onpointerover": {
            "attr": true,
            "attrName": "onpointerover",
            "keyInterfaceName": "MathMLElement",
            "name": "onpointerover",
            "prop": true,
            "propName": "onpointerover",
            "readonly": false,
            "value": "event"
          },
          "onpointerup": {
            "attr": true,
            "attrName": "onpointerup",
            "keyInterfaceName": "MathMLElement",
            "name": "onpointerup",
            "prop": true,
            "propName": "onpointerup",
            "readonly": false,
            "value": "event"
          },
          "onprogress": {
            "attr": true,
            "attrName": "onprogress",
            "keyInterfaceName": "MathMLElement",
            "name": "onprogress",
            "prop": true,
            "propName": "onprogress",
            "readonly": false,
            "value": "event"
          },
          "onratechange": {
            "attr": true,
            "attrName": "onratechange",
            "keyInterfaceName": "MathMLElement",
            "name": "onratechange",
            "prop": true,
            "propName": "onratechange",
            "readonly": false,
            "value": "event"
          },
          "onreset": {
            "attr": true,
            "attrName": "onreset",
            "keyInterfaceName": "MathMLElement",
            "name": "onreset",
            "prop": true,
            "propName": "onreset",
            "readonly": false,
            "value": "event"
          },
          "onresize": {
            "attr": true,
            "attrName": "onresize",
            "keyInterfaceName": "MathMLElement",
            "name": "onresize",
            "prop": true,
            "propName": "onresize",
            "readonly": false,
            "value": "event"
          },
          "onscroll": {
            "attr": true,
            "attrName": "onscroll",
            "keyInterfaceName": "MathMLElement",
            "name": "onscroll",
            "prop": true,
            "propName": "onscroll",
            "readonly": false,
            "value": "event"
          },
          "onscrollend": {
            "attr": true,
            "attrName": "onscrollend",
            "keyInterfaceName": "MathMLElement",
            "name": "onscrollend",
            "prop": true,
            "propName": "onscrollend",
            "readonly": false,
            "value": "event"
          },
          "onsecuritypolicyviolation": {
            "attr": true,
            "attrName": "onsecuritypolicyviolation",
            "keyInterfaceName": "MathMLElement",
            "name": "onsecuritypolicyviolation",
            "prop": true,
            "propName": "onsecuritypolicyviolation",
            "readonly": false,
            "value": "event"
          },
          "onseeked": {
            "attr": true,
            "attrName": "onseeked",
            "keyInterfaceName": "MathMLElement",
            "name": "onseeked",
            "prop": true,
            "propName": "onseeked",
            "readonly": false,
            "value": "event"
          },
          "onseeking": {
            "attr": true,
            "attrName": "onseeking",
            "keyInterfaceName": "MathMLElement",
            "name": "onseeking",
            "prop": true,
            "propName": "onseeking",
            "readonly": false,
            "value": "event"
          },
          "onselect": {
            "attr": true,
            "attrName": "onselect",
            "keyInterfaceName": "MathMLElement",
            "name": "onselect",
            "prop": true,
            "propName": "onselect",
            "readonly": false,
            "value": "event"
          },
          "onselectionchange": {
            "attr": true,
            "attrName": "onselectionchange",
            "keyInterfaceName": "MathMLElement",
            "name": "onselectionchange",
            "prop": true,
            "propName": "onselectionchange",
            "readonly": false,
            "value": "event"
          },
          "onselectstart": {
            "attr": true,
            "attrName": "onselectstart",
            "keyInterfaceName": "MathMLElement",
            "name": "onselectstart",
            "prop": true,
            "propName": "onselectstart",
            "readonly": false,
            "value": "event"
          },
          "onslotchange": {
            "attr": true,
            "attrName": "onslotchange",
            "keyInterfaceName": "MathMLElement",
            "name": "onslotchange",
            "prop": true,
            "propName": "onslotchange",
            "readonly": false,
            "value": "event"
          },
          "onstalled": {
            "attr": true,
            "attrName": "onstalled",
            "keyInterfaceName": "MathMLElement",
            "name": "onstalled",
            "prop": true,
            "propName": "onstalled",
            "readonly": false,
            "value": "event"
          },
          "onsubmit": {
            "attr": true,
            "attrName": "onsubmit",
            "keyInterfaceName": "MathMLElement",
            "name": "onsubmit",
            "prop": true,
            "propName": "onsubmit",
            "readonly": false,
            "value": "event"
          },
          "onsuspend": {
            "attr": true,
            "attrName": "onsuspend",
            "keyInterfaceName": "MathMLElement",
            "name": "onsuspend",
            "prop": true,
            "propName": "onsuspend",
            "readonly": false,
            "value": "event"
          },
          "ontimeupdate": {
            "attr": true,
            "attrName": "ontimeupdate",
            "keyInterfaceName": "MathMLElement",
            "name": "ontimeupdate",
            "prop": true,
            "propName": "ontimeupdate",
            "readonly": false,
            "value": "event"
          },
          "ontoggle": {
            "attr": true,
            "attrName": "ontoggle",
            "keyInterfaceName": "MathMLElement",
            "name": "ontoggle",
            "prop": true,
            "propName": "ontoggle",
            "readonly": false,
            "value": "event"
          },
          "ontransitioncancel": {
            "attr": true,
            "attrName": "ontransitioncancel",
            "keyInterfaceName": "MathMLElement",
            "name": "ontransitioncancel",
            "prop": true,
            "propName": "ontransitioncancel",
            "readonly": false,
            "value": "event"
          },
          "ontransitionend": {
            "attr": true,
            "attrName": "ontransitionend",
            "keyInterfaceName": "MathMLElement",
            "name": "ontransitionend",
            "prop": true,
            "propName": "ontransitionend",
            "readonly": false,
            "value": "event"
          },
          "ontransitionrun": {
            "attr": true,
            "attrName": "ontransitionrun",
            "keyInterfaceName": "MathMLElement",
            "name": "ontransitionrun",
            "prop": true,
            "propName": "ontransitionrun",
            "readonly": false,
            "value": "event"
          },
          "ontransitionstart": {
            "attr": true,
            "attrName": "ontransitionstart",
            "keyInterfaceName": "MathMLElement",
            "name": "ontransitionstart",
            "prop": true,
            "propName": "ontransitionstart",
            "readonly": false,
            "value": "event"
          },
          "onvolumechange": {
            "attr": true,
            "attrName": "onvolumechange",
            "keyInterfaceName": "MathMLElement",
            "name": "onvolumechange",
            "prop": true,
            "propName": "onvolumechange",
            "readonly": false,
            "value": "event"
          },
          "onwaiting": {
            "attr": true,
            "attrName": "onwaiting",
            "keyInterfaceName": "MathMLElement",
            "name": "onwaiting",
            "prop": true,
            "propName": "onwaiting",
            "readonly": false,
            "value": "event"
          },
          "onwebkitanimationend": {
            "attr": true,
            "attrName": "onwebkitanimationend",
            "keyInterfaceName": "MathMLElement",
            "name": "onwebkitanimationend",
            "prop": true,
            "propName": "onwebkitanimationend",
            "readonly": false,
            "value": "event"
          },
          "onwebkitanimationiteration": {
            "attr": true,
            "attrName": "onwebkitanimationiteration",
            "keyInterfaceName": "MathMLElement",
            "name": "onwebkitanimationiteration",
            "prop": true,
            "propName": "onwebkitanimationiteration",
            "readonly": false,
            "value": "event"
          },
          "onwebkitanimationstart": {
            "attr": true,
            "attrName": "onwebkitanimationstart",
            "keyInterfaceName": "MathMLElement",
            "name": "onwebkitanimationstart",
            "prop": true,
            "propName": "onwebkitanimationstart",
            "readonly": false,
            "value": "event"
          },
          "onwebkittransitionend": {
            "attr": true,
            "attrName": "onwebkittransitionend",
            "keyInterfaceName": "MathMLElement",
            "name": "onwebkittransitionend",
            "prop": true,
            "propName": "onwebkittransitionend",
            "readonly": false,
            "value": "event"
          },
          "onwheel": {
            "attr": true,
            "attrName": "onwheel",
            "keyInterfaceName": "MathMLElement",
            "name": "onwheel",
            "prop": true,
            "propName": "onwheel",
            "readonly": false,
            "value": "event"
          },
          "style": {
            "attr": true,
            "attrName": "style",
            "keyInterfaceName": "MathMLElement",
            "name": "style",
            "prop": true,
            "propName": "style",
            "readonly": false,
            "value": "string"
          },
          "tabIndex": {
            "attr": false,
            "attrName": "tabindex",
            "keyInterfaceName": "MathMLElement",
            "name": "tabIndex",
            "prop": true,
            "propName": "tabIndex",
            "readonly": false,
            "value": "number"
          },
          "tabindex": {
            "attr": true,
            "attrName": "tabindex",
            "keyInterfaceName": "MathMLElement",
            "name": "tabindex",
            "prop": false,
            "propName": "tabIndex",
            "readonly": false,
            "value": "number"
          }
        },
        "readonly": [
          "MathMLElement.dataset"
        ],
        "tagInterfaceName": "MathMLElement"
      },
      "svgelement": {
        "booleans": [
          "SVGElement.autofocus"
        ],
        "events": [
          "SVGElement.onabort",
          "SVGElement.onanimationcancel",
          "SVGElement.onanimationend",
          "SVGElement.onanimationiteration",
          "SVGElement.onanimationstart",
          "SVGElement.onauxclick",
          "SVGElement.onbeforeinput",
          "SVGElement.onbeforetoggle",
          "SVGElement.onblur",
          "SVGElement.oncancel",
          "SVGElement.oncanplay",
          "SVGElement.oncanplaythrough",
          "SVGElement.onchange",
          "SVGElement.onclick",
          "SVGElement.onclose",
          "SVGElement.oncontentvisibilityautostatechange",
          "SVGElement.oncontextlost",
          "SVGElement.oncontextmenu",
          "SVGElement.oncontextrestored",
          "SVGElement.oncopy",
          "SVGElement.oncuechange",
          "SVGElement.oncut",
          "SVGElement.ondblclick",
          "SVGElement.ondrag",
          "SVGElement.ondragend",
          "SVGElement.ondragenter",
          "SVGElement.ondragexit",
          "SVGElement.ondragleave",
          "SVGElement.ondragover",
          "SVGElement.ondragstart",
          "SVGElement.ondrop",
          "SVGElement.ondurationchange",
          "SVGElement.onemptied",
          "SVGElement.onended",
          "SVGElement.onerror",
          "SVGElement.onfocus",
          "SVGElement.onformdata",
          "SVGElement.ongotpointercapture",
          "SVGElement.oninput",
          "SVGElement.oninvalid",
          "SVGElement.onkeydown",
          "SVGElement.onkeypress",
          "SVGElement.onkeyup",
          "SVGElement.onload",
          "SVGElement.onloadeddata",
          "SVGElement.onloadedmetadata",
          "SVGElement.onloadstart",
          "SVGElement.onlostpointercapture",
          "SVGElement.onmousedown",
          "SVGElement.onmouseenter",
          "SVGElement.onmouseleave",
          "SVGElement.onmousemove",
          "SVGElement.onmouseout",
          "SVGElement.onmouseover",
          "SVGElement.onmouseup",
          "SVGElement.onmozfullscreenchange",
          "SVGElement.onmozfullscreenerror",
          "SVGElement.onpaste",
          "SVGElement.onpause",
          "SVGElement.onplay",
          "SVGElement.onplaying",
          "SVGElement.onpointercancel",
          "SVGElement.onpointerdown",
          "SVGElement.onpointerenter",
          "SVGElement.onpointerleave",
          "SVGElement.onpointermove",
          "SVGElement.onpointerout",
          "SVGElement.onpointerover",
          "SVGElement.onpointerup",
          "SVGElement.onprogress",
          "SVGElement.onratechange",
          "SVGElement.onreset",
          "SVGElement.onresize",
          "SVGElement.onscroll",
          "SVGElement.onscrollend",
          "SVGElement.onsecuritypolicyviolation",
          "SVGElement.onseeked",
          "SVGElement.onseeking",
          "SVGElement.onselect",
          "SVGElement.onselectionchange",
          "SVGElement.onselectstart",
          "SVGElement.onslotchange",
          "SVGElement.onstalled",
          "SVGElement.onsubmit",
          "SVGElement.onsuspend",
          "SVGElement.ontimeupdate",
          "SVGElement.ontoggle",
          "SVGElement.ontransitioncancel",
          "SVGElement.ontransitionend",
          "SVGElement.ontransitionrun",
          "SVGElement.ontransitionstart",
          "SVGElement.onvolumechange",
          "SVGElement.onwaiting",
          "SVGElement.onwebkitanimationend",
          "SVGElement.onwebkitanimationiteration",
          "SVGElement.onwebkitanimationstart",
          "SVGElement.onwebkittransitionend",
          "SVGElement.onwheel"
        ],
        "keys": {
          "autofocus": {
            "attr": true,
            "attrName": "autofocus",
            "keyInterfaceName": "SVGElement",
            "name": "autofocus",
            "prop": true,
            "propName": "autofocus",
            "readonly": false,
            "value": "boolean"
          },
          "id": {
            "attr": true,
            "attrName": "id",
            "keyInterfaceName": "SVGElement",
            "name": "id",
            "prop": true,
            "propName": "id",
            "readonly": false,
            "value": "string"
          },
          "nonce": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "SVGElement",
            "name": "nonce",
            "prop": true,
            "propName": "nonce",
            "readonly": false,
            "value": "string"
          },
          "onabort": {
            "attr": true,
            "attrName": "onabort",
            "keyInterfaceName": "SVGElement",
            "name": "onabort",
            "prop": true,
            "propName": "onabort",
            "readonly": false,
            "value": "event"
          },
          "onanimationcancel": {
            "attr": true,
            "attrName": "onanimationcancel",
            "keyInterfaceName": "SVGElement",
            "name": "onanimationcancel",
            "prop": true,
            "propName": "onanimationcancel",
            "readonly": false,
            "value": "event"
          },
          "onanimationend": {
            "attr": true,
            "attrName": "onanimationend",
            "keyInterfaceName": "SVGElement",
            "name": "onanimationend",
            "prop": true,
            "propName": "onanimationend",
            "readonly": false,
            "value": "event"
          },
          "onanimationiteration": {
            "attr": true,
            "attrName": "onanimationiteration",
            "keyInterfaceName": "SVGElement",
            "name": "onanimationiteration",
            "prop": true,
            "propName": "onanimationiteration",
            "readonly": false,
            "value": "event"
          },
          "onanimationstart": {
            "attr": true,
            "attrName": "onanimationstart",
            "keyInterfaceName": "SVGElement",
            "name": "onanimationstart",
            "prop": true,
            "propName": "onanimationstart",
            "readonly": false,
            "value": "event"
          },
          "onauxclick": {
            "attr": true,
            "attrName": "onauxclick",
            "keyInterfaceName": "SVGElement",
            "name": "onauxclick",
            "prop": true,
            "propName": "onauxclick",
            "readonly": false,
            "value": "event"
          },
          "onbeforeinput": {
            "attr": true,
            "attrName": "onbeforeinput",
            "keyInterfaceName": "SVGElement",
            "name": "onbeforeinput",
            "prop": true,
            "propName": "onbeforeinput",
            "readonly": false,
            "value": "event"
          },
          "onbeforetoggle": {
            "attr": true,
            "attrName": "onbeforetoggle",
            "keyInterfaceName": "SVGElement",
            "name": "onbeforetoggle",
            "prop": true,
            "propName": "onbeforetoggle",
            "readonly": false,
            "value": "event"
          },
          "onblur": {
            "attr": true,
            "attrName": "onblur",
            "keyInterfaceName": "SVGElement",
            "name": "onblur",
            "prop": true,
            "propName": "onblur",
            "readonly": false,
            "value": "event"
          },
          "oncancel": {
            "attr": true,
            "attrName": "oncancel",
            "keyInterfaceName": "SVGElement",
            "name": "oncancel",
            "prop": true,
            "propName": "oncancel",
            "readonly": false,
            "value": "event"
          },
          "oncanplay": {
            "attr": true,
            "attrName": "oncanplay",
            "keyInterfaceName": "SVGElement",
            "name": "oncanplay",
            "prop": true,
            "propName": "oncanplay",
            "readonly": false,
            "value": "event"
          },
          "oncanplaythrough": {
            "attr": true,
            "attrName": "oncanplaythrough",
            "keyInterfaceName": "SVGElement",
            "name": "oncanplaythrough",
            "prop": true,
            "propName": "oncanplaythrough",
            "readonly": false,
            "value": "event"
          },
          "onchange": {
            "attr": true,
            "attrName": "onchange",
            "keyInterfaceName": "SVGElement",
            "name": "onchange",
            "prop": true,
            "propName": "onchange",
            "readonly": false,
            "value": "event"
          },
          "onclick": {
            "attr": true,
            "attrName": "onclick",
            "keyInterfaceName": "SVGElement",
            "name": "onclick",
            "prop": true,
            "propName": "onclick",
            "readonly": false,
            "value": "event"
          },
          "onclose": {
            "attr": true,
            "attrName": "onclose",
            "keyInterfaceName": "SVGElement",
            "name": "onclose",
            "prop": true,
            "propName": "onclose",
            "readonly": false,
            "value": "event"
          },
          "oncontentvisibilityautostatechange": {
            "attr": true,
            "attrName": "oncontentvisibilityautostatechange",
            "keyInterfaceName": "SVGElement",
            "name": "oncontentvisibilityautostatechange",
            "prop": true,
            "propName": "oncontentvisibilityautostatechange",
            "readonly": false,
            "value": "event"
          },
          "oncontextlost": {
            "attr": true,
            "attrName": "oncontextlost",
            "keyInterfaceName": "SVGElement",
            "name": "oncontextlost",
            "prop": true,
            "propName": "oncontextlost",
            "readonly": false,
            "value": "event"
          },
          "oncontextmenu": {
            "attr": true,
            "attrName": "oncontextmenu",
            "keyInterfaceName": "SVGElement",
            "name": "oncontextmenu",
            "prop": true,
            "propName": "oncontextmenu",
            "readonly": false,
            "value": "event"
          },
          "oncontextrestored": {
            "attr": true,
            "attrName": "oncontextrestored",
            "keyInterfaceName": "SVGElement",
            "name": "oncontextrestored",
            "prop": true,
            "propName": "oncontextrestored",
            "readonly": false,
            "value": "event"
          },
          "oncopy": {
            "attr": true,
            "attrName": "oncopy",
            "keyInterfaceName": "SVGElement",
            "name": "oncopy",
            "prop": true,
            "propName": "oncopy",
            "readonly": false,
            "value": "event"
          },
          "oncuechange": {
            "attr": true,
            "attrName": "oncuechange",
            "keyInterfaceName": "SVGElement",
            "name": "oncuechange",
            "prop": true,
            "propName": "oncuechange",
            "readonly": false,
            "value": "event"
          },
          "oncut": {
            "attr": true,
            "attrName": "oncut",
            "keyInterfaceName": "SVGElement",
            "name": "oncut",
            "prop": true,
            "propName": "oncut",
            "readonly": false,
            "value": "event"
          },
          "ondblclick": {
            "attr": true,
            "attrName": "ondblclick",
            "keyInterfaceName": "SVGElement",
            "name": "ondblclick",
            "prop": true,
            "propName": "ondblclick",
            "readonly": false,
            "value": "event"
          },
          "ondrag": {
            "attr": true,
            "attrName": "ondrag",
            "keyInterfaceName": "SVGElement",
            "name": "ondrag",
            "prop": true,
            "propName": "ondrag",
            "readonly": false,
            "value": "event"
          },
          "ondragend": {
            "attr": true,
            "attrName": "ondragend",
            "keyInterfaceName": "SVGElement",
            "name": "ondragend",
            "prop": true,
            "propName": "ondragend",
            "readonly": false,
            "value": "event"
          },
          "ondragenter": {
            "attr": true,
            "attrName": "ondragenter",
            "keyInterfaceName": "SVGElement",
            "name": "ondragenter",
            "prop": true,
            "propName": "ondragenter",
            "readonly": false,
            "value": "event"
          },
          "ondragexit": {
            "attr": true,
            "attrName": "ondragexit",
            "keyInterfaceName": "SVGElement",
            "name": "ondragexit",
            "prop": true,
            "propName": "ondragexit",
            "readonly": false,
            "value": "event"
          },
          "ondragleave": {
            "attr": true,
            "attrName": "ondragleave",
            "keyInterfaceName": "SVGElement",
            "name": "ondragleave",
            "prop": true,
            "propName": "ondragleave",
            "readonly": false,
            "value": "event"
          },
          "ondragover": {
            "attr": true,
            "attrName": "ondragover",
            "keyInterfaceName": "SVGElement",
            "name": "ondragover",
            "prop": true,
            "propName": "ondragover",
            "readonly": false,
            "value": "event"
          },
          "ondragstart": {
            "attr": true,
            "attrName": "ondragstart",
            "keyInterfaceName": "SVGElement",
            "name": "ondragstart",
            "prop": true,
            "propName": "ondragstart",
            "readonly": false,
            "value": "event"
          },
          "ondrop": {
            "attr": true,
            "attrName": "ondrop",
            "keyInterfaceName": "SVGElement",
            "name": "ondrop",
            "prop": true,
            "propName": "ondrop",
            "readonly": false,
            "value": "event"
          },
          "ondurationchange": {
            "attr": true,
            "attrName": "ondurationchange",
            "keyInterfaceName": "SVGElement",
            "name": "ondurationchange",
            "prop": true,
            "propName": "ondurationchange",
            "readonly": false,
            "value": "event"
          },
          "onemptied": {
            "attr": true,
            "attrName": "onemptied",
            "keyInterfaceName": "SVGElement",
            "name": "onemptied",
            "prop": true,
            "propName": "onemptied",
            "readonly": false,
            "value": "event"
          },
          "onended": {
            "attr": true,
            "attrName": "onended",
            "keyInterfaceName": "SVGElement",
            "name": "onended",
            "prop": true,
            "propName": "onended",
            "readonly": false,
            "value": "event"
          },
          "onerror": {
            "attr": true,
            "attrName": "onerror",
            "keyInterfaceName": "SVGElement",
            "name": "onerror",
            "prop": true,
            "propName": "onerror",
            "readonly": false,
            "value": "event"
          },
          "onfocus": {
            "attr": true,
            "attrName": "onfocus",
            "keyInterfaceName": "SVGElement",
            "name": "onfocus",
            "prop": true,
            "propName": "onfocus",
            "readonly": false,
            "value": "event"
          },
          "onformdata": {
            "attr": true,
            "attrName": "onformdata",
            "keyInterfaceName": "SVGElement",
            "name": "onformdata",
            "prop": true,
            "propName": "onformdata",
            "readonly": false,
            "value": "event"
          },
          "ongotpointercapture": {
            "attr": true,
            "attrName": "ongotpointercapture",
            "keyInterfaceName": "SVGElement",
            "name": "ongotpointercapture",
            "prop": true,
            "propName": "ongotpointercapture",
            "readonly": false,
            "value": "event"
          },
          "oninput": {
            "attr": true,
            "attrName": "oninput",
            "keyInterfaceName": "SVGElement",
            "name": "oninput",
            "prop": true,
            "propName": "oninput",
            "readonly": false,
            "value": "event"
          },
          "oninvalid": {
            "attr": true,
            "attrName": "oninvalid",
            "keyInterfaceName": "SVGElement",
            "name": "oninvalid",
            "prop": true,
            "propName": "oninvalid",
            "readonly": false,
            "value": "event"
          },
          "onkeydown": {
            "attr": true,
            "attrName": "onkeydown",
            "keyInterfaceName": "SVGElement",
            "name": "onkeydown",
            "prop": true,
            "propName": "onkeydown",
            "readonly": false,
            "value": "event"
          },
          "onkeypress": {
            "attr": true,
            "attrName": "onkeypress",
            "keyInterfaceName": "SVGElement",
            "name": "onkeypress",
            "prop": true,
            "propName": "onkeypress",
            "readonly": false,
            "value": "event"
          },
          "onkeyup": {
            "attr": true,
            "attrName": "onkeyup",
            "keyInterfaceName": "SVGElement",
            "name": "onkeyup",
            "prop": true,
            "propName": "onkeyup",
            "readonly": false,
            "value": "event"
          },
          "onload": {
            "attr": true,
            "attrName": "onload",
            "keyInterfaceName": "SVGElement",
            "name": "onload",
            "prop": true,
            "propName": "onload",
            "readonly": false,
            "value": "event"
          },
          "onloadeddata": {
            "attr": true,
            "attrName": "onloadeddata",
            "keyInterfaceName": "SVGElement",
            "name": "onloadeddata",
            "prop": true,
            "propName": "onloadeddata",
            "readonly": false,
            "value": "event"
          },
          "onloadedmetadata": {
            "attr": true,
            "attrName": "onloadedmetadata",
            "keyInterfaceName": "SVGElement",
            "name": "onloadedmetadata",
            "prop": true,
            "propName": "onloadedmetadata",
            "readonly": false,
            "value": "event"
          },
          "onloadstart": {
            "attr": true,
            "attrName": "onloadstart",
            "keyInterfaceName": "SVGElement",
            "name": "onloadstart",
            "prop": true,
            "propName": "onloadstart",
            "readonly": false,
            "value": "event"
          },
          "onlostpointercapture": {
            "attr": true,
            "attrName": "onlostpointercapture",
            "keyInterfaceName": "SVGElement",
            "name": "onlostpointercapture",
            "prop": true,
            "propName": "onlostpointercapture",
            "readonly": false,
            "value": "event"
          },
          "onmousedown": {
            "attr": true,
            "attrName": "onmousedown",
            "keyInterfaceName": "SVGElement",
            "name": "onmousedown",
            "prop": true,
            "propName": "onmousedown",
            "readonly": false,
            "value": "event"
          },
          "onmouseenter": {
            "attr": true,
            "attrName": "onmouseenter",
            "keyInterfaceName": "SVGElement",
            "name": "onmouseenter",
            "prop": true,
            "propName": "onmouseenter",
            "readonly": false,
            "value": "event"
          },
          "onmouseleave": {
            "attr": true,
            "attrName": "onmouseleave",
            "keyInterfaceName": "SVGElement",
            "name": "onmouseleave",
            "prop": true,
            "propName": "onmouseleave",
            "readonly": false,
            "value": "event"
          },
          "onmousemove": {
            "attr": true,
            "attrName": "onmousemove",
            "keyInterfaceName": "SVGElement",
            "name": "onmousemove",
            "prop": true,
            "propName": "onmousemove",
            "readonly": false,
            "value": "event"
          },
          "onmouseout": {
            "attr": true,
            "attrName": "onmouseout",
            "keyInterfaceName": "SVGElement",
            "name": "onmouseout",
            "prop": true,
            "propName": "onmouseout",
            "readonly": false,
            "value": "event"
          },
          "onmouseover": {
            "attr": true,
            "attrName": "onmouseover",
            "keyInterfaceName": "SVGElement",
            "name": "onmouseover",
            "prop": true,
            "propName": "onmouseover",
            "readonly": false,
            "value": "event"
          },
          "onmouseup": {
            "attr": true,
            "attrName": "onmouseup",
            "keyInterfaceName": "SVGElement",
            "name": "onmouseup",
            "prop": true,
            "propName": "onmouseup",
            "readonly": false,
            "value": "event"
          },
          "onmozfullscreenchange": {
            "attr": true,
            "attrName": "onmozfullscreenchange",
            "keyInterfaceName": "SVGElement",
            "name": "onmozfullscreenchange",
            "prop": true,
            "propName": "onmozfullscreenchange",
            "readonly": false,
            "value": "event"
          },
          "onmozfullscreenerror": {
            "attr": true,
            "attrName": "onmozfullscreenerror",
            "keyInterfaceName": "SVGElement",
            "name": "onmozfullscreenerror",
            "prop": true,
            "propName": "onmozfullscreenerror",
            "readonly": false,
            "value": "event"
          },
          "onpaste": {
            "attr": true,
            "attrName": "onpaste",
            "keyInterfaceName": "SVGElement",
            "name": "onpaste",
            "prop": true,
            "propName": "onpaste",
            "readonly": false,
            "value": "event"
          },
          "onpause": {
            "attr": true,
            "attrName": "onpause",
            "keyInterfaceName": "SVGElement",
            "name": "onpause",
            "prop": true,
            "propName": "onpause",
            "readonly": false,
            "value": "event"
          },
          "onplay": {
            "attr": true,
            "attrName": "onplay",
            "keyInterfaceName": "SVGElement",
            "name": "onplay",
            "prop": true,
            "propName": "onplay",
            "readonly": false,
            "value": "event"
          },
          "onplaying": {
            "attr": true,
            "attrName": "onplaying",
            "keyInterfaceName": "SVGElement",
            "name": "onplaying",
            "prop": true,
            "propName": "onplaying",
            "readonly": false,
            "value": "event"
          },
          "onpointercancel": {
            "attr": true,
            "attrName": "onpointercancel",
            "keyInterfaceName": "SVGElement",
            "name": "onpointercancel",
            "prop": true,
            "propName": "onpointercancel",
            "readonly": false,
            "value": "event"
          },
          "onpointerdown": {
            "attr": true,
            "attrName": "onpointerdown",
            "keyInterfaceName": "SVGElement",
            "name": "onpointerdown",
            "prop": true,
            "propName": "onpointerdown",
            "readonly": false,
            "value": "event"
          },
          "onpointerenter": {
            "attr": true,
            "attrName": "onpointerenter",
            "keyInterfaceName": "SVGElement",
            "name": "onpointerenter",
            "prop": true,
            "propName": "onpointerenter",
            "readonly": false,
            "value": "event"
          },
          "onpointerleave": {
            "attr": true,
            "attrName": "onpointerleave",
            "keyInterfaceName": "SVGElement",
            "name": "onpointerleave",
            "prop": true,
            "propName": "onpointerleave",
            "readonly": false,
            "value": "event"
          },
          "onpointermove": {
            "attr": true,
            "attrName": "onpointermove",
            "keyInterfaceName": "SVGElement",
            "name": "onpointermove",
            "prop": true,
            "propName": "onpointermove",
            "readonly": false,
            "value": "event"
          },
          "onpointerout": {
            "attr": true,
            "attrName": "onpointerout",
            "keyInterfaceName": "SVGElement",
            "name": "onpointerout",
            "prop": true,
            "propName": "onpointerout",
            "readonly": false,
            "value": "event"
          },
          "onpointerover": {
            "attr": true,
            "attrName": "onpointerover",
            "keyInterfaceName": "SVGElement",
            "name": "onpointerover",
            "prop": true,
            "propName": "onpointerover",
            "readonly": false,
            "value": "event"
          },
          "onpointerup": {
            "attr": true,
            "attrName": "onpointerup",
            "keyInterfaceName": "SVGElement",
            "name": "onpointerup",
            "prop": true,
            "propName": "onpointerup",
            "readonly": false,
            "value": "event"
          },
          "onprogress": {
            "attr": true,
            "attrName": "onprogress",
            "keyInterfaceName": "SVGElement",
            "name": "onprogress",
            "prop": true,
            "propName": "onprogress",
            "readonly": false,
            "value": "event"
          },
          "onratechange": {
            "attr": true,
            "attrName": "onratechange",
            "keyInterfaceName": "SVGElement",
            "name": "onratechange",
            "prop": true,
            "propName": "onratechange",
            "readonly": false,
            "value": "event"
          },
          "onreset": {
            "attr": true,
            "attrName": "onreset",
            "keyInterfaceName": "SVGElement",
            "name": "onreset",
            "prop": true,
            "propName": "onreset",
            "readonly": false,
            "value": "event"
          },
          "onresize": {
            "attr": true,
            "attrName": "onresize",
            "keyInterfaceName": "SVGElement",
            "name": "onresize",
            "prop": true,
            "propName": "onresize",
            "readonly": false,
            "value": "event"
          },
          "onscroll": {
            "attr": true,
            "attrName": "onscroll",
            "keyInterfaceName": "SVGElement",
            "name": "onscroll",
            "prop": true,
            "propName": "onscroll",
            "readonly": false,
            "value": "event"
          },
          "onscrollend": {
            "attr": true,
            "attrName": "onscrollend",
            "keyInterfaceName": "SVGElement",
            "name": "onscrollend",
            "prop": true,
            "propName": "onscrollend",
            "readonly": false,
            "value": "event"
          },
          "onsecuritypolicyviolation": {
            "attr": true,
            "attrName": "onsecuritypolicyviolation",
            "keyInterfaceName": "SVGElement",
            "name": "onsecuritypolicyviolation",
            "prop": true,
            "propName": "onsecuritypolicyviolation",
            "readonly": false,
            "value": "event"
          },
          "onseeked": {
            "attr": true,
            "attrName": "onseeked",
            "keyInterfaceName": "SVGElement",
            "name": "onseeked",
            "prop": true,
            "propName": "onseeked",
            "readonly": false,
            "value": "event"
          },
          "onseeking": {
            "attr": true,
            "attrName": "onseeking",
            "keyInterfaceName": "SVGElement",
            "name": "onseeking",
            "prop": true,
            "propName": "onseeking",
            "readonly": false,
            "value": "event"
          },
          "onselect": {
            "attr": true,
            "attrName": "onselect",
            "keyInterfaceName": "SVGElement",
            "name": "onselect",
            "prop": true,
            "propName": "onselect",
            "readonly": false,
            "value": "event"
          },
          "onselectionchange": {
            "attr": true,
            "attrName": "onselectionchange",
            "keyInterfaceName": "SVGElement",
            "name": "onselectionchange",
            "prop": true,
            "propName": "onselectionchange",
            "readonly": false,
            "value": "event"
          },
          "onselectstart": {
            "attr": true,
            "attrName": "onselectstart",
            "keyInterfaceName": "SVGElement",
            "name": "onselectstart",
            "prop": true,
            "propName": "onselectstart",
            "readonly": false,
            "value": "event"
          },
          "onslotchange": {
            "attr": true,
            "attrName": "onslotchange",
            "keyInterfaceName": "SVGElement",
            "name": "onslotchange",
            "prop": true,
            "propName": "onslotchange",
            "readonly": false,
            "value": "event"
          },
          "onstalled": {
            "attr": true,
            "attrName": "onstalled",
            "keyInterfaceName": "SVGElement",
            "name": "onstalled",
            "prop": true,
            "propName": "onstalled",
            "readonly": false,
            "value": "event"
          },
          "onsubmit": {
            "attr": true,
            "attrName": "onsubmit",
            "keyInterfaceName": "SVGElement",
            "name": "onsubmit",
            "prop": true,
            "propName": "onsubmit",
            "readonly": false,
            "value": "event"
          },
          "onsuspend": {
            "attr": true,
            "attrName": "onsuspend",
            "keyInterfaceName": "SVGElement",
            "name": "onsuspend",
            "prop": true,
            "propName": "onsuspend",
            "readonly": false,
            "value": "event"
          },
          "ontimeupdate": {
            "attr": true,
            "attrName": "ontimeupdate",
            "keyInterfaceName": "SVGElement",
            "name": "ontimeupdate",
            "prop": true,
            "propName": "ontimeupdate",
            "readonly": false,
            "value": "event"
          },
          "ontoggle": {
            "attr": true,
            "attrName": "ontoggle",
            "keyInterfaceName": "SVGElement",
            "name": "ontoggle",
            "prop": true,
            "propName": "ontoggle",
            "readonly": false,
            "value": "event"
          },
          "ontransitioncancel": {
            "attr": true,
            "attrName": "ontransitioncancel",
            "keyInterfaceName": "SVGElement",
            "name": "ontransitioncancel",
            "prop": true,
            "propName": "ontransitioncancel",
            "readonly": false,
            "value": "event"
          },
          "ontransitionend": {
            "attr": true,
            "attrName": "ontransitionend",
            "keyInterfaceName": "SVGElement",
            "name": "ontransitionend",
            "prop": true,
            "propName": "ontransitionend",
            "readonly": false,
            "value": "event"
          },
          "ontransitionrun": {
            "attr": true,
            "attrName": "ontransitionrun",
            "keyInterfaceName": "SVGElement",
            "name": "ontransitionrun",
            "prop": true,
            "propName": "ontransitionrun",
            "readonly": false,
            "value": "event"
          },
          "ontransitionstart": {
            "attr": true,
            "attrName": "ontransitionstart",
            "keyInterfaceName": "SVGElement",
            "name": "ontransitionstart",
            "prop": true,
            "propName": "ontransitionstart",
            "readonly": false,
            "value": "event"
          },
          "onvolumechange": {
            "attr": true,
            "attrName": "onvolumechange",
            "keyInterfaceName": "SVGElement",
            "name": "onvolumechange",
            "prop": true,
            "propName": "onvolumechange",
            "readonly": false,
            "value": "event"
          },
          "onwaiting": {
            "attr": true,
            "attrName": "onwaiting",
            "keyInterfaceName": "SVGElement",
            "name": "onwaiting",
            "prop": true,
            "propName": "onwaiting",
            "readonly": false,
            "value": "event"
          },
          "onwebkitanimationend": {
            "attr": true,
            "attrName": "onwebkitanimationend",
            "keyInterfaceName": "SVGElement",
            "name": "onwebkitanimationend",
            "prop": true,
            "propName": "onwebkitanimationend",
            "readonly": false,
            "value": "event"
          },
          "onwebkitanimationiteration": {
            "attr": true,
            "attrName": "onwebkitanimationiteration",
            "keyInterfaceName": "SVGElement",
            "name": "onwebkitanimationiteration",
            "prop": true,
            "propName": "onwebkitanimationiteration",
            "readonly": false,
            "value": "event"
          },
          "onwebkitanimationstart": {
            "attr": true,
            "attrName": "onwebkitanimationstart",
            "keyInterfaceName": "SVGElement",
            "name": "onwebkitanimationstart",
            "prop": true,
            "propName": "onwebkitanimationstart",
            "readonly": false,
            "value": "event"
          },
          "onwebkittransitionend": {
            "attr": true,
            "attrName": "onwebkittransitionend",
            "keyInterfaceName": "SVGElement",
            "name": "onwebkittransitionend",
            "prop": true,
            "propName": "onwebkittransitionend",
            "readonly": false,
            "value": "event"
          },
          "onwheel": {
            "attr": true,
            "attrName": "onwheel",
            "keyInterfaceName": "SVGElement",
            "name": "onwheel",
            "prop": true,
            "propName": "onwheel",
            "readonly": false,
            "value": "event"
          },
          "style": {
            "attr": true,
            "attrName": "style",
            "keyInterfaceName": "SVGElement",
            "name": "style",
            "prop": true,
            "propName": "style",
            "readonly": false,
            "value": "string"
          },
          "tabIndex": {
            "attr": false,
            "attrName": "tabindex",
            "keyInterfaceName": "SVGElement",
            "name": "tabIndex",
            "prop": true,
            "propName": "tabIndex",
            "readonly": false,
            "value": "number"
          },
          "tabindex": {
            "attr": true,
            "attrName": "tabindex",
            "keyInterfaceName": "SVGElement",
            "name": "tabindex",
            "prop": false,
            "propName": "tabIndex",
            "readonly": false,
            "value": "number"
          }
        },
        "readonly": [
          "SVGElement.className",
          "SVGElement.dataset",
          "SVGElement.ownerSVGElement",
          "SVGElement.viewportElement"
        ],
        "tagInterfaceName": "SVGElement"
      }
    },
    "math": {
      "annotation": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "MathMLElement"
      },
      "annotation-xml": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "MathMLElement"
      },
      "maction": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "MathMLElement"
      },
      "math": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "MathMLElement"
      },
      "menclose": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "MathMLElement"
      },
      "merror": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "MathMLElement"
      },
      "mfenced": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "MathMLElement"
      },
      "mfrac": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "MathMLElement"
      },
      "mi": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "MathMLElement"
      },
      "mmultiscripts": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "MathMLElement"
      },
      "mn": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "MathMLElement"
      },
      "mo": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "MathMLElement"
      },
      "mover": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "MathMLElement"
      },
      "mpadded": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "MathMLElement"
      },
      "mphantom": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "MathMLElement"
      },
      "mprescripts": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "MathMLElement"
      },
      "mroot": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "MathMLElement"
      },
      "mrow": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "MathMLElement"
      },
      "ms": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "MathMLElement"
      },
      "mspace": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "MathMLElement"
      },
      "msqrt": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "MathMLElement"
      },
      "mstyle": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "MathMLElement"
      },
      "msub": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "MathMLElement"
      },
      "msubsup": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "MathMLElement"
      },
      "msup": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "MathMLElement"
      },
      "mtable": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "MathMLElement"
      },
      "mtd": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "MathMLElement"
      },
      "mtext": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "MathMLElement"
      },
      "mtr": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "MathMLElement"
      },
      "munder": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "MathMLElement"
      },
      "munderover": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "MathMLElement"
      },
      "semantics": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "MathMLElement"
      }
    },
    "svg": {
      "a": {
        "booleans": [],
        "events": [],
        "keys": {
          "download": {
            "attr": true,
            "attrName": "download",
            "keyInterfaceName": "SVGAElement",
            "name": "download",
            "prop": true,
            "propName": "download",
            "readonly": false,
            "value": "string"
          },
          "hreflang": {
            "attr": true,
            "attrName": "hreflang",
            "keyInterfaceName": "SVGAElement",
            "name": "hreflang",
            "prop": true,
            "propName": "hreflang",
            "readonly": false,
            "value": "string"
          },
          "ping": {
            "attr": true,
            "attrName": "ping",
            "keyInterfaceName": "SVGAElement",
            "name": "ping",
            "prop": true,
            "propName": "ping",
            "readonly": false,
            "value": "string"
          },
          "referrerPolicy": {
            "attr": false,
            "attrName": "referrerpolicy",
            "keyInterfaceName": "SVGAElement",
            "name": "referrerPolicy",
            "prop": true,
            "propName": "referrerPolicy",
            "readonly": false,
            "value": "string"
          },
          "referrerpolicy": {
            "attr": true,
            "attrName": "referrerpolicy",
            "keyInterfaceName": "SVGAElement",
            "name": "referrerpolicy",
            "prop": false,
            "propName": "referrerPolicy",
            "readonly": false,
            "value": "string"
          },
          "rel": {
            "attr": true,
            "attrName": "rel",
            "keyInterfaceName": "SVGAElement",
            "name": "rel",
            "prop": true,
            "propName": "relList",
            "readonly": false,
            "value": "string"
          },
          "relList": {
            "attr": false,
            "attrName": "rel",
            "keyInterfaceName": "SVGAElement",
            "name": "relList",
            "prop": true,
            "propName": "relList",
            "readonly": false,
            "value": "string"
          },
          "type": {
            "attr": true,
            "attrName": "type",
            "keyInterfaceName": "SVGAElement",
            "name": "type",
            "prop": true,
            "propName": "type",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [
          "SVGAElement.href",
          "SVGAElement.target",
          "SVGGraphicsElement.requiredExtensions",
          "SVGGraphicsElement.systemLanguage",
          "SVGGraphicsElement.transform"
        ],
        "tagInterfaceName": "SVGAElement"
      },
      "altGlyph": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "SVGElement"
      },
      "altGlyphDef": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "SVGElement"
      },
      "altGlyphItem": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "SVGElement"
      },
      "animate": {
        "booleans": [],
        "events": [
          "SVGAnimationElement.onbegin",
          "SVGAnimationElement.onend",
          "SVGAnimationElement.onrepeat"
        ],
        "keys": {
          "onbegin": {
            "attr": true,
            "attrName": "onbegin",
            "keyInterfaceName": "SVGAnimationElement",
            "name": "onbegin",
            "prop": true,
            "propName": "onbegin",
            "readonly": false,
            "value": "event"
          },
          "onend": {
            "attr": true,
            "attrName": "onend",
            "keyInterfaceName": "SVGAnimationElement",
            "name": "onend",
            "prop": true,
            "propName": "onend",
            "readonly": false,
            "value": "event"
          },
          "onrepeat": {
            "attr": true,
            "attrName": "onrepeat",
            "keyInterfaceName": "SVGAnimationElement",
            "name": "onrepeat",
            "prop": true,
            "propName": "onrepeat",
            "readonly": false,
            "value": "event"
          }
        },
        "readonly": [
          "SVGAnimationElement.requiredExtensions",
          "SVGAnimationElement.systemLanguage",
          "SVGAnimationElement.targetElement"
        ],
        "tagInterfaceName": "SVGAnimateElement"
      },
      "animateColor": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "SVGElement"
      },
      "animateMotion": {
        "booleans": [],
        "events": [
          "SVGAnimationElement.onbegin",
          "SVGAnimationElement.onend",
          "SVGAnimationElement.onrepeat"
        ],
        "keys": {
          "onbegin": {
            "attr": true,
            "attrName": "onbegin",
            "keyInterfaceName": "SVGAnimationElement",
            "name": "onbegin",
            "prop": true,
            "propName": "onbegin",
            "readonly": false,
            "value": "event"
          },
          "onend": {
            "attr": true,
            "attrName": "onend",
            "keyInterfaceName": "SVGAnimationElement",
            "name": "onend",
            "prop": true,
            "propName": "onend",
            "readonly": false,
            "value": "event"
          },
          "onrepeat": {
            "attr": true,
            "attrName": "onrepeat",
            "keyInterfaceName": "SVGAnimationElement",
            "name": "onrepeat",
            "prop": true,
            "propName": "onrepeat",
            "readonly": false,
            "value": "event"
          }
        },
        "readonly": [
          "SVGAnimationElement.requiredExtensions",
          "SVGAnimationElement.systemLanguage",
          "SVGAnimationElement.targetElement"
        ],
        "tagInterfaceName": "SVGAnimateMotionElement"
      },
      "animateTransform": {
        "booleans": [],
        "events": [
          "SVGAnimationElement.onbegin",
          "SVGAnimationElement.onend",
          "SVGAnimationElement.onrepeat"
        ],
        "keys": {
          "onbegin": {
            "attr": true,
            "attrName": "onbegin",
            "keyInterfaceName": "SVGAnimationElement",
            "name": "onbegin",
            "prop": true,
            "propName": "onbegin",
            "readonly": false,
            "value": "event"
          },
          "onend": {
            "attr": true,
            "attrName": "onend",
            "keyInterfaceName": "SVGAnimationElement",
            "name": "onend",
            "prop": true,
            "propName": "onend",
            "readonly": false,
            "value": "event"
          },
          "onrepeat": {
            "attr": true,
            "attrName": "onrepeat",
            "keyInterfaceName": "SVGAnimationElement",
            "name": "onrepeat",
            "prop": true,
            "propName": "onrepeat",
            "readonly": false,
            "value": "event"
          }
        },
        "readonly": [
          "SVGAnimationElement.requiredExtensions",
          "SVGAnimationElement.systemLanguage",
          "SVGAnimationElement.targetElement"
        ],
        "tagInterfaceName": "SVGAnimateTransformElement"
      },
      "circle": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGCircleElement.cx",
          "SVGCircleElement.cy",
          "SVGCircleElement.r",
          "SVGGeometryElement.pathLength",
          "SVGGraphicsElement.requiredExtensions",
          "SVGGraphicsElement.systemLanguage",
          "SVGGraphicsElement.transform"
        ],
        "tagInterfaceName": "SVGCircleElement"
      },
      "clipPath": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGClipPathElement.clipPathUnits",
          "SVGClipPathElement.transform"
        ],
        "tagInterfaceName": "SVGClipPathElement"
      },
      "color-profile": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "SVGElement"
      },
      "cursor": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "SVGElement"
      },
      "defs": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGGraphicsElement.requiredExtensions",
          "SVGGraphicsElement.systemLanguage",
          "SVGGraphicsElement.transform"
        ],
        "tagInterfaceName": "SVGDefsElement"
      },
      "desc": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "SVGDescElement"
      },
      "ellipse": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGEllipseElement.cx",
          "SVGEllipseElement.cy",
          "SVGEllipseElement.rx",
          "SVGEllipseElement.ry",
          "SVGGeometryElement.pathLength",
          "SVGGraphicsElement.requiredExtensions",
          "SVGGraphicsElement.systemLanguage",
          "SVGGraphicsElement.transform"
        ],
        "tagInterfaceName": "SVGEllipseElement"
      },
      "feBlend": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGFEBlendElement.height",
          "SVGFEBlendElement.in1",
          "SVGFEBlendElement.in2",
          "SVGFEBlendElement.mode",
          "SVGFEBlendElement.result",
          "SVGFEBlendElement.width",
          "SVGFEBlendElement.x",
          "SVGFEBlendElement.y"
        ],
        "tagInterfaceName": "SVGFEBlendElement"
      },
      "feColorMatrix": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGFEColorMatrixElement.height",
          "SVGFEColorMatrixElement.in1",
          "SVGFEColorMatrixElement.result",
          "SVGFEColorMatrixElement.type",
          "SVGFEColorMatrixElement.values",
          "SVGFEColorMatrixElement.width",
          "SVGFEColorMatrixElement.x",
          "SVGFEColorMatrixElement.y"
        ],
        "tagInterfaceName": "SVGFEColorMatrixElement"
      },
      "feComponentTransfer": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGFEComponentTransferElement.height",
          "SVGFEComponentTransferElement.in1",
          "SVGFEComponentTransferElement.result",
          "SVGFEComponentTransferElement.width",
          "SVGFEComponentTransferElement.x",
          "SVGFEComponentTransferElement.y"
        ],
        "tagInterfaceName": "SVGFEComponentTransferElement"
      },
      "feComposite": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGFECompositeElement.height",
          "SVGFECompositeElement.in1",
          "SVGFECompositeElement.in2",
          "SVGFECompositeElement.k1",
          "SVGFECompositeElement.k2",
          "SVGFECompositeElement.k3",
          "SVGFECompositeElement.k4",
          "SVGFECompositeElement.operator",
          "SVGFECompositeElement.result",
          "SVGFECompositeElement.width",
          "SVGFECompositeElement.x",
          "SVGFECompositeElement.y"
        ],
        "tagInterfaceName": "SVGFECompositeElement"
      },
      "feConvolveMatrix": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGFEConvolveMatrixElement.bias",
          "SVGFEConvolveMatrixElement.divisor",
          "SVGFEConvolveMatrixElement.edgeMode",
          "SVGFEConvolveMatrixElement.height",
          "SVGFEConvolveMatrixElement.in1",
          "SVGFEConvolveMatrixElement.kernelMatrix",
          "SVGFEConvolveMatrixElement.kernelUnitLengthX",
          "SVGFEConvolveMatrixElement.kernelUnitLengthY",
          "SVGFEConvolveMatrixElement.orderX",
          "SVGFEConvolveMatrixElement.orderY",
          "SVGFEConvolveMatrixElement.preserveAlpha",
          "SVGFEConvolveMatrixElement.result",
          "SVGFEConvolveMatrixElement.targetX",
          "SVGFEConvolveMatrixElement.targetY",
          "SVGFEConvolveMatrixElement.width",
          "SVGFEConvolveMatrixElement.x",
          "SVGFEConvolveMatrixElement.y"
        ],
        "tagInterfaceName": "SVGFEConvolveMatrixElement"
      },
      "feDiffuseLighting": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGFEDiffuseLightingElement.diffuseConstant",
          "SVGFEDiffuseLightingElement.height",
          "SVGFEDiffuseLightingElement.in1",
          "SVGFEDiffuseLightingElement.kernelUnitLengthX",
          "SVGFEDiffuseLightingElement.kernelUnitLengthY",
          "SVGFEDiffuseLightingElement.result",
          "SVGFEDiffuseLightingElement.surfaceScale",
          "SVGFEDiffuseLightingElement.width",
          "SVGFEDiffuseLightingElement.x",
          "SVGFEDiffuseLightingElement.y"
        ],
        "tagInterfaceName": "SVGFEDiffuseLightingElement"
      },
      "feDisplacementMap": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGFEDisplacementMapElement.height",
          "SVGFEDisplacementMapElement.in1",
          "SVGFEDisplacementMapElement.in2",
          "SVGFEDisplacementMapElement.result",
          "SVGFEDisplacementMapElement.scale",
          "SVGFEDisplacementMapElement.width",
          "SVGFEDisplacementMapElement.x",
          "SVGFEDisplacementMapElement.xChannelSelector",
          "SVGFEDisplacementMapElement.y",
          "SVGFEDisplacementMapElement.yChannelSelector"
        ],
        "tagInterfaceName": "SVGFEDisplacementMapElement"
      },
      "feDistantLight": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGFEDistantLightElement.azimuth",
          "SVGFEDistantLightElement.elevation"
        ],
        "tagInterfaceName": "SVGFEDistantLightElement"
      },
      "feDropShadow": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGFEDropShadowElement.dx",
          "SVGFEDropShadowElement.dy",
          "SVGFEDropShadowElement.height",
          "SVGFEDropShadowElement.in1",
          "SVGFEDropShadowElement.result",
          "SVGFEDropShadowElement.stdDeviationX",
          "SVGFEDropShadowElement.stdDeviationY",
          "SVGFEDropShadowElement.width",
          "SVGFEDropShadowElement.x",
          "SVGFEDropShadowElement.y"
        ],
        "tagInterfaceName": "SVGFEDropShadowElement"
      },
      "feFlood": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGFEFloodElement.height",
          "SVGFEFloodElement.result",
          "SVGFEFloodElement.width",
          "SVGFEFloodElement.x",
          "SVGFEFloodElement.y"
        ],
        "tagInterfaceName": "SVGFEFloodElement"
      },
      "feFuncA": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGComponentTransferFunctionElement.amplitude",
          "SVGComponentTransferFunctionElement.exponent",
          "SVGComponentTransferFunctionElement.intercept",
          "SVGComponentTransferFunctionElement.offset",
          "SVGComponentTransferFunctionElement.slope",
          "SVGComponentTransferFunctionElement.tableValues",
          "SVGComponentTransferFunctionElement.type"
        ],
        "tagInterfaceName": "SVGFEFuncAElement"
      },
      "feFuncB": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGComponentTransferFunctionElement.amplitude",
          "SVGComponentTransferFunctionElement.exponent",
          "SVGComponentTransferFunctionElement.intercept",
          "SVGComponentTransferFunctionElement.offset",
          "SVGComponentTransferFunctionElement.slope",
          "SVGComponentTransferFunctionElement.tableValues",
          "SVGComponentTransferFunctionElement.type"
        ],
        "tagInterfaceName": "SVGFEFuncBElement"
      },
      "feFuncG": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGComponentTransferFunctionElement.amplitude",
          "SVGComponentTransferFunctionElement.exponent",
          "SVGComponentTransferFunctionElement.intercept",
          "SVGComponentTransferFunctionElement.offset",
          "SVGComponentTransferFunctionElement.slope",
          "SVGComponentTransferFunctionElement.tableValues",
          "SVGComponentTransferFunctionElement.type"
        ],
        "tagInterfaceName": "SVGFEFuncGElement"
      },
      "feFuncR": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGComponentTransferFunctionElement.amplitude",
          "SVGComponentTransferFunctionElement.exponent",
          "SVGComponentTransferFunctionElement.intercept",
          "SVGComponentTransferFunctionElement.offset",
          "SVGComponentTransferFunctionElement.slope",
          "SVGComponentTransferFunctionElement.tableValues",
          "SVGComponentTransferFunctionElement.type"
        ],
        "tagInterfaceName": "SVGFEFuncRElement"
      },
      "feGaussianBlur": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGFEGaussianBlurElement.height",
          "SVGFEGaussianBlurElement.in1",
          "SVGFEGaussianBlurElement.result",
          "SVGFEGaussianBlurElement.stdDeviationX",
          "SVGFEGaussianBlurElement.stdDeviationY",
          "SVGFEGaussianBlurElement.width",
          "SVGFEGaussianBlurElement.x",
          "SVGFEGaussianBlurElement.y"
        ],
        "tagInterfaceName": "SVGFEGaussianBlurElement"
      },
      "feImage": {
        "booleans": [],
        "events": [],
        "keys": {
          "crossOrigin": {
            "attr": false,
            "attrName": "crossorigin",
            "keyInterfaceName": "SVGFEImageElement",
            "name": "crossOrigin",
            "prop": true,
            "propName": "crossOrigin",
            "readonly": false,
            "value": "string"
          },
          "crossorigin": {
            "attr": true,
            "attrName": "crossorigin",
            "keyInterfaceName": "SVGFEImageElement",
            "name": "crossorigin",
            "prop": false,
            "propName": "crossOrigin",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [
          "SVGFEImageElement.height",
          "SVGFEImageElement.href",
          "SVGFEImageElement.preserveAspectRatio",
          "SVGFEImageElement.result",
          "SVGFEImageElement.width",
          "SVGFEImageElement.x",
          "SVGFEImageElement.y"
        ],
        "tagInterfaceName": "SVGFEImageElement"
      },
      "feMerge": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGFEMergeElement.height",
          "SVGFEMergeElement.result",
          "SVGFEMergeElement.width",
          "SVGFEMergeElement.x",
          "SVGFEMergeElement.y"
        ],
        "tagInterfaceName": "SVGFEMergeElement"
      },
      "feMergeNode": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGFEMergeNodeElement.in1"
        ],
        "tagInterfaceName": "SVGFEMergeNodeElement"
      },
      "feMorphology": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGFEMorphologyElement.height",
          "SVGFEMorphologyElement.in1",
          "SVGFEMorphologyElement.operator",
          "SVGFEMorphologyElement.radiusX",
          "SVGFEMorphologyElement.radiusY",
          "SVGFEMorphologyElement.result",
          "SVGFEMorphologyElement.width",
          "SVGFEMorphologyElement.x",
          "SVGFEMorphologyElement.y"
        ],
        "tagInterfaceName": "SVGFEMorphologyElement"
      },
      "feOffset": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGFEOffsetElement.dx",
          "SVGFEOffsetElement.dy",
          "SVGFEOffsetElement.height",
          "SVGFEOffsetElement.in1",
          "SVGFEOffsetElement.result",
          "SVGFEOffsetElement.width",
          "SVGFEOffsetElement.x",
          "SVGFEOffsetElement.y"
        ],
        "tagInterfaceName": "SVGFEOffsetElement"
      },
      "fePointLight": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGFEPointLightElement.x",
          "SVGFEPointLightElement.y",
          "SVGFEPointLightElement.z"
        ],
        "tagInterfaceName": "SVGFEPointLightElement"
      },
      "feSpecularLighting": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGFESpecularLightingElement.height",
          "SVGFESpecularLightingElement.in1",
          "SVGFESpecularLightingElement.kernelUnitLengthX",
          "SVGFESpecularLightingElement.kernelUnitLengthY",
          "SVGFESpecularLightingElement.result",
          "SVGFESpecularLightingElement.specularConstant",
          "SVGFESpecularLightingElement.specularExponent",
          "SVGFESpecularLightingElement.surfaceScale",
          "SVGFESpecularLightingElement.width",
          "SVGFESpecularLightingElement.x",
          "SVGFESpecularLightingElement.y"
        ],
        "tagInterfaceName": "SVGFESpecularLightingElement"
      },
      "feSpotLight": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGFESpotLightElement.limitingConeAngle",
          "SVGFESpotLightElement.pointsAtX",
          "SVGFESpotLightElement.pointsAtY",
          "SVGFESpotLightElement.pointsAtZ",
          "SVGFESpotLightElement.specularExponent",
          "SVGFESpotLightElement.x",
          "SVGFESpotLightElement.y",
          "SVGFESpotLightElement.z"
        ],
        "tagInterfaceName": "SVGFESpotLightElement"
      },
      "feTile": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGFETileElement.height",
          "SVGFETileElement.in1",
          "SVGFETileElement.result",
          "SVGFETileElement.width",
          "SVGFETileElement.x",
          "SVGFETileElement.y"
        ],
        "tagInterfaceName": "SVGFETileElement"
      },
      "feTurbulence": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGFETurbulenceElement.baseFrequencyX",
          "SVGFETurbulenceElement.baseFrequencyY",
          "SVGFETurbulenceElement.height",
          "SVGFETurbulenceElement.numOctaves",
          "SVGFETurbulenceElement.result",
          "SVGFETurbulenceElement.seed",
          "SVGFETurbulenceElement.stitchTiles",
          "SVGFETurbulenceElement.type",
          "SVGFETurbulenceElement.width",
          "SVGFETurbulenceElement.x",
          "SVGFETurbulenceElement.y"
        ],
        "tagInterfaceName": "SVGFETurbulenceElement"
      },
      "filter": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGFilterElement.filterUnits",
          "SVGFilterElement.height",
          "SVGFilterElement.href",
          "SVGFilterElement.primitiveUnits",
          "SVGFilterElement.width",
          "SVGFilterElement.x",
          "SVGFilterElement.y"
        ],
        "tagInterfaceName": "SVGFilterElement"
      },
      "font": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "SVGElement"
      },
      "font-face": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "SVGElement"
      },
      "font-face-format": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "SVGElement"
      },
      "font-face-name": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "SVGElement"
      },
      "font-face-src": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "SVGElement"
      },
      "font-face-uri": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "SVGElement"
      },
      "foreignObject": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGForeignObjectElement.height",
          "SVGForeignObjectElement.width",
          "SVGForeignObjectElement.x",
          "SVGForeignObjectElement.y",
          "SVGGraphicsElement.requiredExtensions",
          "SVGGraphicsElement.systemLanguage",
          "SVGGraphicsElement.transform"
        ],
        "tagInterfaceName": "SVGForeignObjectElement"
      },
      "g": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGGraphicsElement.requiredExtensions",
          "SVGGraphicsElement.systemLanguage",
          "SVGGraphicsElement.transform"
        ],
        "tagInterfaceName": "SVGGElement"
      },
      "glyph": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "SVGElement"
      },
      "glyphRef": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "SVGElement"
      },
      "hkern": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "SVGElement"
      },
      "image": {
        "booleans": [],
        "events": [],
        "keys": {
          "crossOrigin": {
            "attr": false,
            "attrName": "crossorigin",
            "keyInterfaceName": "SVGImageElement",
            "name": "crossOrigin",
            "prop": true,
            "propName": "crossOrigin",
            "readonly": false,
            "value": "string"
          },
          "crossorigin": {
            "attr": true,
            "attrName": "crossorigin",
            "keyInterfaceName": "SVGImageElement",
            "name": "crossorigin",
            "prop": false,
            "propName": "crossOrigin",
            "readonly": false,
            "value": "string"
          },
          "decoding": {
            "attr": true,
            "attrName": "decoding",
            "keyInterfaceName": "SVGImageElement",
            "name": "decoding",
            "prop": true,
            "propName": "decoding",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [
          "SVGGraphicsElement.requiredExtensions",
          "SVGGraphicsElement.systemLanguage",
          "SVGGraphicsElement.transform",
          "SVGImageElement.height",
          "SVGImageElement.href",
          "SVGImageElement.preserveAspectRatio",
          "SVGImageElement.width",
          "SVGImageElement.x",
          "SVGImageElement.y"
        ],
        "tagInterfaceName": "SVGImageElement"
      },
      "line": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGGeometryElement.pathLength",
          "SVGGraphicsElement.requiredExtensions",
          "SVGGraphicsElement.systemLanguage",
          "SVGGraphicsElement.transform",
          "SVGLineElement.x1",
          "SVGLineElement.x2",
          "SVGLineElement.y1",
          "SVGLineElement.y2"
        ],
        "tagInterfaceName": "SVGLineElement"
      },
      "linearGradient": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGGradientElement.gradientTransform",
          "SVGGradientElement.gradientUnits",
          "SVGGradientElement.href",
          "SVGGradientElement.spreadMethod",
          "SVGLinearGradientElement.x1",
          "SVGLinearGradientElement.x2",
          "SVGLinearGradientElement.y1",
          "SVGLinearGradientElement.y2"
        ],
        "tagInterfaceName": "SVGLinearGradientElement"
      },
      "marker": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGMarkerElement.markerHeight",
          "SVGMarkerElement.markerUnits",
          "SVGMarkerElement.markerWidth",
          "SVGMarkerElement.orientAngle",
          "SVGMarkerElement.orientType",
          "SVGMarkerElement.preserveAspectRatio",
          "SVGMarkerElement.refX",
          "SVGMarkerElement.refY",
          "SVGMarkerElement.viewBox"
        ],
        "tagInterfaceName": "SVGMarkerElement"
      },
      "mask": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGMaskElement.height",
          "SVGMaskElement.maskContentUnits",
          "SVGMaskElement.maskUnits",
          "SVGMaskElement.width",
          "SVGMaskElement.x",
          "SVGMaskElement.y"
        ],
        "tagInterfaceName": "SVGMaskElement"
      },
      "metadata": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "SVGMetadataElement"
      },
      "missing-glyph": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "SVGElement"
      },
      "mpath": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGMPathElement.href"
        ],
        "tagInterfaceName": "SVGMPathElement"
      },
      "path": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGGeometryElement.pathLength",
          "SVGGraphicsElement.requiredExtensions",
          "SVGGraphicsElement.systemLanguage",
          "SVGGraphicsElement.transform"
        ],
        "tagInterfaceName": "SVGPathElement"
      },
      "pattern": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGPatternElement.height",
          "SVGPatternElement.href",
          "SVGPatternElement.patternContentUnits",
          "SVGPatternElement.patternTransform",
          "SVGPatternElement.patternUnits",
          "SVGPatternElement.preserveAspectRatio",
          "SVGPatternElement.viewBox",
          "SVGPatternElement.width",
          "SVGPatternElement.x",
          "SVGPatternElement.y"
        ],
        "tagInterfaceName": "SVGPatternElement"
      },
      "polygon": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGGeometryElement.pathLength",
          "SVGGraphicsElement.requiredExtensions",
          "SVGGraphicsElement.systemLanguage",
          "SVGGraphicsElement.transform",
          "SVGPolygonElement.animatedPoints",
          "SVGPolygonElement.points"
        ],
        "tagInterfaceName": "SVGPolygonElement"
      },
      "polyline": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGGeometryElement.pathLength",
          "SVGGraphicsElement.requiredExtensions",
          "SVGGraphicsElement.systemLanguage",
          "SVGGraphicsElement.transform",
          "SVGPolylineElement.animatedPoints",
          "SVGPolylineElement.points"
        ],
        "tagInterfaceName": "SVGPolylineElement"
      },
      "radialGradient": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGGradientElement.gradientTransform",
          "SVGGradientElement.gradientUnits",
          "SVGGradientElement.href",
          "SVGGradientElement.spreadMethod",
          "SVGRadialGradientElement.cx",
          "SVGRadialGradientElement.cy",
          "SVGRadialGradientElement.fr",
          "SVGRadialGradientElement.fx",
          "SVGRadialGradientElement.fy",
          "SVGRadialGradientElement.r"
        ],
        "tagInterfaceName": "SVGRadialGradientElement"
      },
      "rect": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGGeometryElement.pathLength",
          "SVGGraphicsElement.requiredExtensions",
          "SVGGraphicsElement.systemLanguage",
          "SVGGraphicsElement.transform",
          "SVGRectElement.height",
          "SVGRectElement.rx",
          "SVGRectElement.ry",
          "SVGRectElement.width",
          "SVGRectElement.x",
          "SVGRectElement.y"
        ],
        "tagInterfaceName": "SVGRectElement"
      },
      "script": {
        "booleans": [
          "SVGScriptElement.async",
          "SVGScriptElement.defer"
        ],
        "events": [],
        "keys": {
          "async": {
            "attr": true,
            "attrName": "async",
            "keyInterfaceName": "SVGScriptElement",
            "name": "async",
            "prop": true,
            "propName": "async",
            "readonly": false,
            "value": "boolean"
          },
          "crossOrigin": {
            "attr": false,
            "attrName": "crossorigin",
            "keyInterfaceName": "SVGScriptElement",
            "name": "crossOrigin",
            "prop": true,
            "propName": "crossOrigin",
            "readonly": false,
            "value": "string"
          },
          "crossorigin": {
            "attr": true,
            "attrName": "crossorigin",
            "keyInterfaceName": "SVGScriptElement",
            "name": "crossorigin",
            "prop": false,
            "propName": "crossOrigin",
            "readonly": false,
            "value": "string"
          },
          "defer": {
            "attr": true,
            "attrName": "defer",
            "keyInterfaceName": "SVGScriptElement",
            "name": "defer",
            "prop": true,
            "propName": "defer",
            "readonly": false,
            "value": "boolean"
          },
          "type": {
            "attr": true,
            "attrName": "type",
            "keyInterfaceName": "SVGScriptElement",
            "name": "type",
            "prop": true,
            "propName": "type",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [
          "SVGScriptElement.href"
        ],
        "tagInterfaceName": "SVGScriptElement"
      },
      "set": {
        "booleans": [],
        "events": [
          "SVGAnimationElement.onbegin",
          "SVGAnimationElement.onend",
          "SVGAnimationElement.onrepeat"
        ],
        "keys": {
          "onbegin": {
            "attr": true,
            "attrName": "onbegin",
            "keyInterfaceName": "SVGAnimationElement",
            "name": "onbegin",
            "prop": true,
            "propName": "onbegin",
            "readonly": false,
            "value": "event"
          },
          "onend": {
            "attr": true,
            "attrName": "onend",
            "keyInterfaceName": "SVGAnimationElement",
            "name": "onend",
            "prop": true,
            "propName": "onend",
            "readonly": false,
            "value": "event"
          },
          "onrepeat": {
            "attr": true,
            "attrName": "onrepeat",
            "keyInterfaceName": "SVGAnimationElement",
            "name": "onrepeat",
            "prop": true,
            "propName": "onrepeat",
            "readonly": false,
            "value": "event"
          }
        },
        "readonly": [
          "SVGAnimationElement.requiredExtensions",
          "SVGAnimationElement.systemLanguage",
          "SVGAnimationElement.targetElement"
        ],
        "tagInterfaceName": "SVGSetElement"
      },
      "stop": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGStopElement.offset"
        ],
        "tagInterfaceName": "SVGStopElement"
      },
      "style": {
        "booleans": [
          "SVGStyleElement.disabled"
        ],
        "events": [],
        "keys": {
          "disabled": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "SVGStyleElement",
            "name": "disabled",
            "prop": true,
            "propName": "disabled",
            "readonly": false,
            "value": "boolean"
          },
          "media": {
            "attr": true,
            "attrName": "media",
            "keyInterfaceName": "SVGStyleElement",
            "name": "media",
            "prop": true,
            "propName": "media",
            "readonly": false,
            "value": "string"
          },
          "title": {
            "attr": true,
            "attrName": "title",
            "keyInterfaceName": "SVGStyleElement",
            "name": "title",
            "prop": true,
            "propName": "title",
            "readonly": false,
            "value": "string"
          },
          "type": {
            "attr": true,
            "attrName": "type",
            "keyInterfaceName": "SVGStyleElement",
            "name": "type",
            "prop": true,
            "propName": "type",
            "readonly": false,
            "value": "string"
          }
        },
        "readonly": [
          "SVGStyleElement.sheet"
        ],
        "tagInterfaceName": "SVGStyleElement"
      },
      "svg": {
        "booleans": [],
        "events": [],
        "keys": {
          "currentScale": {
            "attr": false,
            "attrName": "",
            "keyInterfaceName": "SVGSVGElement",
            "name": "currentScale",
            "prop": true,
            "propName": "currentScale",
            "readonly": false,
            "value": "number"
          },
          "zoomAndPan": {
            "attr": true,
            "attrName": "zoomAndPan",
            "keyInterfaceName": "SVGSVGElement",
            "name": "zoomAndPan",
            "prop": true,
            "propName": "zoomAndPan",
            "readonly": false,
            "value": "number"
          }
        },
        "readonly": [
          "SVGGraphicsElement.requiredExtensions",
          "SVGGraphicsElement.systemLanguage",
          "SVGGraphicsElement.transform",
          "SVGSVGElement.currentTranslate",
          "SVGSVGElement.height",
          "SVGSVGElement.preserveAspectRatio",
          "SVGSVGElement.viewBox",
          "SVGSVGElement.width",
          "SVGSVGElement.x",
          "SVGSVGElement.y"
        ],
        "tagInterfaceName": "SVGSVGElement"
      },
      "switch": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGGraphicsElement.requiredExtensions",
          "SVGGraphicsElement.systemLanguage",
          "SVGGraphicsElement.transform"
        ],
        "tagInterfaceName": "SVGSwitchElement"
      },
      "symbol": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGSymbolElement.preserveAspectRatio",
          "SVGSymbolElement.requiredExtensions",
          "SVGSymbolElement.systemLanguage",
          "SVGSymbolElement.viewBox"
        ],
        "tagInterfaceName": "SVGSymbolElement"
      },
      "text": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGGraphicsElement.requiredExtensions",
          "SVGGraphicsElement.systemLanguage",
          "SVGGraphicsElement.transform",
          "SVGTextContentElement.lengthAdjust",
          "SVGTextContentElement.textLength",
          "SVGTextPositioningElement.dx",
          "SVGTextPositioningElement.dy",
          "SVGTextPositioningElement.rotate",
          "SVGTextPositioningElement.x",
          "SVGTextPositioningElement.y"
        ],
        "tagInterfaceName": "SVGTextElement"
      },
      "textPath": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGGraphicsElement.requiredExtensions",
          "SVGGraphicsElement.systemLanguage",
          "SVGGraphicsElement.transform",
          "SVGTextContentElement.lengthAdjust",
          "SVGTextContentElement.textLength",
          "SVGTextPathElement.href",
          "SVGTextPathElement.method",
          "SVGTextPathElement.spacing",
          "SVGTextPathElement.startOffset"
        ],
        "tagInterfaceName": "SVGTextPathElement"
      },
      "title": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "SVGTitleElement"
      },
      "tref": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "SVGElement"
      },
      "tspan": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGGraphicsElement.requiredExtensions",
          "SVGGraphicsElement.systemLanguage",
          "SVGGraphicsElement.transform",
          "SVGTextContentElement.lengthAdjust",
          "SVGTextContentElement.textLength",
          "SVGTextPositioningElement.dx",
          "SVGTextPositioningElement.dy",
          "SVGTextPositioningElement.rotate",
          "SVGTextPositioningElement.x",
          "SVGTextPositioningElement.y"
        ],
        "tagInterfaceName": "SVGTSpanElement"
      },
      "use": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [
          "SVGGraphicsElement.requiredExtensions",
          "SVGGraphicsElement.systemLanguage",
          "SVGGraphicsElement.transform",
          "SVGUseElement.height",
          "SVGUseElement.href",
          "SVGUseElement.width",
          "SVGUseElement.x",
          "SVGUseElement.y"
        ],
        "tagInterfaceName": "SVGUseElement"
      },
      "view": {
        "booleans": [],
        "events": [],
        "keys": {
          "zoomAndPan": {
            "attr": true,
            "attrName": "zoomAndPan",
            "keyInterfaceName": "SVGViewElement",
            "name": "zoomAndPan",
            "prop": true,
            "propName": "zoomAndPan",
            "readonly": false,
            "value": "number"
          }
        },
        "readonly": [
          "SVGViewElement.preserveAspectRatio",
          "SVGViewElement.viewBox"
        ],
        "tagInterfaceName": "SVGViewElement"
      },
      "vkern": {
        "booleans": [],
        "events": [],
        "keys": {},
        "readonly": [],
        "tagInterfaceName": "SVGElement"
      }
    }
  }
}